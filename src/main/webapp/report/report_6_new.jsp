<%
/* ### Generated by AIDesigner 3.7.1.23 ### */
%>

<%@ page language="java" import="java.sql.*,java.io.*,java.text.*" %>
<%@ page contentType="text/plain; charset=euc-kr" %>

<%
Object[] userObj = null;
ReportHandler handler = new ReportHandler(request,response,userObj);
handler.service(out);
%>

<%!
class ReportHandler{
	//공통 변수 선언
	private Object[] userObj = null;
	private int nStartPage;		//각 쉬트별 시작 페이지 저장
	private int nMaxPage;		//한 쉬트가 실행된 후 생성된 최대 페이지 번호 저장
	private int nPageNum;		//현재 페이지 번호
	private int nYStartPos;		//쉬트에서 Y 시작 좌표
	private int nYEndPos;		//쉬트에서 Y 끝 좌표
	private int nYCurPos;		//현재 Y 좌표
	private int nYSavePos;		//연결된 멀티 프레임 쉬트에서 시작 Y 좌표 저장
	private int nYLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 Y 좌표 저장
	private int nXStartPos;		//쉬트에서 X 시작 좌표
	private int nXEndPos;		//쉬트에서 X 끝 좌표
	private int nXCurPos;		//현재 X 좌표
	private int nXSavePos;		//연결된 멀티 프레임 쉬트에서 시작 X 좌표 저장
	private int  nXLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 X 좌표 저장
	private boolean bIsBeforePageSkip;		//조건 밴드에서 페이지 넘기기 여부 판단
	private int nLoopRef;		//절대 양식에서 루프 참조 변수
	private String isEmpty="";		//빈 문자열 비교에 사용

	private HttpServletRequest request;
	private HttpServletResponse response;
	private JspWriter out;

	//-----데이터 변수 선언-----
	String sheet10_A1;
	String sheet10_F2;
	String sheet10_A8;
	String sheet10_A3;
	String sheet10_B3;
	String sheet10_C3;
	String sheet10_E3;
	String sheet10_I3;
	String sheet10_C4;
	String sheet10_D4;
	String sheet10_E4;
	String sheet10_F4;
	String sheet10_G4;
	String sheet10_H4;
	String sheet10_I4;
	String sheet10_A5;
	double sheet10_C5;
	double sheet10_D5;
	double sheet10_E5;
	double sheet10_F5;
	double sheet10_G5;
	double sheet10_H5;
	double sheet10_I5;
	double sheet10_A6;
	String sheet10_B6;
	double sheet10_C6;
	double sheet10_D6;
	double sheet10_E6;
	double sheet10_F6;
	double sheet10_G6;
	double sheet10_H6;
	double sheet10_I6;
	String sheet10_B7_Buf;
	int sheet10_B7_YPos;
	boolean sheet10_B7_Flag;
	String sheet10_B7;
	String sheet10_C7;
	double sheet10_D7;
	double sheet10_E7;
	double sheet10_F7;
	double sheet10_G7;
	double sheet10_H7;
	double sheet10_I7;
	boolean bEnabledVirtualMerge_detail;

	//-----Connection, Statement, ResultSet 객체 선언-----
	private Connection conn_DUNET;		//DSN DUNET Connection 객체
	private java.sql.Statement stat_master;		//ResultSet master 객체를 생성하기 위한 Statement 객체
	private ResultSet master;		//ResultSet master 객체
	private java.sql.Statement stat_totSum;		//ResultSet totSum 객체를 생성하기 위한 Statement 객체
	private ResultSet totSum;		//ResultSet totSum 객체
	private java.sql.Statement stat_detail;		//ResultSet detail 객체를 생성하기 위한 Statement 객체
	private ResultSet detail;		//ResultSet detail 객체

	//-----SQL 변수 선언-----
	private String sql_master;		//ResultSet master 객체를 생성하기 위한 쿼리문 저장
	private String sql_totSum;		//ResultSet totSum 객체를 생성하기 위한 쿼리문 저장
	private String sql_detail;		//ResultSet detail 객체를 생성하기 위한 쿼리문 저장

	//-----쿼리 필드 변수 선언-----
	//ResultSet master 객체에서 필드 값을 받는 쿼리 필드 변수
	private double master_GR_POINT;
	private double master_GRSEQ_CNT;
	private double master_PLAN_INWON;
	private double master_GRSEQ_RESUCNT;
	private double master_MAN_RESUCNT;
	private double master_WO_RESUCNT;
	private double master_RESU_INWON;

	//ResultSet totSum 객체에서 필드 값을 받는 쿼리 필드 변수
	private double totSum_GRSEQ_CNT;
	private double totSum_PLAN_INWON;
	private double totSum_GRSEQ_RESUCNT;
	private double totSum_MAN_RESUCNT;
	private double totSum_WO_RESUCNT;
	private double totSum_RESU_INWON;

	//ResultSet detail 객체에서 필드 값을 받는 쿼리 필드 변수
	private double detail_GR_POINT;
	private String detail_GRCODE;
	private String detail_GRCODENM;
	private String detail_GRSEQ_CNT;
	private double detail_PLAN_INWON;
	private double detail_GRSEQ_RESUCNT;
	private double detail_MAN_RESUCNT;
	private double detail_WO_RESUCNT;
	private double detail_RESU_INWON;

	//파라미터 변수 선언
	String p_startmonth_Param;
	String p_endmonth_Param;
	String p_dept_Param;

	//-----사용자 정의 변수 및 함수-----
	private String removeHtmlTag(String srcText) {
		//대체(치환)하고 하는 문자열이 더 있는 경우 아래의 배열에 쌍으로 추가
		String[] relSrc = {"&NBSP;", "&lt;", "&gt;", "&amp;", "&quot;"};
		String[] relTgt = {" ", "<", ">", "&", "\"" };

		int pointer = 0, st = 0, ed = 0;
		int size = srcText.length();
		StringBuffer buf = new StringBuffer(size);

		while (st != -1) {
			st = srcText.indexOf("<", st);
			if (st != -1) {
				ed = srcText.indexOf(">", st+1);
				if (ed == -1) {
					break;
				} 
				buf.append(srcText.substring(pointer, st));
				pointer = st = ed + 1;
			}
		}
		if (pointer < size) {
			buf.append(srcText.substring(pointer));
		}

		srcText = buf.toString();
		// 특수문자열의 대체가 불필요한 경우 아래의 for 문을 주석처리 가능
		for (int i = 0; i < relSrc.length; i++) {
			pointer = st = 0;
			if (srcText.indexOf(relSrc[i], pointer) == -1) continue;

			buf.setLength(0);
			size = srcText.length();
			int len = relSrc[i].length();

			while ((pointer = srcText.indexOf(relSrc[i], pointer)) != -1) {
				buf.append(srcText.substring(st, pointer));
				buf.append(relTgt[i]);
				pointer += len;
				st = pointer;
			}
			if (st < size) {
				buf.append(srcText.substring(st));
			}
			srcText = buf.toString();
		}

		return srcText;
	}


	//ReportHandler 생성자 함수
	ReportHandler(HttpServletRequest request,HttpServletResponse response,Object[] userObj){
		this.request=request;
		this.response=response;
		this.userObj=userObj;
	}

	//ReportHandler 서비스 함수
	void service(JspWriter out) throws Exception{
		try{    //try 구문
			this.out=out;
			nMaxPage=0;    //nMaxPage 초기화

			//스크립트 헤더 함수 호출
			getScriptHeader("A4", "2100x2970", "9", "VERTICAL");

			//파라미터 설정 함수 호출
			setParam();

			//고정 데이터 초기화 함수 호출
			initConstVarient();

			//Connection 및 Statement 객체 생성 함수 호출
			createConnAndStateObject();

			//쿼리문 초기화 함수 호출
			initSQLConst();

			//쉬트 함수 호출
			//SHEET=Sheet1   FRAME=0 함수 호출
			executeSheet10();

			//---------------스크립트 종료---------------
			out.print("--SCRIPT_END--\r");
		}catch(Exception e){    //catch 구문
			out.print(e);
			out.print("AI!REPORT JSP ERROR!!!!\r");
		}finally{    //finally 구문
			try{    //finally try 구문
				//DataSet Close
				if(stat_detail!=null) stat_detail.close();
				if(totSum!=null) totSum.close();
				if(stat_totSum!=null) stat_totSum.close();
				if(master!=null) master.close();
				if(stat_master!=null) stat_master.close();
				if(conn_DUNET!=null) conn_DUNET.close();
			}catch(Exception e){    //finally catch 구문
			}    //end finally try
		}    //end try
	}

	//-----쉬트 함수-----
	//-----SHEET=Sheet1   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet10( ) throws Exception{
		//쉬트 초기화 함수 호출
		initSheetVariant(45, 96, 547, 778, true);

		//시작 페이지 번호 출력
		out.print("-- " + nPageNum + " PAGE --\r");

		//밴드 함수 호출
		getScriptFromtitle(true, true);    //머리글 밴드 호출
		getScriptFromfoot(true, true);    //바닥글 밴드 호출
		getScriptFrommaster(true);    //반복 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기
	}

	//-----밴드 함수-----
	//----title HeaderBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : title
	//----밴드 종류 : 머리글 밴드
	//----bIsFrist : 쉬트 함수에서 최초로 호출될 때 true, 페이지 스킵 함수에서 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromtitle(boolean bIsFirst, boolean bIsPrint) throws Exception{
		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//데이터 변수 초기화
			sheet10_F2="";

			//데이터 변수 할당
			sheet10_F2= "검색기간 : " + p_startmonth_Param.substring(0,4) +"/"+p_startmonth_Param.substring(4,6) + "~ " + p_endmonth_Param.substring(0,4) +"/"+p_endmonth_Param.substring(4,6);
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 함수 호출
			writeScripttitle();
		}   //end if(bIsPrint)
	}

	//----foot FooterBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : foot
	//----밴드 종류 : 바닥글 밴드
	//----bIsFrist : 쉬트 함수에서 최초로 호출될 때 true, 페이지 스킵 함수에서 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromfoot(boolean bIsFirst, boolean bIsPrint) throws Exception{
		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 함수 호출
			writeScriptfoot();
		}   //end if(bIsPrint)
	}

	//----header RepeatHeader Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : header
	//----밴드 종류 : 반복 헤더
	//----bIsFrist : 반복 밴드 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromheader(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=60;	//밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//DataSet 객체 생성
			//ResultSet totSum 객체의 생성
			if(totSum==null){
				totSum = stat_totSum.executeQuery(sql_totSum);
			}else{
				totSum.beforeFirst();
			}

			//데이터 fetch
			if(totSum.next()){
				setFieldVariableFromtotSum();	//ResultSet totSum에서 필드 값 설정
			}else{
				setFieldInitFromtotSum();	//ResultSet totSum의 필드 값 초기화
			}

			//데이터 변수 초기화
			sheet10_C5=0;
			sheet10_D5=0;
			sheet10_E5=0;
			sheet10_F5=0;
			sheet10_G5=0;
			sheet10_H5=0;
			sheet10_I5=0;

			//데이터 변수 할당
			sheet10_C5=totSum_GRSEQ_CNT;
			sheet10_D5=totSum_PLAN_INWON;
			sheet10_E5=totSum_GRSEQ_RESUCNT;
			sheet10_F5=totSum_RESU_INWON;
			sheet10_G5=totSum_MAN_RESUCNT;
			sheet10_H5=totSum_WO_RESUCNT;
			sheet10_I5=100*sheet10_F5/sheet10_D5;
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptheader();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----detail RepeatBand Start-----
	//-----소속 쉬트 : SHEET=Sheet1   FRAME=Frame0
	//-----밴드 이름 : detail
	//-----밴드 종류 : 반복 밴드
	//-----bIsPrint : 감추기 속성 설정 여부 true면 출력, false면 스크립트를 생성하지 않음
	private void getScriptFromdetail(boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;    //밴드 출력 높이
		boolean bIsFirst=true;

		//데이터 변수 초기화
		sheet10_B7_Buf="";
		sheet10_B7_Flag=true;
		sheet10_B7="";
		sheet10_C7="";
		sheet10_D7=0;
		sheet10_E7=0;
		sheet10_F7=0;
		sheet10_G7=0;
		sheet10_H7=0;
		sheet10_I7=0;
		bEnabledVirtualMerge_detail=false;

		//DataSet 객체 생성
		//ResultSet detail 객체의 생성
		initSQLdetailVarient();
		detail = stat_detail.executeQuery(sql_detail);

		while(detail.next()){   //자동으로 생성되는 반복 밴드의 루프문
			//데이터 fetch
			setFieldVariableFromdetail();	//RecordSet detail에서 필드 값 설정

			if(bIsFirst){   //밴드 호출 후 루프 내에서 한번 만 실행되는 코드
			}   //end if(bIsFirst)

			//데이터 변수 할당
			if(!sheet10_B7.equals(detail_GRCODENM)){
				if(!bIsFirst){
					sheet10_B7_Buf=sheet10_B7;
					sheet10_B7_Flag=true;
				}
				sheet10_B7=detail_GRCODENM;
			}
			sheet10_C7=detail_GRSEQ_CNT;
			sheet10_D7=detail_PLAN_INWON;
			sheet10_E7=detail_GRSEQ_RESUCNT;
			sheet10_F7=detail_RESU_INWON;
			sheet10_G7=detail_MAN_RESUCNT;
			sheet10_H7=detail_WO_RESUCNT;
			sheet10_I7=100*sheet10_F7/sheet10_D7;

			//루프 내부 가상병합 출력 함수 호출
			if(bIsPrint){
				writeScriptVirtualMergedetail();
			}

			//AI 스크립트 출력
			if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
				if(isPageSkip(nYCurPos+nBandHeight)){   //스크립트 출력 영역 검사
					//가상병합 출력 및 한번만 데이터 Reset
					pageSkipVirtualMergedetail();

					//페이지 스킵 함수 호출
					pageSkip(10);

					//반복 헤더 및 부모 반복단위 호출
					getScriptFromheader(false, true);	//반복 헤더 호출
					writeScriptmaster();

					nYCurPos=nYCurPos+20;
				}   //end if(page skip test)

				//스크립트 출력 함수 호출
				writeScriptdetail();

				//페이지 연결 출력 및 가상병합 플래그 Reset
				if(sheet10_B7_Flag){
					sheet10_B7_YPos=nYCurPos;
					sheet10_B7_Buf="";
					sheet10_B7_Flag=false;
				}
				bEnabledVirtualMerge_detail=true;

				//다음 출력 좌표 설정
				nYCurPos=nYCurPos+nBandHeight;
			}   //end if(bIsPrint)

			//bIsFirst 및 출력 라인 설정
			bIsFirst=false;
		}   //while end

		//루프 외부 가상병합 출력 함수 호출
		sheet10_B7_Buf=sheet10_B7;
		if(bIsPrint){
			writeScriptVirtualMergedetail();
		}

		//DataSet Close
		if(detail!=null) detail.close();
	}

	//----detail 반복밴드 Page Skip시 가상 병합 데이터 설정 및 출력 함수----
	private void pageSkipVirtualMergedetail( ) throws Exception{
		//가상 병합 데이터 설정 및 출력
		if(bEnabledVirtualMerge_detail){
			if(sheet10_B7_Buf.equals(isEmpty)){
				sheet10_B7_Buf=sheet10_B7;
			}else{
				sheet10_B7_Buf="";
			}
			sheet10_B7_Flag=true;
			writeScriptVirtualMergedetail();
		}
	}

	//-----master RepeatBand Start-----
	//-----소속 쉬트 : SHEET=Sheet1   FRAME=Frame0
	//-----밴드 이름 : master
	//-----밴드 종류 : 반복 밴드
	//-----bIsPrint : 감추기 속성 설정 여부 true면 출력, false면 스크립트를 생성하지 않음
	private void getScriptFrommaster(boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;    //밴드 출력 높이
		boolean bIsFirst=true;

		//데이터 변수 초기화
		sheet10_A6=0;
		sheet10_C6=0;
		sheet10_D6=0;
		sheet10_E6=0;
		sheet10_F6=0;
		sheet10_G6=0;
		sheet10_H6=0;
		sheet10_I6=0;

		//DataSet 객체 생성
		//ResultSet master 객체의 생성
		if(master==null){
			master = stat_master.executeQuery(sql_master);
		}else{
			master.beforeFirst();
		}

		while(master.next()){   //자동으로 생성되는 반복 밴드의 루프문
			//데이터 fetch
			setFieldVariableFrommaster();	//RecordSet master에서 필드 값 설정

			if(bIsFirst){   //밴드 호출 후 루프 내에서 한번 만 실행되는 코드
				//반복 헤더 호출 및 조건 플래그 초기화
				getScriptFromheader(bIsFirst, true);	//반복 헤더 호출
			}   //end if(bIsFirst)

			//데이터 변수 할당
			sheet10_A6=master_GR_POINT;
			sheet10_C6=master_GRSEQ_CNT;
			sheet10_D6=master_PLAN_INWON;
			sheet10_E6=master_GRSEQ_RESUCNT;
			sheet10_F6=master_RESU_INWON;
			sheet10_G6=master_MAN_RESUCNT;
			sheet10_H6=master_WO_RESUCNT;
			sheet10_I6=100*sheet10_F6/sheet10_D6;

			//AI 스크립트 출력
			if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
				if(isPageSkip(nYCurPos+nBandHeight)){   //스크립트 출력 영역 검사
					//페이지 스킵 함수 호출
					pageSkip(10);

					//반복 헤더 및 부모 반복단위 호출
					getScriptFromheader(false, true);	//반복 헤더 호출
				}   //end if(page skip test)

				//스크립트 출력 함수 호출
				writeScriptmaster();

				//다음 출력 좌표 설정
				nYCurPos=nYCurPos+nBandHeight;
			}   //end if(bIsPrint)

			//루프 내부 자식 밴드 호출
			getScriptFromdetail(true);

			//bIsFirst 및 출력 라인 설정
			bIsFirst=false;
		}   //while end
	}

	//-----스크립트 출력 함수-----
	//----title 스크립트 문 출력 함수----
	private void writeScripttitle( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT(45,38,502,1,16,0/,돋움체,RGB[0,0,0],BOLD, , ,NONE,38,1)");
		out.println(sheet10_A1+"\r");
		out.print("^PRINT(383,76,164,2,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F2+"\r");
	}

	//----foot 스크립트 문 출력 함수----
	private void writeScriptfoot( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT(45,778,502,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A8+"\r");
	}

	//----header 스크립트 문 출력 함수----
	private void writeScriptheader( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos)+",75,40,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",75,40,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",75,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",75,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",75,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",75,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,40,1)");
		out.println(sheet10_A3+"\r");
		out.println("^CELLBG("+(nXCurPos+75)+","+(nYCurPos)+",140,40,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+75)+","+(nYCurPos)+",140,40,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+75)+","+(nYCurPos)+",140,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+75)+","+(nYCurPos)+",140,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+75)+","+(nYCurPos)+",140,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+75)+","+(nYCurPos)+",140,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,40,1)");
		out.println(sheet10_B3+"\r");
		out.println("^CELLBG("+(nXCurPos+215)+","+(nYCurPos)+",82,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos)+",82,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos)+",82,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos)+",82,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos)+",82,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+215)+","+(nYCurPos)+",82,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_C3+"\r");
		out.println("^CELLBG("+(nXCurPos+297)+","+(nYCurPos)+",164,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos)+",164,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos)+",164,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos)+",164,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos)+",164,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+297)+","+(nYCurPos)+",164,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E3+"\r");
		out.println("^CELLBG("+(nXCurPos+461)+","+(nYCurPos)+",41,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+461)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+461)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+461)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+461)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+461)+","+(nYCurPos)+",41,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_I3+"\r");
		out.println("^CELLBG("+(nXCurPos+215)+","+(nYCurPos+20)+",41,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+215)+","+(nYCurPos+20)+",41,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_C4+"\r");
		out.println("^CELLBG("+(nXCurPos+256)+","+(nYCurPos+20)+",41,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+256)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+256)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+256)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+256)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+256)+","+(nYCurPos+20)+",41,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_D4+"\r");
		out.println("^CELLBG("+(nXCurPos+297)+","+(nYCurPos+20)+",41,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+297)+","+(nYCurPos+20)+",41,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E4+"\r");
		out.println("^CELLBG("+(nXCurPos+338)+","+(nYCurPos+20)+",41,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+338)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+338)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+338)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+338)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+338)+","+(nYCurPos+20)+",41,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F4+"\r");
		out.println("^CELLBG("+(nXCurPos+379)+","+(nYCurPos+20)+",41,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+379)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+379)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+379)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+379)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+379)+","+(nYCurPos+20)+",41,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_G4+"\r");
		out.println("^CELLBG("+(nXCurPos+420)+","+(nYCurPos+20)+",41,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+420)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+420)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+420)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+420)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+420)+","+(nYCurPos+20)+",41,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_H4+"\r");
		out.println("^CELLBG("+(nXCurPos+461)+","+(nYCurPos+20)+",41,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+461)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+461)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+461)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+461)+","+(nYCurPos+20)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+461)+","+(nYCurPos+20)+",41,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_I4+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+40)+",215,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",215,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",215,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",215,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",215,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+40)+",215,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A5+"\r");
		out.println("^CELLBG("+(nXCurPos+215)+","+(nYCurPos+40)+",41,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+215)+","+(nYCurPos+40)+",41,2,10,1/1/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_C5+"\r");
		out.println("^CELLBG("+(nXCurPos+256)+","+(nYCurPos+40)+",41,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+256)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+256)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+256)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+256)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+256)+","+(nYCurPos+40)+",41,2,10,1/1/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_D5+"\r");
		out.println("^CELLBG("+(nXCurPos+297)+","+(nYCurPos+40)+",41,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+297)+","+(nYCurPos+40)+",41,2,10,1/1/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E5+"\r");
		out.println("^CELLBG("+(nXCurPos+338)+","+(nYCurPos+40)+",41,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+338)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+338)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+338)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+338)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+338)+","+(nYCurPos+40)+",41,2,10,1/1/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F5+"\r");
		out.println("^CELLBG("+(nXCurPos+379)+","+(nYCurPos+40)+",41,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+379)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+379)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+379)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+379)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+379)+","+(nYCurPos+40)+",41,2,10,1/1/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_G5+"\r");
		out.println("^CELLBG("+(nXCurPos+420)+","+(nYCurPos+40)+",41,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+420)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+420)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+420)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+420)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+420)+","+(nYCurPos+40)+",41,2,10,1/1/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_H5+"\r");
		out.println("^CELLBG("+(nXCurPos+461)+","+(nYCurPos+40)+",41,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+461)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+461)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+461)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+461)+","+(nYCurPos+40)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+461)+","+(nYCurPos+40)+",41,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_I5+"\r");
	}

	//----detail 스크립트 문 출력 함수----
	private void writeScriptdetail( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",75,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",75,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",75,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",75,20,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+215)+","+(nYCurPos)+",41,2,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_C7+"\r");
		out.println("^CELLLINE("+(nXCurPos+256)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+256)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+256)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+256)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+256)+","+(nYCurPos)+",41,2,10,1/1/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_D7+"\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+297)+","+(nYCurPos)+",41,2,10,1/1/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E7+"\r");
		out.println("^CELLLINE("+(nXCurPos+338)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+338)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+338)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+338)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+338)+","+(nYCurPos)+",41,2,10,1/1/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F7+"\r");
		out.println("^CELLLINE("+(nXCurPos+379)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+379)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+379)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+379)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+379)+","+(nYCurPos)+",41,2,10,1/1/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_G7+"\r");
		out.println("^CELLLINE("+(nXCurPos+420)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+420)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+420)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+420)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+420)+","+(nYCurPos)+",41,2,10,1/1/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_H7+"\r");
		out.println("^CELLLINE("+(nXCurPos+461)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+461)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+461)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+461)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+461)+","+(nYCurPos)+",41,2,10,1/1/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_I7+"\r");
	}

	//----detail VirtualMerge 스크립트 문 출력 함수----
	private void writeScriptVirtualMergedetail( ) throws Exception{
		//가상병합 스크립트문 생성
		if(!sheet10_B7_Buf.equals(isEmpty)){
			out.println("^CELLLINE("+(nXCurPos+75)+","+(sheet10_B7_YPos)+",140,"+(nYCurPos-sheet10_B7_YPos)+",0,RGB[0,0,0],0)\r");
			out.println("^CELLLINE("+(nXCurPos+75)+","+(sheet10_B7_YPos)+",140,"+(nYCurPos-sheet10_B7_YPos)+",0,RGB[0,0,0],1)\r");
			out.println("^CELLLINE("+(nXCurPos+75)+","+(sheet10_B7_YPos)+",140,"+(nYCurPos-sheet10_B7_YPos)+",0,RGB[0,0,0],2)\r");
			out.println("^CELLLINE("+(nXCurPos+75)+","+(sheet10_B7_YPos)+",140,"+(nYCurPos-sheet10_B7_YPos)+",0,RGB[0,0,0],3)\r");
			out.print("^PRINT("+(nXCurPos+75)+","+(sheet10_B7_YPos)+",140,0,10,0/,돋움체,RGB[0,0,0], , , ,XL,"+(nYCurPos-sheet10_B7_YPos)+",1)");
			out.println(sheet10_B7_Buf+"\r");
		}
	}

	//----master 스크립트 문 출력 함수----
	private void writeScriptmaster( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos)+",75,20,1,RGB[223,223,223],RGB[223,223,223],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",75,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",75,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",75,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",75,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",75,0,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A6+"\r");
		out.println("^CELLBG("+(nXCurPos+75)+","+(nYCurPos)+",140,20,1,RGB[223,223,223],RGB[223,223,223],0)\r");
		out.println("^CELLLINE("+(nXCurPos+75)+","+(nYCurPos)+",140,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+75)+","+(nYCurPos)+",140,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+75)+","+(nYCurPos)+",140,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+75)+","+(nYCurPos)+",140,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+75)+","+(nYCurPos)+",140,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_B6+"\r");
		out.println("^CELLBG("+(nXCurPos+215)+","+(nYCurPos)+",41,20,1,RGB[223,223,223],RGB[223,223,223],0)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+215)+","+(nYCurPos)+",41,2,10,1/1/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_C6+"\r");
		out.println("^CELLBG("+(nXCurPos+256)+","+(nYCurPos)+",41,20,1,RGB[223,223,223],RGB[223,223,223],0)\r");
		out.println("^CELLLINE("+(nXCurPos+256)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+256)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+256)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+256)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+256)+","+(nYCurPos)+",41,2,10,1/1/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_D6+"\r");
		out.println("^CELLBG("+(nXCurPos+297)+","+(nYCurPos)+",41,20,1,RGB[223,223,223],RGB[223,223,223],0)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+297)+","+(nYCurPos)+",41,2,10,1/1/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E6+"\r");
		out.println("^CELLBG("+(nXCurPos+338)+","+(nYCurPos)+",41,20,1,RGB[223,223,223],RGB[223,223,223],0)\r");
		out.println("^CELLLINE("+(nXCurPos+338)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+338)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+338)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+338)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+338)+","+(nYCurPos)+",41,2,10,1/1/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F6+"\r");
		out.println("^CELLBG("+(nXCurPos+379)+","+(nYCurPos)+",41,20,1,RGB[223,223,223],RGB[223,223,223],0)\r");
		out.println("^CELLLINE("+(nXCurPos+379)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+379)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+379)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+379)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+379)+","+(nYCurPos)+",41,2,10,1/1/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_G6+"\r");
		out.println("^CELLBG("+(nXCurPos+420)+","+(nYCurPos)+",41,20,1,RGB[223,223,223],RGB[223,223,223],0)\r");
		out.println("^CELLLINE("+(nXCurPos+420)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+420)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+420)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+420)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+420)+","+(nYCurPos)+",41,2,10,1/1/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_H6+"\r");
		out.println("^CELLBG("+(nXCurPos+461)+","+(nYCurPos)+",41,20,1,RGB[223,223,223],RGB[223,223,223],0)\r");
		out.println("^CELLLINE("+(nXCurPos+461)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+461)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+461)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+461)+","+(nYCurPos)+",41,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+461)+","+(nYCurPos)+",41,2,10,1/1/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_I6+"\r");
	}

	//파라미터 설정 함수
	private void setParam(){
		p_startmonth_Param=toKor(GetB(request.getParameter("p_startmonth")));
		p_endmonth_Param=toKor(GetB(request.getParameter("p_endmonth")));
		p_dept_Param=toKor(GetB(request.getParameter("p_dept")));
	}

	//-----Connection 및 Statement 객체 생성 함수-----
	private void createConnAndStateObject() throws Exception{
		//DUNET Connection 객체 생성
		Class.forName("oracle.jdbc.driver.OracleDriver");
		conn_DUNET = DriverManager.getConnection("jdbc:oracle:thin:@192.168.10.253:1521:loti","inchlms","fhxl21");stat_master=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_totSum=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_detail=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
	}

	//-----SQL문 변수 초기화 함수-----
	private void initSQLConst(){
		sql_master = "SELECT nvl(a.gr_point,0) gr_point ";
		sql_master = sql_master + "     , sum(a.grseq_cnt) grseq_cnt ";
		sql_master = sql_master + "     , sum(a.plan_inwon) plan_inwon ";
		sql_master = sql_master + "     , sum(a.grseq_resucnt) grseq_resucnt ";
		sql_master = sql_master + "     , sum(a.man_resucnt) man_resucnt ";
		sql_master = sql_master + "     , sum(a.wo_resucnt) wo_resucnt ";
		sql_master = sql_master + "     , sum(a.resu_inwon) resu_inwon ";
		sql_master = sql_master + "  FROM ( ";
		sql_master = sql_master + "SELECT nvl(a.gr_point,0) as gr_point ";
		sql_master = sql_master + "     , a.grcode ";
		sql_master = sql_master + "     , min(d.grcodenm) ";
		sql_master = sql_master + "     , count(distinct a.grseq) grseq_cnt ";
		sql_master = sql_master + "     , nvl(sum(a.tseat),0) plan_inwon ";
		sql_master = sql_master + "     , count(distinct c.grseq) grseq_resucnt ";
		sql_master = sql_master + "     , nvl(sum(c.man),0) man_resucnt ";
		sql_master = sql_master + "     , nvl(sum(c.wo),0) wo_resucnt ";
		sql_master = sql_master + "     , nvl(sum(c.totno),0) resu_inwon  ";
		sql_master = sql_master + " FROM tb_grseq a, tb_maincode mc, tb_subcode sc ";
		sql_master = sql_master + "   , (SELECT grcode ";
		sql_master = sql_master + "           , grseq ";
		sql_master = sql_master + "	   , sum(decode(substr(rresno,7,1),'1',decode('" + p_dept_Param + "', null, 1, '', 1,  rdept, 1, 0),0)) man ";
		sql_master = sql_master + "           , sum(decode(substr(rresno,7,1),'2',decode('" + p_dept_Param + "', null, 1, '', 1,  rdept, 1, 0),0)) wo ";
		sql_master = sql_master + "           , sum(decode('" + p_dept_Param + "', null, 1, '', 1,  rdept, 1, 0)) totno  ";
		sql_master = sql_master + "        FROM tb_grresult group by grcode,grseq) c  ";
		sql_master = sql_master + "   , tb_grcode d ";
		sql_master = sql_master + "WHERE a.grcode = d.grcode  ";
		sql_master = sql_master + "AND a.grcode=c.grcode(+)  ";
		sql_master = sql_master + "AND a.grseq=c.grseq(+)  ";
		sql_master = sql_master + "AND (mc.cd_gubun(+)='G' AND d.grtype=mc.major_code(+))  ";
		sql_master = sql_master + "AND (sc.cd_gubun(+)='G' AND d.grtype=sc.major_code(+) AND d.grsubcd=sc.minor_code(+)) ";
		sql_master = sql_master + "AND to_char(a.enddate,'yyyymm') between '" + p_startmonth_Param + "' AND '" + p_endmonth_Param + "'  ";
		sql_master = sql_master + "GROUP BY a.gr_point, a.grcode,a.grseq ) a  ";
		sql_master = sql_master + "GROUP BY a.gr_point";
		sql_totSum = "SELECT sum(a.grseq_cnt) grseq_cnt ";
		sql_totSum = sql_totSum + "     , sum(a.plan_inwon) plan_inwon ";
		sql_totSum = sql_totSum + "     , sum(a.grseq_resucnt) grseq_resucnt ";
		sql_totSum = sql_totSum + "     , sum(a.man_resucnt) man_resucnt ";
		sql_totSum = sql_totSum + "     , sum(a.wo_resucnt) wo_resucnt ";
		sql_totSum = sql_totSum + "     , sum(a.resu_inwon) resu_inwon ";
		sql_totSum = sql_totSum + "  FROM ( ";
		sql_totSum = sql_totSum + "SELECT a.gr_point as gr_point ";
		sql_totSum = sql_totSum + "     , a.grcode ";
		sql_totSum = sql_totSum + "     , min(d.grcodenm) ";
		sql_totSum = sql_totSum + "     , count(distinct a.grseq) grseq_cnt ";
		sql_totSum = sql_totSum + "     , nvl(sum(a.tseat),0) plan_inwon ";
		sql_totSum = sql_totSum + "     , count(distinct c.grseq) grseq_resucnt ";
		sql_totSum = sql_totSum + "     , nvl(sum(c.man),0) man_resucnt ";
		sql_totSum = sql_totSum + "     , nvl(sum(c.wo),0) wo_resucnt ";
		sql_totSum = sql_totSum + "     , nvl(sum(c.totno),0) resu_inwon  ";
		sql_totSum = sql_totSum + " FROM tb_grseq a, tb_maincode mc, tb_subcode sc ";
		sql_totSum = sql_totSum + "   , (SELECT grcode ";
		sql_totSum = sql_totSum + "           , grseq ";
		sql_totSum = sql_totSum + "	   , sum(decode(substr(rresno,7,1),'1',decode('" + p_dept_Param + "', null, 1, '', 1,  rdept, 1, 0),0)) man ";
		sql_totSum = sql_totSum + "           , sum(decode(substr(rresno,7,1),'2',decode('" + p_dept_Param + "', null, 1, '', 1,  rdept, 1, 0),0)) wo ";
		sql_totSum = sql_totSum + "           , sum(decode('" + p_dept_Param + "', null, 1, '', 1,  rdept, 1, 0)) totno  ";
		sql_totSum = sql_totSum + "        FROM tb_grresult group by grcode,grseq) c  ";
		sql_totSum = sql_totSum + "   , tb_grcode d ";
		sql_totSum = sql_totSum + "WHERE a.grcode = d.grcode  ";
		sql_totSum = sql_totSum + "AND a.grcode=c.grcode(+)  ";
		sql_totSum = sql_totSum + "AND a.grseq=c.grseq(+)  ";
		sql_totSum = sql_totSum + "AND (mc.cd_gubun(+)='G' AND d.grtype=mc.major_code(+))  ";
		sql_totSum = sql_totSum + "AND (sc.cd_gubun(+)='G' AND d.grtype=sc.major_code(+) AND d.grsubcd=sc.minor_code(+)) ";
		sql_totSum = sql_totSum + "AND to_char(a.enddate,'yyyymm') between '" + p_startmonth_Param + "' AND '" + p_endmonth_Param + "'  ";
		sql_totSum = sql_totSum + "GROUP BY a.gr_point, a.grcode,a.grseq ) a";
	}

	private void initSQLdetailVarient(){
		sql_detail = "SELECT nvl(a.gr_point,0) as gr_point ";
		sql_detail = sql_detail + "     , a.grcode ";
		sql_detail = sql_detail + "     , min(d.grcodenm) as grcodenm ";
		sql_detail = sql_detail + "     , a.grseq grseq_cnt ";
		sql_detail = sql_detail + "     , nvl(sum(a.tseat),0) plan_inwon ";
		sql_detail = sql_detail + "     , count(distinct c.grseq) grseq_resucnt ";
		sql_detail = sql_detail + "     , nvl(sum(c.man),0) man_resucnt ";
		sql_detail = sql_detail + "     , nvl(sum(c.wo),0) wo_resucnt ";
		sql_detail = sql_detail + "     , nvl(sum(c.totno),0) resu_inwon  ";
		sql_detail = sql_detail + " FROM tb_grseq a, tb_maincode mc, tb_subcode sc ";
		sql_detail = sql_detail + "   , (SELECT grcode ";
		sql_detail = sql_detail + "           , grseq ";
		sql_detail = sql_detail + "	   , sum(decode(substr(rresno,7,1),'1',decode('" + p_dept_Param + "', null, 1, '', 1,  rdept, 1, 0),0)) man ";
		sql_detail = sql_detail + "           , sum(decode(substr(rresno,7,1),'2',decode('" + p_dept_Param + "', null, 1, '', 1,  rdept, 1, 0),0)) wo ";
		sql_detail = sql_detail + "           , sum(decode('" + p_dept_Param + "', null, 1, '', 1,  rdept, 1, 0)) totno  ";
		sql_detail = sql_detail + "        FROM tb_grresult group by grcode,grseq) c  ";
		sql_detail = sql_detail + "   , tb_grcode d ";
		sql_detail = sql_detail + "WHERE a.grcode = d.grcode  ";
		sql_detail = sql_detail + "AND a.grcode=c.grcode(+)  ";
		sql_detail = sql_detail + "AND a.grseq=c.grseq(+)  ";
		sql_detail = sql_detail + "AND (mc.cd_gubun(+)='G' AND d.grtype=mc.major_code(+))  ";
		sql_detail = sql_detail + "AND (sc.cd_gubun(+)='G' AND d.grtype=sc.major_code(+) AND d.grsubcd=sc.minor_code(+)) ";
		sql_detail = sql_detail + "AND nvl(a.gr_point,0) = '" + master_GR_POINT + "' ";
		sql_detail = sql_detail + "AND to_char(a.enddate,'yyyymm') between '" + p_startmonth_Param + "' AND '" + p_endmonth_Param + "'  ";
		sql_detail = sql_detail + "GROUP BY a.gr_point, a.grcode,a.grseq";
	}

	//-----ResultSet 객체에서 필드 값 설정 함수-----
	//ResultSet master 객체에서 필드 값 설정 함수
	private void setFieldVariableFrommaster() throws Exception{
		master_GR_POINT=master.getDouble(1);
		master_GRSEQ_CNT=master.getDouble(2);
		master_PLAN_INWON=master.getDouble(3);
		master_GRSEQ_RESUCNT=master.getDouble(4);
		master_MAN_RESUCNT=master.getDouble(5);
		master_WO_RESUCNT=master.getDouble(6);
		master_RESU_INWON=master.getDouble(7);
	}

	//ResultSet master 객체의 필드 값 초기화 함수
	private void setFieldInitFrommaster(){
		master_GR_POINT=0;
		master_GRSEQ_CNT=0;
		master_PLAN_INWON=0;
		master_GRSEQ_RESUCNT=0;
		master_MAN_RESUCNT=0;
		master_WO_RESUCNT=0;
		master_RESU_INWON=0;
	}

	//ResultSet totSum 객체에서 필드 값 설정 함수
	private void setFieldVariableFromtotSum() throws Exception{
		totSum_GRSEQ_CNT=totSum.getDouble(1);
		totSum_PLAN_INWON=totSum.getDouble(2);
		totSum_GRSEQ_RESUCNT=totSum.getDouble(3);
		totSum_MAN_RESUCNT=totSum.getDouble(4);
		totSum_WO_RESUCNT=totSum.getDouble(5);
		totSum_RESU_INWON=totSum.getDouble(6);
	}

	//ResultSet totSum 객체의 필드 값 초기화 함수
	private void setFieldInitFromtotSum(){
		totSum_GRSEQ_CNT=0;
		totSum_PLAN_INWON=0;
		totSum_GRSEQ_RESUCNT=0;
		totSum_MAN_RESUCNT=0;
		totSum_WO_RESUCNT=0;
		totSum_RESU_INWON=0;
	}

	//ResultSet detail 객체에서 필드 값 설정 함수
	private void setFieldVariableFromdetail() throws Exception{
		detail_GR_POINT=detail.getDouble(1);
		detail_GRCODE=GetB(detail.getString(2));
		detail_GRCODENM=GetB(detail.getString(3));
		detail_GRSEQ_CNT=GetB(detail.getString(4));
		detail_PLAN_INWON=detail.getDouble(5);
		detail_GRSEQ_RESUCNT=detail.getDouble(6);
		detail_MAN_RESUCNT=detail.getDouble(7);
		detail_WO_RESUCNT=detail.getDouble(8);
		detail_RESU_INWON=detail.getDouble(9);
	}

	//ResultSet detail 객체의 필드 값 초기화 함수
	private void setFieldInitFromdetail(){
		detail_GR_POINT=0;
		detail_GRCODE="";
		detail_GRCODENM="";
		detail_GRSEQ_CNT="";
		detail_PLAN_INWON=0;
		detail_GRSEQ_RESUCNT=0;
		detail_MAN_RESUCNT=0;
		detail_WO_RESUCNT=0;
		detail_RESU_INWON=0;
	}

	//-----고정 데이터 초기화 함수-----
	private void initConstVarient(){
		sheet10_A1="과정별교육계획-과정 부여점수별 통계";
		sheet10_A8="#PAGE / #TOTALPAGE";
		sheet10_A3="부여점수";
		sheet10_B3="과정명";
		sheet10_C3="계획";
		sheet10_E3="실적";
		sheet10_I3="비율";
		sheet10_C4="기수";
		sheet10_D4="인원";
		sheet10_E4="횟수";
		sheet10_F4="합계";
		sheet10_G4="남";
		sheet10_H4="여";
		sheet10_I4="(%)";
		sheet10_A5="총        계";
		sheet10_B6="소     계";
	}

	//-----페이지 스킵 관련 함수-----
	//페이지 스킵시 호출되는 함수로서 페이지 번호를 증가시키고 페이지 지시문 출력 그리고 Y좌표 초기화
	//매개변수에 따라 해당 쉬트의 배경 이미지, 머리글 밴드, 바닥글 밴드 함수 호출
	private void pageSkip(int nIndex) throws Exception{
		nXCurPos=nXStartPos;
		nYCurPos=nYStartPos;
		nPageNum=nPageNum+1;
		out.print("-- " + nPageNum + " PAGE --\r");

		switch(nIndex){
			case 10:		//SHEET=Sheet=1   FRAME=0에서 페이지 스킵시
			getScriptFromtitle(false, true);		//머리글 밴드 호출
			getScriptFromfoot(false, true);		//바닥글 밴드 호출
			break;
		}
	}

	//페이지 스킵이 필요한지 검사하는 함수
	private boolean isPageSkip(int nTestPos){
		if(nTestPos>nYEndPos){
			return true;
		}else{
			return false;
		}
	}

	//-----공통 함수 선언-----
	private void getScriptHeader(String paper, String size, String value, String orient) throws Exception{
		out.print("--SCRIPT_START31--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void getSheetPaperInfo(String paper, String size, String value, String orient) throws Exception{
		out.print("--PAPER_INFO--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void initSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bFirstFrame){
		if(bFirstFrame){
			nStartPage=nMaxPage+1;
			nYLastPos=0;
		}
		nPageNum=nStartPage;
		nYStartPos=constStartY;
		nYEndPos=constEndY;
		nYCurPos=nYStartPos;
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
	}

	private void initChildSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bIsMultiFrame, boolean bIsFirstFrame){
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
		nYStartPos=constStartY;
		nYEndPos=constEndY;

		if(bIsMultiFrame){
			if(bIsFirstFrame){
				nStartPage=nPageNum;
				nYSavePos=nYCurPos;
				nYLastPos=0;
			}else{
				nPageNum=nStartPage;
				nYCurPos=nYSavePos;
			}
		}else{
			nStartPage=nPageNum;
		}
	}

	//Empty Row만으로 구성되어 출력 위치를 조정하기 위한 VoidBand 함수
	//nRangePos - VoidBand의 출력 영역
	//nIndex - PageSkip 함수 호출시 전달할 쉬트 인덱스
	private boolean voidBandNoneData(int nRangePos, int nIndex) throws Exception{
		int nTestPos;
		nTestPos=nYCurPos+nRangePos;
		if(isPageSkip(nTestPos)){
			pageSkip(nIndex);
			return true;
		}else{
			nYCurPos=nYCurPos+nRangePos;
			return false;
		}
	}

	private String Get0(String str){
		if(str==null){
			return "0";
		}else{
			if(str.equals("")){
				return "0";
			}else{
				return str;
			}
		}
	}

	private String GetB(String str){
		if(str==null){
			return "";
		}else{
			return str;
		}
	}

	private double SUM(double accVal, double tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(double accVal, long tmpVal){
		return(accVal+(double)tmpVal);
	}

	private long SUM(long accVal, long tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(long accVal, double tmpVal){
		return((double)accVal+tmpVal);
	}

	private long COUNT(long accuCNT){
		return ++accuCNT;
	}

	private long MIN(long maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(long maxV, double maxTempV){
		if((double)maxV<=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, double maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}
	private long MAX(long maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(long maxV, double maxTempV){
		if((double)maxV>=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, double maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}

	private double AVG(double sumVal, long cntVal){
		return(sumVal/cntVal);
	}

	private double AVG(long sumVal, long cntVal){
		return((double)sumVal/(double)cntVal);
	}

	private String aiReplace(String strAll, String strSrc, String strDest) {
		while(strAll.indexOf(strSrc) != -1) {
			strAll = strAll.substring(0, strAll.indexOf(strSrc)) + strDest + strAll.substring(strAll.indexOf(strSrc) + strSrc.length(), strAll.length());
		}
		return strAll;
	}

	private String toDate() {
		SimpleDateFormat dateFormat=new SimpleDateFormat("'#SERVERDATE#'yyyy/MM/dd/HH/mm/ss");
		java.util.Date currentDate = new java.util.Date();
		return dateFormat.format(currentDate);
	}

	final String toKor (String en){
		if(en==null){
			return "";
		}
		try{
			return new String(en.getBytes("8859_1"), "KSC5601");
		}catch(Exception e){return en;}
	}
}
%>
