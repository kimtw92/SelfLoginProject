<%
/* ### Generated by AIDesigner 3.7.1.22 ### */
%>

<%@ page language="java" import="java.sql.*,java.io.*,java.text.*" %>
<%@ page contentType="text/plain; charset=euc-kr" %>

<%
Object[] userObj = null;
ReportHandler handler = new ReportHandler(request,response,userObj);
handler.service(out);
%>

<%!
class ReportHandler{
	//공통 변수 선언
	private Object[] userObj = null;
	private int nStartPage;		//각 쉬트별 시작 페이지 저장
	private int nMaxPage;		//한 쉬트가 실행된 후 생성된 최대 페이지 번호 저장
	private int nPageNum;		//현재 페이지 번호
	private int nYStartPos;		//쉬트에서 Y 시작 좌표
	private int nYEndPos;		//쉬트에서 Y 끝 좌표
	private int nYCurPos;		//현재 Y 좌표
	private int nYSavePos;		//연결된 멀티 프레임 쉬트에서 시작 Y 좌표 저장
	private int nYLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 Y 좌표 저장
	private int nXStartPos;		//쉬트에서 X 시작 좌표
	private int nXEndPos;		//쉬트에서 X 끝 좌표
	private int nXCurPos;		//현재 X 좌표
	private int nXSavePos;		//연결된 멀티 프레임 쉬트에서 시작 X 좌표 저장
	private int  nXLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 X 좌표 저장
	private boolean bIsBeforePageSkip;		//조건 밴드에서 페이지 넘기기 여부 판단
	private int nLoopRef;		//절대 양식에서 루프 참조 변수
	private String isEmpty="";		//빈 문자열 비교에 사용

	private HttpServletRequest request;
	private HttpServletResponse response;
	private JspWriter out;

	//-----데이터 변수 선언-----
	String sheet10_A1;
	String sheet10_A2;
	String sheet10_K2;
	String sheet10_A7;
	String sheet10_A4;
	String sheet10_B4;
	String sheet10_C4;
	String sheet10_D4;
	String sheet10_E4;
	String sheet10_F4;
	String sheet10_G4;
	String sheet10_H4;
	String sheet10_I4;
	String sheet10_J4;
	String sheet10_K4;
	String sheet10_L4;
	String sheet10_M4;
	String sheet10_N4;
	String sheet10_O4;
	String sheet10_P4;
	String sheet10_A5;
	double sheet10_C5;
	double sheet10_D5;
	double sheet10_E5;
	double sheet10_F5;
	double sheet10_G5;
	double sheet10_H5;
	double sheet10_I5;
	double sheet10_J5;
	double sheet10_K5;
	double sheet10_L5;
	double sheet10_M5;
	double sheet10_N5;
	double sheet10_O5;
	double sheet10_A6;
	String sheet10_B6;
	double sheet10_C6;
	double sheet10_D6;
	double sheet10_E6;
	double sheet10_F6;
	double sheet10_G6;
	double sheet10_H6;
	double sheet10_I6;
	double sheet10_J6;
	double sheet10_K6;
	double sheet10_L6;
	double sheet10_M6;
	double sheet10_N6;
	double sheet10_O6;
	double sheet10_P6;

	//-----Connection, Statement, ResultSet 객체 선언-----
	private Connection conn_DUNET;		//DSN DUNET Connection 객체
	private java.sql.Statement stat_Query;		//ResultSet Query 객체를 생성하기 위한 Statement 객체
	private ResultSet Query;		//ResultSet Query 객체
	private java.sql.Statement stat_totAvg;		//ResultSet totAvg 객체를 생성하기 위한 Statement 객체
	private ResultSet totAvg;		//ResultSet totAvg 객체

	//-----SQL 변수 선언-----
	private String sql_Query;		//ResultSet Query 객체를 생성하기 위한 쿼리문 저장
	private String sql_totAvg;		//ResultSet totAvg 객체를 생성하기 위한 쿼리문 저장

	//-----쿼리 필드 변수 선언-----
	//ResultSet Query 객체에서 필드 값을 받는 쿼리 필드 변수
	private double Query_EDUNO;
	private String Query_RNAME;
	private double Query_MEXAMPOINT;
	private double Query_LEXAMPOINT;
	private double Query_NEXAMPOINT;
	private double Query_QUIZPOINT;
	private double Query_REPORTPOINT;
	private double Query_BUNPOINT;
	private double Query_SILPOINT;
	private double Query_GUNPOINT;
	private double Query_TCHEVPOINT;
	private double Query_COURSEPOINT;
	private double Query_MISPOINT;
	private double Query_ADDPOINT;
	private double Query_PACCEPT;
	private double Query_SEQNO;
	private String Query_GRCODE;
	private String Query_GRSEQ;
	private String Query_USERNO;
	private double Query_BONPOINT;

	//ResultSet totAvg 객체에서 필드 값을 받는 쿼리 필드 변수
	private String totAvg_MEXAMPOINT;
	private String totAvg_LEXAMPOINT;
	private String totAvg_NEXAMPOINT;
	private String totAvg_QUIZPOINT;
	private String totAvg_REPORTPOINT;
	private String totAvg_BUNPOINT;
	private String totAvg_SILPOINT;
	private String totAvg_GUNPOINT;
	private String totAvg_TCHEVPOINT;
	private String totAvg_COURSEPOINT;
	private String totAvg_MISPOINT;
	private String totAvg_ADDPOINT;
	private String totAvg_PACCEPT;

	//파라미터 변수 선언
	String p_grcode_Param;
	String p_grseq_Param;
	String p_order_Param;
	String p_selsubjcnt_Param;
	String p_grcodenm_Param;
	String p_ordernm_Param;
	String p_selsubjnm_Param;
	String p_selsubj_Param;

	//ReportHandler 생성자 함수
	ReportHandler(HttpServletRequest request,HttpServletResponse response,Object[] userObj){
		this.request=request;
		this.response=response;
		this.userObj=userObj;
	}

	//ReportHandler 서비스 함수
	void service(JspWriter out) throws Exception{
		try{    //try 구문
			this.out=out;
			nMaxPage=0;    //nMaxPage 초기화

			//스크립트 헤더 함수 호출
			getScriptHeader("A4", "2100x2970", "9", "VERTICAL");

			//파라미터 설정 함수 호출
			setParam();

			//고정 데이터 초기화 함수 호출
			initConstVarient();

			//Connection 및 Statement 객체 생성 함수 호출
			createConnAndStateObject();

			//쿼리문 초기화 함수 호출
			initSQLConst();

			//쉬트 함수 호출
			//SHEET=Sheet1   FRAME=0 함수 호출
			executeSheet10();

			//---------------스크립트 종료---------------
			out.print("--SCRIPT_END--\r");
		}catch(Exception e){    //catch 구문
			out.print(e);
			out.print("AI!REPORT JSP ERROR!!!!\r");
		}finally{    //finally 구문
			try{    //finally try 구문
				//DataSet Close
				if(totAvg!=null) totAvg.close();
				if(stat_totAvg!=null) stat_totAvg.close();
				if(Query!=null) Query.close();
				if(stat_Query!=null) stat_Query.close();
				if(conn_DUNET!=null) conn_DUNET.close();
			}catch(Exception e){    //finally catch 구문
			}    //end finally try
		}    //end try
	}

	//-----쉬트 함수-----
	//-----SHEET=Sheet1   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet10( ) throws Exception{
		//쉬트 초기화 함수 호출
		initSheetVariant(41, 101, 555, 778, true);

		//시작 페이지 번호 출력
		out.print("-- " + nPageNum + " PAGE --\r");

		//밴드 함수 호출
		getScriptFromtitle(true, true);    //머리글 밴드 호출
		getScriptFromfoot(true, true);    //바닥글 밴드 호출
		getScriptFromloop(true);    //반복 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기
	}

	//-----밴드 함수-----
	//----title HeaderBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : title
	//----밴드 종류 : 머리글 밴드
	//----bIsFrist : 쉬트 함수에서 최초로 호출될 때 true, 페이지 스킵 함수에서 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromtitle(boolean bIsFirst, boolean bIsPrint) throws Exception{
		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//데이터 변수 초기화
			sheet10_A2="";

			//데이터 변수 할당
			sheet10_A2= p_grseq_Param.substring(0,4) + "년도 " + p_grcodenm_Param + " " + p_grseq_Param.substring(4,6) + "기 " + p_selsubjnm_Param;
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 함수 호출
			writeScripttitle();
		}   //end if(bIsPrint)
	}

	//----foot FooterBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : foot
	//----밴드 종류 : 바닥글 밴드
	//----bIsFrist : 쉬트 함수에서 최초로 호출될 때 true, 페이지 스킵 함수에서 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromfoot(boolean bIsFirst, boolean bIsPrint) throws Exception{
		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 함수 호출
			writeScriptfoot();
		}   //end if(bIsPrint)
	}

	//----header RepeatHeader Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : header
	//----밴드 종류 : 반복 헤더
	//----bIsFrist : 반복 밴드 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromheader(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=65;	//밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//DataSet 객체 생성
			//ResultSet totAvg 객체의 생성
			if(totAvg==null){
				totAvg = stat_totAvg.executeQuery(sql_totAvg);
			}else{
				totAvg.beforeFirst();
			}

			//데이터 fetch
			if(totAvg.next()){
				setFieldVariableFromtotAvg();	//ResultSet totAvg에서 필드 값 설정
			}else{
				setFieldInitFromtotAvg();	//ResultSet totAvg의 필드 값 초기화
			}

			//데이터 변수 초기화
			sheet10_C5=0;
			sheet10_D5=0;
			sheet10_E5=0;
			sheet10_F5=0;
			sheet10_G5=0;
			sheet10_H5=0;
			sheet10_I5=0;
			sheet10_J5=0;
			sheet10_K5=0;
			sheet10_L5=0;
			sheet10_M5=0;
			sheet10_N5=0;
			sheet10_O5=0;

			//데이터 변수 할당
			sheet10_C5=Double.parseDouble(Get0(totAvg_MEXAMPOINT));
			sheet10_D5=Double.parseDouble(Get0(totAvg_LEXAMPOINT));
			sheet10_E5=Double.parseDouble(Get0(totAvg_NEXAMPOINT));
			sheet10_F5=Double.parseDouble(Get0(totAvg_QUIZPOINT));
			sheet10_G5=Double.parseDouble(Get0(totAvg_REPORTPOINT));
			sheet10_H5=Double.parseDouble(Get0(totAvg_BUNPOINT));
			sheet10_I5=Double.parseDouble(Get0(totAvg_SILPOINT));
			sheet10_J5=Double.parseDouble(Get0(totAvg_GUNPOINT));
			sheet10_K5=Double.parseDouble(Get0(totAvg_TCHEVPOINT));
			sheet10_L5=Double.parseDouble(Get0(totAvg_COURSEPOINT));
			sheet10_M5=Double.parseDouble(Get0(totAvg_MISPOINT));
			sheet10_N5=Double.parseDouble(Get0(totAvg_ADDPOINT));
			sheet10_O5=Double.parseDouble(Get0(totAvg_PACCEPT));
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptheader();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----loop RepeatBand Start-----
	//-----소속 쉬트 : SHEET=Sheet1   FRAME=Frame0
	//-----밴드 이름 : loop
	//-----밴드 종류 : 반복 밴드
	//-----bIsPrint : 감추기 속성 설정 여부 true면 출력, false면 스크립트를 생성하지 않음
	private void getScriptFromloop(boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;    //밴드 출력 높이
		boolean bIsFirst=true;

		//데이터 변수 초기화
		sheet10_A6=0;
		sheet10_B6="";
		sheet10_C6=0;
		sheet10_D6=0;
		sheet10_E6=0;
		sheet10_F6=0;
		sheet10_G6=0;
		sheet10_H6=0;
		sheet10_I6=0;
		sheet10_J6=0;
		sheet10_K6=0;
		sheet10_L6=0;
		sheet10_M6=0;
		sheet10_N6=0;
		sheet10_O6=0;
		sheet10_P6=0;

		//DataSet 객체 생성
		//ResultSet Query 객체의 생성
		if(Query==null){
			Query = stat_Query.executeQuery(sql_Query);
		}else{
			Query.beforeFirst();
		}

		while(Query.next()){   //자동으로 생성되는 반복 밴드의 루프문
			//데이터 fetch
			setFieldVariableFromQuery();	//RecordSet Query에서 필드 값 설정

			if(bIsFirst){   //밴드 호출 후 루프 내에서 한번 만 실행되는 코드
				//반복 헤더 호출 및 조건 플래그 초기화
				getScriptFromheader(bIsFirst, true);	//반복 헤더 호출
			}   //end if(bIsFirst)

			//데이터 변수 할당
			sheet10_A6=Query_EDUNO;
			sheet10_B6=Query_RNAME;
			sheet10_C6=Query_MEXAMPOINT;
			sheet10_D6=Query_LEXAMPOINT;
			sheet10_E6=Query_NEXAMPOINT;
			sheet10_F6=Query_QUIZPOINT;
			sheet10_G6=Query_REPORTPOINT;
			sheet10_H6=Query_BUNPOINT;
			sheet10_I6=Query_SILPOINT;
			sheet10_J6=Query_GUNPOINT;
			sheet10_K6=Query_TCHEVPOINT;
			sheet10_L6=Query_COURSEPOINT;
			sheet10_M6=Query_MISPOINT;
			sheet10_N6=Query_ADDPOINT;
			sheet10_O6=Query_PACCEPT;
			sheet10_P6=Query_SEQNO;

			//AI 스크립트 출력
			if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
				if(isPageSkip(nYCurPos+nBandHeight)){   //스크립트 출력 영역 검사
					//페이지 스킵 함수 호출
					pageSkip(10);

					//반복 헤더 및 부모 반복단위 호출
					getScriptFromheader(false, true);	//반복 헤더 호출
				}   //end if(page skip test)

				//스크립트 출력 함수 호출
				writeScriptloop();

				//다음 출력 좌표 설정
				nYCurPos=nYCurPos+nBandHeight;
			}   //end if(bIsPrint)

			//bIsFirst 및 출력 라인 설정
			bIsFirst=false;
		}   //while end
	}

	//-----스크립트 출력 함수-----
	//----title 스크립트 문 출력 함수----
	private void writeScripttitle( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT(41,38,512,1,16,0/,돋움체,RGB[0,0,0],BOLD, , ,NONE,38,1)");
		out.println(sheet10_A1+"\r");
		out.print("^PRINT(41,76,324,0,11,0/,돋움체,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_A2+"\r");
		out.print("^PRINT(365,76,188,2,14,0/,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_K2+"\r");
	}

	//----foot 스크립트 문 출력 함수----
	private void writeScriptfoot( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT(41,778,512,1,11,0/,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A7+"\r");
	}

	//----header 스크립트 문 출력 함수----
	private void writeScriptheader( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos)+",34,45,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",34,45,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",34,45,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",34,45,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",34,45,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",34,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,45,1)");
		out.println(sheet10_A4+"\r");
		out.println("^CELLBG("+(nXCurPos+34)+","+(nYCurPos)+",43,45,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+34)+","+(nYCurPos)+",43,45,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+34)+","+(nYCurPos)+",43,45,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+34)+","+(nYCurPos)+",43,45,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+34)+","+(nYCurPos)+",43,45,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+34)+","+(nYCurPos)+",43,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,45,1)");
		out.println(sheet10_B4+"\r");
		out.println("^CELLBG("+(nXCurPos+77)+","+(nYCurPos)+",30,45,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+77)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+77)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+77)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+77)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+77)+","+(nYCurPos)+",30,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,45,1)");
		out.println(sheet10_C4+"\r");
		out.println("^CELLBG("+(nXCurPos+107)+","+(nYCurPos)+",30,45,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+107)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+107)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+107)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+107)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+107)+","+(nYCurPos)+",30,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,45,1)");
		out.println(sheet10_D4+"\r");
		out.println("^CELLBG("+(nXCurPos+137)+","+(nYCurPos)+",30,45,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+137)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+137)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+137)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+137)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+137)+","+(nYCurPos)+",30,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,45,1)");
		out.println(sheet10_E4+"\r");
		out.println("^CELLBG("+(nXCurPos+167)+","+(nYCurPos)+",30,45,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+167)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+167)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+167)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+167)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+167)+","+(nYCurPos)+",30,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,45,1)");
		out.println(sheet10_F4+"\r");
		out.println("^CELLBG("+(nXCurPos+197)+","+(nYCurPos)+",37,45,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+197)+","+(nYCurPos)+",37,45,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+197)+","+(nYCurPos)+",37,45,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+197)+","+(nYCurPos)+",37,45,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+197)+","+(nYCurPos)+",37,45,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+197)+","+(nYCurPos)+",37,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,45,1)");
		out.println(sheet10_G4+"\r");
		out.println("^CELLBG("+(nXCurPos+234)+","+(nYCurPos)+",30,45,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+234)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+234)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+234)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+234)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+234)+","+(nYCurPos)+",30,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,45,1)");
		out.println(sheet10_H4+"\r");
		out.println("^CELLBG("+(nXCurPos+264)+","+(nYCurPos)+",30,45,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+264)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+264)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+264)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+264)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+264)+","+(nYCurPos)+",30,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,45,1)");
		out.println(sheet10_I4+"\r");
		out.println("^CELLBG("+(nXCurPos+294)+","+(nYCurPos)+",30,45,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+294)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+294)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+294)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+294)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+294)+","+(nYCurPos)+",30,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,45,1)");
		out.println(sheet10_J4+"\r");
		out.println("^CELLBG("+(nXCurPos+324)+","+(nYCurPos)+",30,45,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+324)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+324)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+324)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+324)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+324)+","+(nYCurPos)+",30,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,45,1)");
		out.println(sheet10_K4+"\r");
		out.println("^CELLBG("+(nXCurPos+354)+","+(nYCurPos)+",30,45,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos)+",30,45,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+354)+","+(nYCurPos)+",30,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,45,1)");
		out.println(sheet10_L4+"\r");
		out.println("^CELLBG("+(nXCurPos+384)+","+(nYCurPos)+",32,45,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+384)+","+(nYCurPos)+",32,45,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+384)+","+(nYCurPos)+",32,45,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+384)+","+(nYCurPos)+",32,45,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+384)+","+(nYCurPos)+",32,45,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+384)+","+(nYCurPos)+",32,0,10,0/,돋움체,RGB[0,0,0], , , ,NONE,45,1)");
		out.println(sheet10_M4+"\r");
		out.println("^CELLBG("+(nXCurPos+416)+","+(nYCurPos)+",32,45,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos)+",32,45,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos)+",32,45,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos)+",32,45,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos)+",32,45,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+416)+","+(nYCurPos)+",32,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,45,1)");
		out.println(sheet10_N4+"\r");
		out.println("^CELLBG("+(nXCurPos+448)+","+(nYCurPos)+",32,45,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+448)+","+(nYCurPos)+",32,45,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+448)+","+(nYCurPos)+",32,45,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+448)+","+(nYCurPos)+",32,45,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+448)+","+(nYCurPos)+",32,45,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+448)+","+(nYCurPos)+",32,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,45,1)");
		out.println(sheet10_O4+"\r");
		out.println("^CELLBG("+(nXCurPos+480)+","+(nYCurPos)+",32,65,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+480)+","+(nYCurPos)+",32,65,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+480)+","+(nYCurPos)+",32,65,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+480)+","+(nYCurPos)+",32,65,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+480)+","+(nYCurPos)+",32,65,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+480)+","+(nYCurPos)+",32,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,65,1)");
		out.println(sheet10_P4+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+45)+",77,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+45)+",77,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+45)+",77,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+45)+",77,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+45)+",77,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+45)+",77,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A5+"\r");
		out.println("^CELLBG("+(nXCurPos+77)+","+(nYCurPos+45)+",30,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+77)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+77)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+77)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+77)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+77)+","+(nYCurPos+45)+",30,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_C5+"\r");
		out.println("^CELLBG("+(nXCurPos+107)+","+(nYCurPos+45)+",30,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+107)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+107)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+107)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+107)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+107)+","+(nYCurPos+45)+",30,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_D5+"\r");
		out.println("^CELLBG("+(nXCurPos+137)+","+(nYCurPos+45)+",30,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+137)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+137)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+137)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+137)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+137)+","+(nYCurPos+45)+",30,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E5+"\r");
		out.println("^CELLBG("+(nXCurPos+167)+","+(nYCurPos+45)+",30,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+167)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+167)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+167)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+167)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+167)+","+(nYCurPos+45)+",30,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F5+"\r");
		out.println("^CELLBG("+(nXCurPos+197)+","+(nYCurPos+45)+",37,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+197)+","+(nYCurPos+45)+",37,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+197)+","+(nYCurPos+45)+",37,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+197)+","+(nYCurPos+45)+",37,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+197)+","+(nYCurPos+45)+",37,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+197)+","+(nYCurPos+45)+",37,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_G5+"\r");
		out.println("^CELLBG("+(nXCurPos+234)+","+(nYCurPos+45)+",30,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+234)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+234)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+234)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+234)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+234)+","+(nYCurPos+45)+",30,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_H5+"\r");
		out.println("^CELLBG("+(nXCurPos+264)+","+(nYCurPos+45)+",30,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+264)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+264)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+264)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+264)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+264)+","+(nYCurPos+45)+",30,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_I5+"\r");
		out.println("^CELLBG("+(nXCurPos+294)+","+(nYCurPos+45)+",30,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+294)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+294)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+294)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+294)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+294)+","+(nYCurPos+45)+",30,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_J5+"\r");
		out.println("^CELLBG("+(nXCurPos+324)+","+(nYCurPos+45)+",30,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+324)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+324)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+324)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+324)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+324)+","+(nYCurPos+45)+",30,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_K5+"\r");
		out.println("^CELLBG("+(nXCurPos+354)+","+(nYCurPos+45)+",30,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos+45)+",30,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+354)+","+(nYCurPos+45)+",30,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_L5+"\r");
		out.println("^CELLBG("+(nXCurPos+384)+","+(nYCurPos+45)+",32,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+384)+","+(nYCurPos+45)+",32,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+384)+","+(nYCurPos+45)+",32,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+384)+","+(nYCurPos+45)+",32,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+384)+","+(nYCurPos+45)+",32,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+384)+","+(nYCurPos+45)+",32,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_M5+"\r");
		out.println("^CELLBG("+(nXCurPos+416)+","+(nYCurPos+45)+",32,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+45)+",32,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+45)+",32,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+45)+",32,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+45)+",32,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+416)+","+(nYCurPos+45)+",32,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_N5+"\r");
		out.println("^CELLBG("+(nXCurPos+448)+","+(nYCurPos+45)+",32,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+448)+","+(nYCurPos+45)+",32,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+448)+","+(nYCurPos+45)+",32,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+448)+","+(nYCurPos+45)+",32,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+448)+","+(nYCurPos+45)+",32,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+448)+","+(nYCurPos+45)+",32,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_O5+"\r");
	}

	//----loop 스크립트 문 출력 함수----
	private void writeScriptloop( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",34,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",34,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",34,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",34,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",34,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A6+"\r");
		out.println("^CELLLINE("+(nXCurPos+34)+","+(nYCurPos)+",43,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+34)+","+(nYCurPos)+",43,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+34)+","+(nYCurPos)+",43,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+34)+","+(nYCurPos)+",43,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+34)+","+(nYCurPos)+",43,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_B6+"\r");
		out.println("^CELLLINE("+(nXCurPos+77)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+77)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+77)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+77)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+77)+","+(nYCurPos)+",30,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_C6+"\r");
		out.println("^CELLLINE("+(nXCurPos+107)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+107)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+107)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+107)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+107)+","+(nYCurPos)+",30,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_D6+"\r");
		out.println("^CELLLINE("+(nXCurPos+137)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+137)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+137)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+137)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+137)+","+(nYCurPos)+",30,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E6+"\r");
		out.println("^CELLLINE("+(nXCurPos+167)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+167)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+167)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+167)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+167)+","+(nYCurPos)+",30,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F6+"\r");
		out.println("^CELLLINE("+(nXCurPos+197)+","+(nYCurPos)+",37,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+197)+","+(nYCurPos)+",37,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+197)+","+(nYCurPos)+",37,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+197)+","+(nYCurPos)+",37,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+197)+","+(nYCurPos)+",37,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_G6+"\r");
		out.println("^CELLLINE("+(nXCurPos+234)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+234)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+234)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+234)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+234)+","+(nYCurPos)+",30,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_H6+"\r");
		out.println("^CELLLINE("+(nXCurPos+264)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+264)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+264)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+264)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+264)+","+(nYCurPos)+",30,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_I6+"\r");
		out.println("^CELLLINE("+(nXCurPos+294)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+294)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+294)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+294)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+294)+","+(nYCurPos)+",30,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_J6+"\r");
		out.println("^CELLLINE("+(nXCurPos+324)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+324)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+324)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+324)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+324)+","+(nYCurPos)+",30,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_K6+"\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos)+",30,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+354)+","+(nYCurPos)+",30,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_L6+"\r");
		out.println("^CELLLINE("+(nXCurPos+384)+","+(nYCurPos)+",32,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+384)+","+(nYCurPos)+",32,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+384)+","+(nYCurPos)+",32,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+384)+","+(nYCurPos)+",32,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+384)+","+(nYCurPos)+",32,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_M6+"\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos)+",32,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos)+",32,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos)+",32,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos)+",32,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+416)+","+(nYCurPos)+",32,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_N6+"\r");
		out.println("^CELLLINE("+(nXCurPos+448)+","+(nYCurPos)+",32,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+448)+","+(nYCurPos)+",32,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+448)+","+(nYCurPos)+",32,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+448)+","+(nYCurPos)+",32,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+448)+","+(nYCurPos)+",32,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_O6+"\r");
		out.println("^CELLLINE("+(nXCurPos+480)+","+(nYCurPos)+",32,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+480)+","+(nYCurPos)+",32,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+480)+","+(nYCurPos)+",32,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+480)+","+(nYCurPos)+",32,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+480)+","+(nYCurPos)+",32,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_P6+"\r");
	}

	//파라미터 설정 함수
	private void setParam(){
		p_grcode_Param=toKor(GetB(request.getParameter("p_grcode")));
		p_grseq_Param=toKor(GetB(request.getParameter("p_grseq")));
		p_order_Param=toKor(GetB(request.getParameter("p_order")));
		p_selsubjcnt_Param=toKor(GetB(request.getParameter("p_selsubjcnt")));
		p_grcodenm_Param=toKor(GetB(request.getParameter("p_grcodenm")));
		p_ordernm_Param=toKor(GetB(request.getParameter("p_ordernm")));
		p_selsubjnm_Param=toKor(GetB(request.getParameter("p_selsubjnm")));
		p_selsubj_Param=toKor(GetB(request.getParameter("p_selsubj")));
	}

	//-----Connection 및 Statement 객체 생성 함수-----
	private void createConnAndStateObject() throws Exception{
		//DUNET Connection 객체 생성
		Class.forName("oracle.jdbc.driver.OracleDriver").newInstance();
		conn_DUNET=DriverManager.getConnection("jdbc:oracle:thin:@192.168.10.253:1521:LOTI","inchlms","fhxl21");stat_Query=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_totAvg=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
	}

	//-----SQL문 변수 초기화 함수-----
	private void initSQLConst(){
		sql_Query = "SELECT  gr.eduno ";
		sql_Query = sql_Query + "             , gr.rname ";
		sql_Query = sql_Query + "	 , nvl(ger.mexampoint,0) mexampoint ";
		sql_Query = sql_Query + "	 , nvl(ger.lexampoint,0) lexampoint ";
		sql_Query = sql_Query + "	 , nvl(ger.nexampoint,0) nexampoint ";
		sql_Query = sql_Query + "	 , gsr.quizpoint ";
		sql_Query = sql_Query + "	 , gsr.reportpoint ";
		sql_Query = sql_Query + "	 , gsr.bunpoint ";
		sql_Query = sql_Query + "	 , gsr.silpoint ";
		sql_Query = sql_Query + "	 , gsr.gunpoint ";
		sql_Query = sql_Query + "	 , gsr.tchevpoint ";
		sql_Query = sql_Query + "	 , gsr.coursepoint ";
		sql_Query = sql_Query + "	 , gsr.mispoint ";
		sql_Query = sql_Query + "	 , sm.addpoint ";
		sql_Query = sql_Query + "	 , gr.paccept ";
		sql_Query = sql_Query + "	 , gr.seqno ";
		sql_Query = sql_Query + "             , gr.grcode ";
		sql_Query = sql_Query + "             , gr.grseq ";
		sql_Query = sql_Query + "	 , gr.userno ";
		sql_Query = sql_Query + "	 , gsr.bonpoint ";
		sql_Query = sql_Query + "  FROM tb_grresult gr ";
		sql_Query = sql_Query + "     , (SELECT grcode ";
		sql_Query = sql_Query + "	         , grseq ";
		sql_Query = sql_Query + "			 , userno ";
		sql_Query = sql_Query + "			 , sum(decode(substr(subj,1,3),'BON',nvl(avlcount,0),0)) bonpoint ";
		sql_Query = sql_Query + "			 , sum(decode(substr(subj,1,3),'MIS',nvl(avlcount,0),0)) mispoint ";
		sql_Query = sql_Query + "			 , sum(decode(substr(subj,1,3),'BUN',nvl(avlcount,0),0)) bunpoint ";
		sql_Query = sql_Query + "			 , sum(decode(substr(subj,1,3),'SIL',nvl(avlcount,0),0)) silpoint ";
		sql_Query = sql_Query + "			 , sum(decode(substr(subj,1,3),'GUN',nvl(avcourse,0),0)) gunpoint ";
		sql_Query = sql_Query + "			 , sum(decode(substr(subj,1,3),'GUN', 0, nvl(avcourse,0),0)) coursepoint ";
		sql_Query = sql_Query + "			 , sum(decode(subj,'NUS0000001',nvl(avlcount,0),0)) tchevpoint ";
		sql_Query = sql_Query + "			 , sum(nvl(avreport,0)) reportpoint, sum(nvl(avquiz,0)) quizpoint  ";
		sql_Query = sql_Query + "          FROM tb_subjresult  ";
		sql_Query = sql_Query + "		  GROUP BY grcode, grseq, userno) gsr ";
		sql_Query = sql_Query + "	 , (SELECT grcode ";
		sql_Query = sql_Query + "	         , grseq ";
		sql_Query = sql_Query + "			 , userno ";
		sql_Query = sql_Query + "			 , sum(decode(ptype, 'M', nvl(gakpoint,0)+nvl(jupoint,0), 0)) mexampoint ";
		sql_Query = sql_Query + "			 , sum(decode(ptype, 'T', nvl(gakpoint,0)+nvl(jupoint,0), 0)) lexampoint ";
		sql_Query = sql_Query + "			 , sum(decode(ptype, 'M', 0, 'T', 0, nvl(gakpoint,0)+nvl(jupoint,0))) nexampoint ";
		sql_Query = sql_Query + "          FROM tb_exresult group by grcode , grseq, userno) ger ";
		sql_Query = sql_Query + "    , tb_grstumas sm ";
		sql_Query = sql_Query + "	, (SELECT userno ";
		sql_Query = sql_Query + "	        , grcode ";
		sql_Query = sql_Query + "			, grseq ";
		sql_Query = sql_Query + "			, count(*) selsubj_cnt  ";
		sql_Query = sql_Query + "		 FROM tb_stu_lec  ";
		sql_Query = sql_Query + "		WHERE '" + p_selsubj_Param + "' like '%' || subj || '%'  ";
		sql_Query = sql_Query + "        GROUP BY userno, grcode, grseq) st ";
		sql_Query = sql_Query + " WHERE gr.grcode = st.grcode(+)  ";
		sql_Query = sql_Query + " AND gr.grseq    = st.grseq(+)  ";
		sql_Query = sql_Query + " AND gr.userno   = st.userno(+)  ";
		sql_Query = sql_Query + " AND decode(" + p_selsubjcnt_Param + ", 0, 1, st.selsubj_cnt, 1, 0)=1  ";
		sql_Query = sql_Query + " AND gr.grcode   = '" + p_grcode_Param + "'  ";
		sql_Query = sql_Query + " AND gr.grseq    = '" + p_grseq_Param + "' ";
		sql_Query = sql_Query + " AND gr.grcode   = gsr.grcode  ";
		sql_Query = sql_Query + " AND gr.grseq    = gsr.grseq  ";
		sql_Query = sql_Query + " AND gr.userno   = gsr.userno  ";
		sql_Query = sql_Query + " AND gr.grcode   = ger.grcode(+)  ";
		sql_Query = sql_Query + " AND gr.grseq    = ger.grseq(+)  ";
		sql_Query = sql_Query + " AND gr.userno   = ger.userno(+) ";
		sql_Query = sql_Query + " AND gr.grcode   = sm.grcode(+)  ";
		sql_Query = sql_Query + " AND gr.grseq    = sm.grseq(+)  ";
		sql_Query = sql_Query + " AND gr.userno   = sm.userno(+) ";
		sql_Query = sql_Query + " order by decode('" + p_order_Param + "', 'seqno', gr.seqno , 'disadd', -(gr.paccept-nvl(sm.addpoint,0)) , gr.eduno )";
		sql_totAvg = "SELECT to_char(ROUND(AVG(NVL(mexampoint ,0)),2)) mexampoint, ";
		sql_totAvg = sql_totAvg + "       to_char(ROUND(AVG(NVL(lexampoint ,0)),2)) lexampoint, ";
		sql_totAvg = sql_totAvg + "       to_char(ROUND(AVG(NVL(nexampoint,0)),2)) nexampoint, ";
		sql_totAvg = sql_totAvg + "       to_char(ROUND(AVG(NVL(quizpoint,0)),2)) quizpoint, ";
		sql_totAvg = sql_totAvg + "       to_char(ROUND(AVG(NVL(reportpoint,0)),2)) reportpoint, ";
		sql_totAvg = sql_totAvg + "       to_char(ROUND(AVG(NVL(bunpoint   ,0)),2)) bunpoint, ";
		sql_totAvg = sql_totAvg + "       to_char(ROUND(AVG(NVL(silpoint   ,0)),2)) silpoint, ";
		sql_totAvg = sql_totAvg + "       to_char(ROUND(AVG(NVL(gunpoint   ,0)),2)) gunpoint, ";
		sql_totAvg = sql_totAvg + "       to_char(ROUND(AVG(NVL(tchevpoint ,0)),2)) tchevpoint, ";
		sql_totAvg = sql_totAvg + "       to_char(ROUND(AVG(NVL(coursepoint,0)),2)) coursepoint, ";
		sql_totAvg = sql_totAvg + "       to_char(ROUND(AVG(NVL(mispoint   ,0)),2)) mispoint, ";
		sql_totAvg = sql_totAvg + "       to_char(ROUND(AVG(NVL(addpoint   ,0)),2)) addpoint, ";
		sql_totAvg = sql_totAvg + "       to_char(ROUND(AVG(NVL(paccept    ,0)),2)) paccept ";
		sql_totAvg = sql_totAvg + "  FROM ( ";
		sql_totAvg = sql_totAvg + "SELECT gr.grcode ";
		sql_totAvg = sql_totAvg + "     , gr.grseq ";
		sql_totAvg = sql_totAvg + "	 , gr.userno ";
		sql_totAvg = sql_totAvg + "	 , gr.rname ";
		sql_totAvg = sql_totAvg + "	 , gr.seqno ";
		sql_totAvg = sql_totAvg + "	 , gr.eduno ";
		sql_totAvg = sql_totAvg + "	 , gr.paccept ";
		sql_totAvg = sql_totAvg + "	 , nvl(ger.mexampoint,0) mexampoint ";
		sql_totAvg = sql_totAvg + "	 , nvl(ger.lexampoint,0) lexampoint ";
		sql_totAvg = sql_totAvg + "	 , nvl(ger.nexampoint,0) nexampoint ";
		sql_totAvg = sql_totAvg + "	 , gsr.reportpoint ";
		sql_totAvg = sql_totAvg + "	 , gsr.gunpoint ";
		sql_totAvg = sql_totAvg + "	 , gsr.coursepoint ";
		sql_totAvg = sql_totAvg + "	 , gsr.quizpoint ";
		sql_totAvg = sql_totAvg + "	 , gsr.tchevpoint ";
		sql_totAvg = sql_totAvg + "	 , gsr.bonpoint ";
		sql_totAvg = sql_totAvg + "	 , gsr.mispoint ";
		sql_totAvg = sql_totAvg + "	 , gsr.bunpoint ";
		sql_totAvg = sql_totAvg + "	 , gsr.silpoint ";
		sql_totAvg = sql_totAvg + "	 , sm.addpoint ";
		sql_totAvg = sql_totAvg + "  FROM tb_grresult gr ";
		sql_totAvg = sql_totAvg + "     , (SELECT grcode ";
		sql_totAvg = sql_totAvg + "	         , grseq ";
		sql_totAvg = sql_totAvg + "			 , userno ";
		sql_totAvg = sql_totAvg + "			 , sum(decode(substr(subj,1,3),'BON',nvl(avlcount,0),0)) bonpoint ";
		sql_totAvg = sql_totAvg + "			 , sum(decode(substr(subj,1,3),'MIS',nvl(avlcount,0),0)) mispoint ";
		sql_totAvg = sql_totAvg + "			 , sum(decode(substr(subj,1,3),'BUN',nvl(avlcount,0),0)) bunpoint ";
		sql_totAvg = sql_totAvg + "			 , sum(decode(substr(subj,1,3),'SIL',nvl(avlcount,0),0)) silpoint ";
		sql_totAvg = sql_totAvg + "			 , sum(decode(substr(subj,1,3),'GUN',nvl(avcourse,0),0)) gunpoint ";
		sql_totAvg = sql_totAvg + "			 , sum(decode(substr(subj,1,3),'GUN', 0, nvl(avcourse,0),0)) coursepoint ";
		sql_totAvg = sql_totAvg + "			 , sum(decode(subj,'NUS0000001',nvl(avlcount,0),0)) tchevpoint ";
		sql_totAvg = sql_totAvg + "			 , sum(nvl(avreport,0)) reportpoint, sum(nvl(avquiz,0)) quizpoint  ";
		sql_totAvg = sql_totAvg + "          FROM tb_subjresult  ";
		sql_totAvg = sql_totAvg + "		  GROUP BY grcode, grseq, userno) gsr ";
		sql_totAvg = sql_totAvg + "	 , (SELECT grcode ";
		sql_totAvg = sql_totAvg + "	         , grseq ";
		sql_totAvg = sql_totAvg + "			 , userno ";
		sql_totAvg = sql_totAvg + "			 , sum(decode(ptype, 'M', nvl(gakpoint,0)+nvl(jupoint,0), 0)) mexampoint ";
		sql_totAvg = sql_totAvg + "			 , sum(decode(ptype, 'T', nvl(gakpoint,0)+nvl(jupoint,0), 0)) lexampoint ";
		sql_totAvg = sql_totAvg + "			 , sum(decode(ptype, 'M', 0, 'T', 0, nvl(gakpoint,0)+nvl(jupoint,0))) nexampoint ";
		sql_totAvg = sql_totAvg + "          FROM tb_exresult group by grcode , grseq, userno) ger ";
		sql_totAvg = sql_totAvg + "    , tb_grstumas sm ";
		sql_totAvg = sql_totAvg + "	, (SELECT userno ";
		sql_totAvg = sql_totAvg + "	        , grcode ";
		sql_totAvg = sql_totAvg + "			, grseq ";
		sql_totAvg = sql_totAvg + "			, count(*) selsubj_cnt  ";
		sql_totAvg = sql_totAvg + "		 FROM tb_stu_lec  ";
		sql_totAvg = sql_totAvg + "		WHERE '" + p_selsubj_Param + "' like '%' || subj || '%'  ";
		sql_totAvg = sql_totAvg + "        GROUP BY userno, grcode, grseq) st ";
		sql_totAvg = sql_totAvg + " WHERE gr.grcode = st.grcode(+)  ";
		sql_totAvg = sql_totAvg + " AND gr.grseq    = st.grseq(+)  ";
		sql_totAvg = sql_totAvg + " AND gr.userno   = st.userno(+)  ";
		sql_totAvg = sql_totAvg + " AND decode(" + p_selsubjcnt_Param + ", 0, 1, st.selsubj_cnt, 1, 0)=1  ";
		sql_totAvg = sql_totAvg + " AND gr.grcode   = '" + p_grcode_Param + "'  ";
		sql_totAvg = sql_totAvg + " AND gr.grseq    = '" + p_grseq_Param + "' ";
		sql_totAvg = sql_totAvg + " AND gr.grcode   = gsr.grcode  ";
		sql_totAvg = sql_totAvg + " AND gr.grseq    = gsr.grseq  ";
		sql_totAvg = sql_totAvg + " AND gr.userno   = gsr.userno  ";
		sql_totAvg = sql_totAvg + " AND gr.grcode   = ger.grcode(+)  ";
		sql_totAvg = sql_totAvg + " AND gr.grseq    = ger.grseq(+)  ";
		sql_totAvg = sql_totAvg + " AND gr.userno   = ger.userno(+) ";
		sql_totAvg = sql_totAvg + " AND gr.grcode   = sm.grcode(+)  ";
		sql_totAvg = sql_totAvg + " AND gr.grseq    = sm.grseq(+)  ";
		sql_totAvg = sql_totAvg + " AND gr.userno   = sm.userno(+) ";
		sql_totAvg = sql_totAvg + " order by decode('" + p_order_Param + "', 'seqno', gr.seqno , 'disadd', -(gr.paccept-nvl(sm.addpoint,0)) , gr.eduno ) )";
	}

	//-----ResultSet 객체에서 필드 값 설정 함수-----
	//ResultSet Query 객체에서 필드 값 설정 함수
	private void setFieldVariableFromQuery() throws Exception{
		Query_EDUNO=Query.getDouble(1);
		Query_RNAME=GetB(Query.getString(2));
		Query_MEXAMPOINT=Query.getDouble(3);
		Query_LEXAMPOINT=Query.getDouble(4);
		Query_NEXAMPOINT=Query.getDouble(5);
		Query_QUIZPOINT=Query.getDouble(6);
		Query_REPORTPOINT=Query.getDouble(7);
		Query_BUNPOINT=Query.getDouble(8);
		Query_SILPOINT=Query.getDouble(9);
		Query_GUNPOINT=Query.getDouble(10);
		Query_TCHEVPOINT=Query.getDouble(11);
		Query_COURSEPOINT=Query.getDouble(12);
		Query_MISPOINT=Query.getDouble(13);
		Query_ADDPOINT=Query.getDouble(14);
		Query_PACCEPT=Query.getDouble(15);
		Query_SEQNO=Query.getDouble(16);
		Query_GRCODE=GetB(Query.getString(17));
		Query_GRSEQ=GetB(Query.getString(18));
		Query_USERNO=GetB(Query.getString(19));
		Query_BONPOINT=Query.getDouble(20);
	}

	//ResultSet Query 객체의 필드 값 초기화 함수
	private void setFieldInitFromQuery(){
		Query_EDUNO=0;
		Query_RNAME="";
		Query_MEXAMPOINT=0;
		Query_LEXAMPOINT=0;
		Query_NEXAMPOINT=0;
		Query_QUIZPOINT=0;
		Query_REPORTPOINT=0;
		Query_BUNPOINT=0;
		Query_SILPOINT=0;
		Query_GUNPOINT=0;
		Query_TCHEVPOINT=0;
		Query_COURSEPOINT=0;
		Query_MISPOINT=0;
		Query_ADDPOINT=0;
		Query_PACCEPT=0;
		Query_SEQNO=0;
		Query_GRCODE="";
		Query_GRSEQ="";
		Query_USERNO="";
		Query_BONPOINT=0;
	}

	//ResultSet totAvg 객체에서 필드 값 설정 함수
	private void setFieldVariableFromtotAvg() throws Exception{
		totAvg_MEXAMPOINT=GetB(totAvg.getString(1));
		totAvg_LEXAMPOINT=GetB(totAvg.getString(2));
		totAvg_NEXAMPOINT=GetB(totAvg.getString(3));
		totAvg_QUIZPOINT=GetB(totAvg.getString(4));
		totAvg_REPORTPOINT=GetB(totAvg.getString(5));
		totAvg_BUNPOINT=GetB(totAvg.getString(6));
		totAvg_SILPOINT=GetB(totAvg.getString(7));
		totAvg_GUNPOINT=GetB(totAvg.getString(8));
		totAvg_TCHEVPOINT=GetB(totAvg.getString(9));
		totAvg_COURSEPOINT=GetB(totAvg.getString(10));
		totAvg_MISPOINT=GetB(totAvg.getString(11));
		totAvg_ADDPOINT=GetB(totAvg.getString(12));
		totAvg_PACCEPT=GetB(totAvg.getString(13));
	}

	//ResultSet totAvg 객체의 필드 값 초기화 함수
	private void setFieldInitFromtotAvg(){
		totAvg_MEXAMPOINT="";
		totAvg_LEXAMPOINT="";
		totAvg_NEXAMPOINT="";
		totAvg_QUIZPOINT="";
		totAvg_REPORTPOINT="";
		totAvg_BUNPOINT="";
		totAvg_SILPOINT="";
		totAvg_GUNPOINT="";
		totAvg_TCHEVPOINT="";
		totAvg_COURSEPOINT="";
		totAvg_MISPOINT="";
		totAvg_ADDPOINT="";
		totAvg_PACCEPT="";
	}

	//-----고정 데이터 초기화 함수-----
	private void initConstVarient(){
		sheet10_A1="평 가 결 과 - 성 적 일 람 표";
		sheet10_K2="" + p_ordernm_Param + "";
		sheet10_A7="#PAGE / #TOTALPAGE";
		sheet10_A4="교번";
		sheet10_B4="성명";
		sheet10_C4="중간";
		sheet10_D4="최종";
		sheet10_E4="상시";
		sheet10_F4="차시평가";
		sheet10_G4="과제물";
		sheet10_H4="분임토의";
		sheet10_I4="실습";
		sheet10_J4="근태";
		sheet10_K4="강사점수";
		sheet10_L4="진도점수";
		sheet10_M4="역활극";
		sheet10_N4="가점";
		sheet10_O4="총점";
		sheet10_P4="석차";
		sheet10_A5="평   균";
	}

	//-----페이지 스킵 관련 함수-----
	//페이지 스킵시 호출되는 함수로서 페이지 번호를 증가시키고 페이지 지시문 출력 그리고 Y좌표 초기화
	//매개변수에 따라 해당 쉬트의 배경 이미지, 머리글 밴드, 바닥글 밴드 함수 호출
	private void pageSkip(int nIndex) throws Exception{
		nXCurPos=nXStartPos;
		nYCurPos=nYStartPos;
		nPageNum=nPageNum+1;
		out.print("-- " + nPageNum + " PAGE --\r");

		switch(nIndex){
			case 10:		//SHEET=Sheet=1   FRAME=0에서 페이지 스킵시
			getScriptFromtitle(false, true);		//머리글 밴드 호출
			getScriptFromfoot(false, true);		//바닥글 밴드 호출
			break;
		}
	}

	//페이지 스킵이 필요한지 검사하는 함수
	private boolean isPageSkip(int nTestPos){
		if(nTestPos>nYEndPos){
			return true;
		}else{
			return false;
		}
	}

	//-----공통 함수 선언-----
	private void getScriptHeader(String paper, String size, String value, String orient) throws Exception{
		out.print("--SCRIPT_START31--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void getSheetPaperInfo(String paper, String size, String value, String orient) throws Exception{
		out.print("--PAPER_INFO--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void initSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bFirstFrame){
		if(bFirstFrame){
			nStartPage=nMaxPage+1;
			nYLastPos=0;
		}
		nPageNum=nStartPage;
		nYStartPos=constStartY;
		nYEndPos=constEndY;
		nYCurPos=nYStartPos;
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
	}

	private void initChildSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bIsMultiFrame, boolean bIsFirstFrame){
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
		nYStartPos=constStartY;
		nYEndPos=constEndY;

		if(bIsMultiFrame){
			if(bIsFirstFrame){
				nStartPage=nPageNum;
				nYSavePos=nYCurPos;
				nYLastPos=0;
			}else{
				nPageNum=nStartPage;
				nYCurPos=nYSavePos;
			}
		}else{
			nStartPage=nPageNum;
		}
	}

	//Empty Row만으로 구성되어 출력 위치를 조정하기 위한 VoidBand 함수
	//nRangePos - VoidBand의 출력 영역
	//nIndex - PageSkip 함수 호출시 전달할 쉬트 인덱스
	private boolean voidBandNoneData(int nRangePos, int nIndex) throws Exception{
		int nTestPos;
		nTestPos=nYCurPos+nRangePos;
		if(isPageSkip(nTestPos)){
			pageSkip(nIndex);
			return true;
		}else{
			nYCurPos=nYCurPos+nRangePos;
			return false;
		}
	}

	private String Get0(String str){
		if(str==null){
			return "0";
		}else{
			if(str.equals("")){
				return "0";
			}else{
				return str;
			}
		}
	}

	private String GetB(String str){
		if(str==null){
			return "";
		}else{
			return str;
		}
	}

	private double SUM(double accVal, double tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(double accVal, long tmpVal){
		return(accVal+(double)tmpVal);
	}

	private long SUM(long accVal, long tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(long accVal, double tmpVal){
		return((double)accVal+tmpVal);
	}

	private long COUNT(long accuCNT){
		return ++accuCNT;
	}

	private long MIN(long maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(long maxV, double maxTempV){
		if((double)maxV<=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, double maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}
	private long MAX(long maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(long maxV, double maxTempV){
		if((double)maxV>=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, double maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}

	private double AVG(double sumVal, long cntVal){
		return(sumVal/cntVal);
	}

	private double AVG(long sumVal, long cntVal){
		return((double)sumVal/(double)cntVal);
	}

	private String aiReplace(String strAll, String strSrc, String strDest) {
		while(strAll.indexOf(strSrc) != -1) {
			strAll = strAll.substring(0, strAll.indexOf(strSrc)) + strDest + strAll.substring(strAll.indexOf(strSrc) + strSrc.length(), strAll.length());
		}
		return strAll;
	}

	private String toDate() {
		SimpleDateFormat dateFormat=new SimpleDateFormat("'#SERVERDATE#'yyyy/MM/dd/HH/mm/ss");
		java.util.Date currentDate = new java.util.Date();
		return dateFormat.format(currentDate);
	}

	final String toKor (String en){
		if(en==null){
			return "";
		}
		try{
			return new String(en.getBytes("8859_1"), "KSC5601");
		}catch(Exception e){return en;}
	}
}
%>
