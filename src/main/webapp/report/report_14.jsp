<%
/* ### Generated by AIDesigner 3.7.1.23 ### */
%>

<%@ page language="java" import="java.sql.*,java.io.*,java.text.*" %>
<%@ page contentType="text/plain; charset=euc-kr" %>

<%
Object[] userObj = null;
ReportHandler handler = new ReportHandler(request,response,userObj);
handler.service(out);
%>

<%!
class ReportHandler{
	//공통 변수 선언
	private Object[] userObj = null;
	private int nStartPage;		//각 쉬트별 시작 페이지 저장
	private int nMaxPage;		//한 쉬트가 실행된 후 생성된 최대 페이지 번호 저장
	private int nPageNum;		//현재 페이지 번호
	private int nYStartPos;		//쉬트에서 Y 시작 좌표
	private int nYEndPos;		//쉬트에서 Y 끝 좌표
	private int nYCurPos;		//현재 Y 좌표
	private int nYSavePos;		//연결된 멀티 프레임 쉬트에서 시작 Y 좌표 저장
	private int nYLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 Y 좌표 저장
	private int nXStartPos;		//쉬트에서 X 시작 좌표
	private int nXEndPos;		//쉬트에서 X 끝 좌표
	private int nXCurPos;		//현재 X 좌표
	private int nXSavePos;		//연결된 멀티 프레임 쉬트에서 시작 X 좌표 저장
	private int  nXLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 X 좌표 저장
	private boolean bIsBeforePageSkip;		//조건 밴드에서 페이지 넘기기 여부 판단
	private int nLoopRef;		//절대 양식에서 루프 참조 변수
	private String isEmpty="";		//빈 문자열 비교에 사용

	private HttpServletRequest request;
	private HttpServletResponse response;
	private JspWriter out;

	//-----데이터 변수 선언-----
	String sheet10_A1;
	String sheet10_A2;
	String sheet10_B2;
	String sheet10_C2;
	String sheet10_D2;
	String sheet10_E2;
	String sheet10_F2;
	String sheet10_G2;
	String sheet10_H2;
	String sheet10_I2;
	String sheet10_J2;
	String sheet10_K2;
	String sheet10_L2;
	String sheet10_M2;
	String sheet10_N2;
	String sheet10_O2;
	String sheet10_P2;
	String sheet10_A3;
	double sheet10_C3;
	double sheet10_D3;
	double sheet10_E3;
	double sheet10_F3;
	double sheet10_G3;
	double sheet10_H3;
	double sheet10_I3;
	double sheet10_J3;
	double sheet10_K3;
	double sheet10_L3;
	double sheet10_M3;
	double sheet10_N3;
	double sheet10_O3;
	double sheet10_P3;
	String sheet10_A4;
	String sheet10_B4;
	double sheet10_C4;
	double sheet10_D4;
	double sheet10_E4;
	double sheet10_F4;
	double sheet10_G4;
	double sheet10_H4;
	double sheet10_I4;
	double sheet10_J4;
	double sheet10_K4;
	double sheet10_L4;
	double sheet10_M4;
	double sheet10_N4;
	double sheet10_O4;
	double sheet10_P4;
	int[] nAutoHeight_detail=new int[1];
	String sheet10_B5;
	double sheet10_C5;
	double sheet10_D5;
	double sheet10_E5;
	double sheet10_F5;
	double sheet10_G5;
	double sheet10_H5;
	double sheet10_I5;
	double sheet10_J5;
	double sheet10_K5;
	double sheet10_L5;
	double sheet10_M5;
	double sheet10_N5;
	double sheet10_O5;
	double sheet10_P5;
	String sheet20_A1;
	String AI_CHART_OBJ1;

	//-----Connection, Statement, ResultSet 객체 선언-----
	private Connection conn_DUNET;		//DSN DUNET Connection 객체
	private java.sql.Statement stat_totSum;		//ResultSet totSum 객체를 생성하기 위한 Statement 객체
	private ResultSet totSum;		//ResultSet totSum 객체
	private java.sql.Statement stat_master;		//ResultSet master 객체를 생성하기 위한 Statement 객체
	private ResultSet master;		//ResultSet master 객체
	private java.sql.Statement stat_detail;		//ResultSet detail 객체를 생성하기 위한 Statement 객체
	private ResultSet detail;		//ResultSet detail 객체

	//-----SQL 변수 선언-----
	private String sql_totSum;		//ResultSet totSum 객체를 생성하기 위한 쿼리문 저장
	private String sql_master;		//ResultSet master 객체를 생성하기 위한 쿼리문 저장
	private String sql_detail;		//ResultSet detail 객체를 생성하기 위한 쿼리문 저장

	//-----쿼리 필드 변수 선언-----
	//ResultSet totSum 객체에서 필드 값을 받는 쿼리 필드 변수
	private double totSum_TOT_TOTNO;
	private double totSum_TOT_DEPTCOUNT11;
	private double totSum_TOT_DEPTCOUNT1;
	private double totSum_TOT_DEPTCOUNT2;
	private double totSum_TOT_DEPTCOUNT3;
	private double totSum_TOT_DEPTCOUNT4;
	private double totSum_TOT_DEPTCOUNT5;
	private double totSum_TOT_DEPTCOUNT6;
	private double totSum_TOT_DEPTCOUNT7;
	private double totSum_TOT_DEPTCOUNT8;
	private double totSum_TOT_DEPTCOUNT9;
	private double totSum_TOT_DEPTCOUNT10;
	private double totSum_TOT_DEPTCOUNT12;
	private double totSum_TOT_DEPTCOUNT13;

	//ResultSet master 객체에서 필드 값을 받는 쿼리 필드 변수
	private String master_GUBUNNM;
	private String master_GUBUN;
	private double master_TOT_TOTNO;
	private double master_시;
	private double master_중구;
	private double master_동구;
	private double master_남구;
	private double master_연수구;
	private double master_남동구;
	private double master_부평구;
	private double master_계양구;
	private double master_서구;
	private double master_강화군;
	private double master_웅진군;
	private double master_타시도;
	private double master_기타;

	//ResultSet detail 객체에서 필드 값을 받는 쿼리 필드 변수
	private String detail_TXT_GRCODENM;
	private double detail_TOTNO;
	private double detail_DEPTCOUNT11;
	private double detail_DEPTCOUNT1;
	private double detail_DEPTCOUNT2;
	private double detail_DEPTCOUNT3;
	private double detail_DEPTCOUNT4;
	private double detail_DEPTCOUNT5;
	private double detail_DEPTCOUNT6;
	private double detail_DEPTCOUNT7;
	private double detail_DEPTCOUNT8;
	private double detail_DEPTCOUNT9;
	private double detail_DEPTCOUNT10;
	private double detail_DEPTCOUNT12;
	private double detail_DEPTCOUNT13;
	private String detail_GUBUN;
	private String detail_GUBUNNM;
	private String detail_GRCODE;

	//파라미터 변수 선언
	String p_year_Param;

	//ReportHandler 생성자 함수
	ReportHandler(HttpServletRequest request,HttpServletResponse response,Object[] userObj){
		this.request=request;
		this.response=response;
		this.userObj=userObj;
	}

	//ReportHandler 서비스 함수
	void service(JspWriter out) throws Exception{
		try{    //try 구문
			this.out=out;
			nMaxPage=0;    //nMaxPage 초기화

			//스크립트 헤더 함수 호출
			getScriptHeader("A4", "2100x2970", "9", "VERTICAL");

			//파라미터 설정 함수 호출
			setParam();

			//고정 데이터 초기화 함수 호출
			initConstVarient();

			//Connection 및 Statement 객체 생성 함수 호출
			createConnAndStateObject();

			//쿼리문 초기화 함수 호출
			initSQLConst();

			//쉬트 함수 호출
			//SHEET=Sheet1   FRAME=0 함수 호출
			executeSheet10();
			//SHEET=Sheet2   FRAME=0 함수 호출
			executeSheet20();

			//---------------스크립트 종료---------------
			out.print("--SCRIPT_END--\r");
		}catch(Exception e){    //catch 구문
			out.print(e);
			out.print("AI!REPORT JSP ERROR!!!!\r");
		}finally{    //finally 구문
			try{    //finally try 구문
				//DataSet Close
				if(stat_detail!=null) stat_detail.close();
				if(master!=null) master.close();
				if(stat_master!=null) stat_master.close();
				if(totSum!=null) totSum.close();
				if(stat_totSum!=null) stat_totSum.close();
				if(conn_DUNET!=null) conn_DUNET.close();
			}catch(Exception e){    //finally catch 구문
			}    //end finally try
		}    //end try
	}

	//-----쉬트 함수-----
	//-----SHEET=Sheet1   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet10( ) throws Exception{
		//쉬트 초기화 함수 호출
		initSheetVariant(31, 76, 561, 798, true);

		//시작 페이지 번호 출력
		out.print("-- " + nPageNum + " PAGE --\r");

		//밴드 함수 호출
		getScriptFromtitle(true, true);    //머리글 밴드 호출
		getScriptFrommaster(true);    //반복 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기
	}

	//-----SHEET=Sheet2   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet20( ) throws Exception{
		//쉬트 초기화 함수 호출
		initSheetVariant(31, 38, 561, 798, true);

		//시작 페이지 번호 출력
		out.print("-- " + nPageNum + " PAGE --\r");

		//밴드 함수 호출
		getScriptFromchart_title(true, true);    //Void 밴드 호출
		getScriptFromchart(true, true);    //Void 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기
	}

	//-----밴드 함수-----
	//----title HeaderBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : title
	//----밴드 종류 : 머리글 밴드
	//----bIsFrist : 쉬트 함수에서 최초로 호출될 때 true, 페이지 스킵 함수에서 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromtitle(boolean bIsFirst, boolean bIsPrint) throws Exception{
		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 함수 호출
			writeScripttitle();
		}   //end if(bIsPrint)
	}

	//----header RepeatHeader Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : header
	//----밴드 종류 : 반복 헤더
	//----bIsFrist : 반복 밴드 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromheader(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=40;	//밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//DataSet 객체 생성
			//ResultSet totSum 객체의 생성
			if(totSum==null){
				totSum = stat_totSum.executeQuery(sql_totSum);
			}else{
				totSum.beforeFirst();
			}

			//데이터 fetch
			if(totSum.next()){
				setFieldVariableFromtotSum();	//ResultSet totSum에서 필드 값 설정
			}else{
				setFieldInitFromtotSum();	//ResultSet totSum의 필드 값 초기화
			}

			//데이터 변수 초기화
			sheet10_C3=0;
			sheet10_D3=0;
			sheet10_E3=0;
			sheet10_F3=0;
			sheet10_G3=0;
			sheet10_H3=0;
			sheet10_I3=0;
			sheet10_J3=0;
			sheet10_K3=0;
			sheet10_L3=0;
			sheet10_M3=0;
			sheet10_N3=0;
			sheet10_O3=0;
			sheet10_P3=0;

			//데이터 변수 할당
			sheet10_C3=totSum_TOT_TOTNO;
			sheet10_D3=totSum_TOT_DEPTCOUNT11;
			sheet10_E3=totSum_TOT_DEPTCOUNT1;
			sheet10_F3=totSum_TOT_DEPTCOUNT2;
			sheet10_G3=totSum_TOT_DEPTCOUNT3;
			sheet10_H3=totSum_TOT_DEPTCOUNT4;
			sheet10_I3=totSum_TOT_DEPTCOUNT5;
			sheet10_J3=totSum_TOT_DEPTCOUNT6;
			sheet10_K3=totSum_TOT_DEPTCOUNT7;
			sheet10_L3=totSum_TOT_DEPTCOUNT8;
			sheet10_M3=totSum_TOT_DEPTCOUNT9;
			sheet10_N3=totSum_TOT_DEPTCOUNT10;
			sheet10_O3=totSum_TOT_DEPTCOUNT12;
			sheet10_P3=totSum_TOT_DEPTCOUNT13;
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptheader();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----detail RepeatBand Start-----
	//-----소속 쉬트 : SHEET=Sheet1   FRAME=Frame0
	//-----밴드 이름 : detail
	//-----밴드 종류 : 반복 밴드
	//-----bIsPrint : 감추기 속성 설정 여부 true면 출력, false면 스크립트를 생성하지 않음
	private void getScriptFromdetail(boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;    //밴드 출력 높이
		boolean bIsFirst=true;
		//폰트명 : 돋움체
		//폰트 사이즈 : 8
		//각 문자별 폭을 할당할 배열 선언
		int[] charWidth = {4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,8};

		//데이터 변수 초기화
		sheet10_B5="";
		sheet10_C5=0;
		sheet10_D5=0;
		sheet10_E5=0;
		sheet10_F5=0;
		sheet10_G5=0;
		sheet10_H5=0;
		sheet10_I5=0;
		sheet10_J5=0;
		sheet10_K5=0;
		sheet10_L5=0;
		sheet10_M5=0;
		sheet10_N5=0;
		sheet10_O5=0;
		sheet10_P5=0;

		//DataSet 객체 생성
		//ResultSet detail 객체의 생성
		initSQLdetailVarient();
		detail = stat_detail.executeQuery(sql_detail);

		while(detail.next()){   //자동으로 생성되는 반복 밴드의 루프문
			//데이터 fetch
			setFieldVariableFromdetail();	//RecordSet detail에서 필드 값 설정

			if(bIsFirst){   //밴드 호출 후 루프 내에서 한번 만 실행되는 코드
			}   //end if(bIsFirst)

			//데이터 변수 할당
			sheet10_B5=detail_TXT_GRCODENM;
			sheet10_C5=detail_TOTNO;
			sheet10_D5=detail_DEPTCOUNT11;
			sheet10_E5=detail_DEPTCOUNT1;
			sheet10_F5=detail_DEPTCOUNT2;
			sheet10_G5=detail_DEPTCOUNT3;
			sheet10_H5=detail_DEPTCOUNT4;
			sheet10_I5=detail_DEPTCOUNT5;
			sheet10_J5=detail_DEPTCOUNT6;
			sheet10_K5=detail_DEPTCOUNT7;
			sheet10_L5=detail_DEPTCOUNT8;
			sheet10_M5=detail_DEPTCOUNT9;
			sheet10_N5=detail_DEPTCOUNT10;
			sheet10_O5=detail_DEPTCOUNT12;
			sheet10_P5=detail_DEPTCOUNT13;

			//Auto Size Code
			nAutoHeight_detail[0]=0;
			nAutoHeight_detail[0]=getPrintHeight(sheet10_B5, charWidth, 8, 85, 20, nAutoHeight_detail[0]);
			nAutoHeight_detail[0]=nAutoHeight_detail[0]+20;
			nBandHeight=nAutoHeight_detail[0];   //밴드 출력 높이 설정

			//AI 스크립트 출력
			if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
				if(isPageSkip(nYCurPos+nBandHeight)){   //스크립트 출력 영역 검사
					//페이지 스킵 함수 호출
					pageSkip(10);

					//반복 헤더 및 부모 반복단위 호출
					getScriptFromheader(false, true);	//반복 헤더 호출
					writeScriptmaster();

					nYCurPos=nYCurPos+20;
				}   //end if(page skip test)

				//스크립트 출력 함수 호출
				writeScriptdetail();

				//다음 출력 좌표 설정
				nYCurPos=nYCurPos+nBandHeight;
			}   //end if(bIsPrint)

			//bIsFirst 및 출력 라인 설정
			bIsFirst=false;
		}   //while end

		//DataSet Close
		if(detail!=null) detail.close();
	}

	//-----master RepeatBand Start-----
	//-----소속 쉬트 : SHEET=Sheet1   FRAME=Frame0
	//-----밴드 이름 : master
	//-----밴드 종류 : 반복 밴드
	//-----bIsPrint : 감추기 속성 설정 여부 true면 출력, false면 스크립트를 생성하지 않음
	private void getScriptFrommaster(boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;    //밴드 출력 높이
		boolean bIsFirst=true;

		//데이터 변수 초기화
		sheet10_A4="";
		sheet10_C4=0;
		sheet10_D4=0;
		sheet10_E4=0;
		sheet10_F4=0;
		sheet10_G4=0;
		sheet10_H4=0;
		sheet10_I4=0;
		sheet10_J4=0;
		sheet10_K4=0;
		sheet10_L4=0;
		sheet10_M4=0;
		sheet10_N4=0;
		sheet10_O4=0;
		sheet10_P4=0;

		//DataSet 객체 생성
		//ResultSet master 객체의 생성
		if(master==null){
			master = stat_master.executeQuery(sql_master);
		}else{
			master.beforeFirst();
		}

		while(master.next()){   //자동으로 생성되는 반복 밴드의 루프문
			//데이터 fetch
			setFieldVariableFrommaster();	//RecordSet master에서 필드 값 설정

			if(bIsFirst){   //밴드 호출 후 루프 내에서 한번 만 실행되는 코드
				//반복 헤더 호출 및 조건 플래그 초기화
				getScriptFromheader(bIsFirst, true);	//반복 헤더 호출
			}   //end if(bIsFirst)

			//데이터 변수 할당
			sheet10_A4=master_GUBUNNM;
			sheet10_C4=master_TOT_TOTNO;
			sheet10_D4=master_시;
			sheet10_E4=master_중구;
			sheet10_F4=master_동구;
			sheet10_G4=master_남구;
			sheet10_H4=master_연수구;
			sheet10_I4=master_남동구;
			sheet10_J4=master_부평구;
			sheet10_K4=master_계양구;
			sheet10_L4=master_서구;
			sheet10_M4=master_강화군;
			sheet10_N4=master_웅진군;
			sheet10_O4=master_타시도;
			sheet10_P4=master_기타;

			//AI 스크립트 출력
			if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
				if(isPageSkip(nYCurPos+nBandHeight)){   //스크립트 출력 영역 검사
					//페이지 스킵 함수 호출
					pageSkip(10);

					//반복 헤더 및 부모 반복단위 호출
					getScriptFromheader(false, true);	//반복 헤더 호출
				}   //end if(page skip test)

				//스크립트 출력 함수 호출
				writeScriptmaster();

				//다음 출력 좌표 설정
				nYCurPos=nYCurPos+nBandHeight;
			}   //end if(bIsPrint)

			//루프 내부 자식 밴드 호출
			getScriptFromdetail(true);

			//bIsFirst 및 출력 라인 설정
			bIsFirst=false;
		}   //while end
	}

	//----chart_title VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet2    FRAME=Frame0
	//----밴드 이름 : chart_title
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFromchart_title(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=38;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(20);
			}

			//스크립트 출력 함수 호출
			writeScriptchart_title();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//----chart VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet2    FRAME=Frame0
	//----밴드 이름 : chart
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFromchart(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=200;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//데이터 변수 초기화
			AI_CHART_OBJ1="";

			//데이터 변수 할당
			getChartDataAI_CHART_OBJ1( );
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(20);
			}

			//스크립트 출력 함수 호출
			writeScriptchart();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----스크립트 출력 함수-----
	//----title 스크립트 문 출력 함수----
	private void writeScripttitle( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT(31,38,530,0,16,0/,돋움체,RGB[0,0,0],BOLD, , ,NONE,38,1)");
		out.println(sheet10_A1+"\r");
	}

	//----header 스크립트 문 출력 함수----
	private void writeScriptheader( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos)+",53,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",53,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",53,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",53,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",53,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",53,1,8,0/,돋움체,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_A2+"\r");
		out.println("^CELLBG("+(nXCurPos+53)+","+(nYCurPos)+",85,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+53)+","+(nYCurPos)+",85,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+53)+","+(nYCurPos)+",85,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+53)+","+(nYCurPos)+",85,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+53)+","+(nYCurPos)+",85,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+53)+","+(nYCurPos)+",85,1,8,0/,돋움체,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_B2+"\r");
		out.println("^CELLBG("+(nXCurPos+138)+","+(nYCurPos)+",28,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+138)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+138)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+138)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+138)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+138)+","+(nYCurPos)+",28,1,8,0/,돋움체,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_C2+"\r");
		out.println("^CELLBG("+(nXCurPos+166)+","+(nYCurPos)+",28,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+166)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+166)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+166)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+166)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+166)+","+(nYCurPos)+",28,1,8,0/,굴림체,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_D2+"\r");
		out.println("^CELLBG("+(nXCurPos+194)+","+(nYCurPos)+",28,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+194)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+194)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+194)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+194)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+194)+","+(nYCurPos)+",28,1,8,0/,굴림체,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_E2+"\r");
		out.println("^CELLBG("+(nXCurPos+222)+","+(nYCurPos)+",28,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+222)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+222)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+222)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+222)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+222)+","+(nYCurPos)+",28,1,8,0/,굴림체,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_F2+"\r");
		out.println("^CELLBG("+(nXCurPos+250)+","+(nYCurPos)+",28,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+250)+","+(nYCurPos)+",28,1,8,0/,굴림체,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_G2+"\r");
		out.println("^CELLBG("+(nXCurPos+278)+","+(nYCurPos)+",28,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+278)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+278)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+278)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+278)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+278)+","+(nYCurPos)+",28,1,8,0/,굴림체,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_H2+"\r");
		out.println("^CELLBG("+(nXCurPos+306)+","+(nYCurPos)+",28,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+306)+","+(nYCurPos)+",28,1,8,0/,굴림체,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_I2+"\r");
		out.println("^CELLBG("+(nXCurPos+334)+","+(nYCurPos)+",28,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+334)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+334)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+334)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+334)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+334)+","+(nYCurPos)+",28,1,8,0/,굴림체,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_J2+"\r");
		out.println("^CELLBG("+(nXCurPos+362)+","+(nYCurPos)+",28,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+362)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+362)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+362)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+362)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+362)+","+(nYCurPos)+",28,1,8,0/,굴림체,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_K2+"\r");
		out.println("^CELLBG("+(nXCurPos+390)+","+(nYCurPos)+",28,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+390)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+390)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+390)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+390)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+390)+","+(nYCurPos)+",28,1,8,0/,굴림체,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_L2+"\r");
		out.println("^CELLBG("+(nXCurPos+418)+","+(nYCurPos)+",28,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+418)+","+(nYCurPos)+",28,1,8,0/,굴림체,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_M2+"\r");
		out.println("^CELLBG("+(nXCurPos+446)+","+(nYCurPos)+",28,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+446)+","+(nYCurPos)+",28,1,8,0/,굴림체,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_N2+"\r");
		out.println("^CELLBG("+(nXCurPos+474)+","+(nYCurPos)+",28,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+474)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+474)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+474)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+474)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+474)+","+(nYCurPos)+",28,1,8,0/,굴림체,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_O2+"\r");
		out.println("^CELLBG("+(nXCurPos+502)+","+(nYCurPos)+",28,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+502)+","+(nYCurPos)+",28,1,8,0/,굴림체,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_P2+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+20)+",138,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",138,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",138,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",138,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",138,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+20)+",138,1,8,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A3+"\r");
		out.println("^CELLBG("+(nXCurPos+138)+","+(nYCurPos+20)+",28,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+138)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+138)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+138)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+138)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+138)+","+(nYCurPos+20)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_C3+"\r");
		out.println("^CELLBG("+(nXCurPos+166)+","+(nYCurPos+20)+",28,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+166)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+166)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+166)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+166)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+166)+","+(nYCurPos+20)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_D3+"\r");
		out.println("^CELLBG("+(nXCurPos+194)+","+(nYCurPos+20)+",28,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+194)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+194)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+194)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+194)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+194)+","+(nYCurPos+20)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E3+"\r");
		out.println("^CELLBG("+(nXCurPos+222)+","+(nYCurPos+20)+",28,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+222)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+222)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+222)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+222)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+222)+","+(nYCurPos+20)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F3+"\r");
		out.println("^CELLBG("+(nXCurPos+250)+","+(nYCurPos+20)+",28,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+250)+","+(nYCurPos+20)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_G3+"\r");
		out.println("^CELLBG("+(nXCurPos+278)+","+(nYCurPos+20)+",28,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+278)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+278)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+278)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+278)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+278)+","+(nYCurPos+20)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_H3+"\r");
		out.println("^CELLBG("+(nXCurPos+306)+","+(nYCurPos+20)+",28,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+306)+","+(nYCurPos+20)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_I3+"\r");
		out.println("^CELLBG("+(nXCurPos+334)+","+(nYCurPos+20)+",28,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+334)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+334)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+334)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+334)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+334)+","+(nYCurPos+20)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_J3+"\r");
		out.println("^CELLBG("+(nXCurPos+362)+","+(nYCurPos+20)+",28,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+362)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+362)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+362)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+362)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+362)+","+(nYCurPos+20)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_K3+"\r");
		out.println("^CELLBG("+(nXCurPos+390)+","+(nYCurPos+20)+",28,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+390)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+390)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+390)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+390)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+390)+","+(nYCurPos+20)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_L3+"\r");
		out.println("^CELLBG("+(nXCurPos+418)+","+(nYCurPos+20)+",28,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+418)+","+(nYCurPos+20)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_M3+"\r");
		out.println("^CELLBG("+(nXCurPos+446)+","+(nYCurPos+20)+",28,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+446)+","+(nYCurPos+20)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_N3+"\r");
		out.println("^CELLBG("+(nXCurPos+474)+","+(nYCurPos+20)+",28,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+474)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+474)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+474)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+474)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+474)+","+(nYCurPos+20)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_O3+"\r");
		out.println("^CELLBG("+(nXCurPos+502)+","+(nYCurPos+20)+",28,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos+20)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+502)+","+(nYCurPos+20)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_P3+"\r");
	}

	//----detail 스크립트 문 출력 함수----
	private void writeScriptdetail( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",53,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",53,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",53,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",53,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos+53)+","+(nYCurPos)+",85,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+53)+","+(nYCurPos)+",85,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+53)+","+(nYCurPos)+",85,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+53)+","+(nYCurPos)+",85,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+53)+","+(nYCurPos)+",85,0,8,0/,돋움체,RGB[0,0,0], , , ,XL,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_B5+"\r");
		out.println("^CELLLINE("+(nXCurPos+138)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+138)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+138)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+138)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+138)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_C5+"\r");
		out.println("^CELLLINE("+(nXCurPos+166)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+166)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+166)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+166)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+166)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_D5+"\r");
		out.println("^CELLLINE("+(nXCurPos+194)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+194)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+194)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+194)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+194)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_E5+"\r");
		out.println("^CELLLINE("+(nXCurPos+222)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+222)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+222)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+222)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+222)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_F5+"\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+250)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_G5+"\r");
		out.println("^CELLLINE("+(nXCurPos+278)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+278)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+278)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+278)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+278)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_H5+"\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+306)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_I5+"\r");
		out.println("^CELLLINE("+(nXCurPos+334)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+334)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+334)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+334)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+334)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_J5+"\r");
		out.println("^CELLLINE("+(nXCurPos+362)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+362)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+362)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+362)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+362)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_K5+"\r");
		out.println("^CELLLINE("+(nXCurPos+390)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+390)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+390)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+390)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+390)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_L5+"\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+418)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_M5+"\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+446)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_N5+"\r");
		out.println("^CELLLINE("+(nXCurPos+474)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+474)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+474)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+474)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+474)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_O5+"\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos)+",28,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+502)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_P5+"\r");
	}

	//----master 스크립트 문 출력 함수----
	private void writeScriptmaster( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos)+",53,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",53,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",53,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",53,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",53,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",53,0,8,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A4+"\r");
		out.println("^CELLBG("+(nXCurPos+53)+","+(nYCurPos)+",85,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+53)+","+(nYCurPos)+",85,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+53)+","+(nYCurPos)+",85,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+53)+","+(nYCurPos)+",85,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+53)+","+(nYCurPos)+",85,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+53)+","+(nYCurPos)+",85,1,8,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_B4+"\r");
		out.println("^CELLBG("+(nXCurPos+138)+","+(nYCurPos)+",28,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+138)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+138)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+138)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+138)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+138)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_C4+"\r");
		out.println("^CELLBG("+(nXCurPos+166)+","+(nYCurPos)+",28,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+166)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+166)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+166)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+166)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+166)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_D4+"\r");
		out.println("^CELLBG("+(nXCurPos+194)+","+(nYCurPos)+",28,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+194)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+194)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+194)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+194)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+194)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E4+"\r");
		out.println("^CELLBG("+(nXCurPos+222)+","+(nYCurPos)+",28,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+222)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+222)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+222)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+222)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+222)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F4+"\r");
		out.println("^CELLBG("+(nXCurPos+250)+","+(nYCurPos)+",28,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+250)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_G4+"\r");
		out.println("^CELLBG("+(nXCurPos+278)+","+(nYCurPos)+",28,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+278)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+278)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+278)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+278)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+278)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_H4+"\r");
		out.println("^CELLBG("+(nXCurPos+306)+","+(nYCurPos)+",28,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+306)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_I4+"\r");
		out.println("^CELLBG("+(nXCurPos+334)+","+(nYCurPos)+",28,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+334)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+334)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+334)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+334)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+334)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_J4+"\r");
		out.println("^CELLBG("+(nXCurPos+362)+","+(nYCurPos)+",28,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+362)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+362)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+362)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+362)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+362)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_K4+"\r");
		out.println("^CELLBG("+(nXCurPos+390)+","+(nYCurPos)+",28,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+390)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+390)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+390)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+390)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+390)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_L4+"\r");
		out.println("^CELLBG("+(nXCurPos+418)+","+(nYCurPos)+",28,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+418)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_M4+"\r");
		out.println("^CELLBG("+(nXCurPos+446)+","+(nYCurPos)+",28,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+446)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_N4+"\r");
		out.println("^CELLBG("+(nXCurPos+474)+","+(nYCurPos)+",28,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+474)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+474)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+474)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+474)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+474)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_O4+"\r");
		out.println("^CELLBG("+(nXCurPos+502)+","+(nYCurPos)+",28,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos)+",28,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+502)+","+(nYCurPos)+",28,2,8,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_P4+"\r");
	}

	//----chart_title 스크립트 문 출력 함수----
	private void writeScriptchart_title( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",529,0,16,0/,돋움체,RGB[0,0,0],BOLD, , ,NONE,38,1)");
		out.println(sheet20_A1+"\r");
	}

	//----chart 스크립트 문 출력 함수----
	private void writeScriptchart( ) throws Exception{
		//스크립트문 생성
		out.println("^CHART(" + (nXCurPos+4) + "," + (nYCurPos+4) + ",522,192,report_14!100.cht)\r");
		if(!AI_CHART_OBJ1.equals(isEmpty)){
			out.print(AI_CHART_OBJ1);
			AI_CHART_OBJ1="";
		}
		out.print("--CHART_END--\r");
	}

	//파라미터 설정 함수
	private void setParam(){
		p_year_Param=toKor(GetB(request.getParameter("p_year")));
	}

	//-----Connection 및 Statement 객체 생성 함수-----
	private void createConnAndStateObject() throws Exception{
		//DUNET Connection 객체 생성
		Class.forName("oracle.jdbc.driver.OracleDriver").newInstance();
		conn_DUNET=DriverManager.getConnection("jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.12.203)(PORT=1521))(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.12.204)(PORT=1521))(FAILOVER=on)(LOAD_BALANCE=off))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=LOTI)))","inchlms","fhxl21");stat_totSum=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_master=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_detail=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
	}

	//-----SQL문 변수 초기화 함수-----
	private void initSQLConst(){
		sql_totSum = "SELECT sum(totno)      as tot_totno ";
		sql_totSum = sql_totSum + "    , sum(deptcount11) as tot_deptcount11 ";
		sql_totSum = sql_totSum + "    , sum(deptcount1 ) as tot_deptcount1  ";
		sql_totSum = sql_totSum + "    , sum(deptcount2 ) as tot_deptcount2  ";
		sql_totSum = sql_totSum + "    , sum(deptcount3 ) as tot_deptcount3  ";
		sql_totSum = sql_totSum + "    , sum(deptcount4 ) as tot_deptcount4  ";
		sql_totSum = sql_totSum + "    , sum(deptcount5 ) as tot_deptcount5  ";
		sql_totSum = sql_totSum + "    , sum(deptcount6 ) as tot_deptcount6  ";
		sql_totSum = sql_totSum + "    , sum(deptcount7 ) as tot_deptcount7  ";
		sql_totSum = sql_totSum + "    , sum(deptcount8 ) as tot_deptcount8  ";
		sql_totSum = sql_totSum + "    , sum(deptcount9 ) as tot_deptcount9  ";
		sql_totSum = sql_totSum + "    , sum(deptcount10) as tot_deptcount10 ";
		sql_totSum = sql_totSum + "    , sum(deptcount12) as tot_deptcount12 ";
		sql_totSum = sql_totSum + "    , sum(deptcount13) as tot_deptcount13 ";
		sql_totSum = sql_totSum + " FROM ( ";
		sql_totSum = sql_totSum + "SELECT (d.grtype || d.grsubcd) as gubun ";
		sql_totSum = sql_totSum + "     ,  (min(mc.mcode_name) || min(sc.scode_name) || '교육') as gubunnm ";
		sql_totSum = sql_totSum + "     ,  a.grcode ";
		sql_totSum = sql_totSum + "     , decode(substr(a.grseq,6,1),'1',min(d.grcodenm) ||'(1)',min(d.grcodenm)||'('||substr(a.grseq,6,1)||')') txt_grcodenm ";
		sql_totSum = sql_totSum + "     , sum(decode(dt.dept,'3490000',1,0)) deptcount1 ";
		sql_totSum = sql_totSum + "     , sum(decode(dt.dept,'3500000',1,0)) deptcount2 ";
		sql_totSum = sql_totSum + "     , sum(decode(dt.dept,'3510000',1,0)) deptcount3 ";
		sql_totSum = sql_totSum + "     , sum(decode(dt.dept,'3520000',1,0)) deptcount4 ";
		sql_totSum = sql_totSum + "     , sum(decode(dt.dept,'3530000',1,0)) deptcount5 ";
		sql_totSum = sql_totSum + "     , sum(decode(dt.dept,'3540000',1,0)) deptcount6 ";
		sql_totSum = sql_totSum + "     , sum(decode(dt.dept,'3550000',1,0)) deptcount7 ";
		sql_totSum = sql_totSum + "     , sum(decode(dt.dept,'3560000',1,0)) deptcount8 ";
		sql_totSum = sql_totSum + "     , sum(decode(dt.dept,'3570000',1,0)) deptcount9 ";
		sql_totSum = sql_totSum + "     , sum(decode(dt.dept,'3580000',1,0)) deptcount10 ";
		sql_totSum = sql_totSum + "     , sum(decode(dt.dept,'6280000',1,0)) deptcount11 ";
		sql_totSum = sql_totSum + "     , sum(decode(dt.dept,'0000000',1,0)) deptcount12 ";
		sql_totSum = sql_totSum + "     , sum(decode(dt.dept,'9999999',1,0)) deptcount13 ";
		sql_totSum = sql_totSum + "     , count(*) totno  ";
		sql_totSum = sql_totSum + "  FROM tb_grseq a,tb_maincode mc, tb_subcode sc, tb_grresult gr, tb_dept dt, tb_grcode d  ";
		sql_totSum = sql_totSum + " WHERE a.grcode = d.grcode  ";
		sql_totSum = sql_totSum + " AND a.grcode   = gr.grcode  ";
		sql_totSum = sql_totSum + " AND a.grseq    = gr.grseq  ";
		sql_totSum = sql_totSum + " AND gr.rdept =dt.dept ";
		sql_totSum = sql_totSum + " AND (mc.cd_gubun(+)='G' AND d.grtype=mc.major_code(+))   ";
		sql_totSum = sql_totSum + " AND (sc.cd_gubun(+)='G' AND d.grtype=sc.major_code(+) AND d.grsubcd=sc.minor_code(+))  ";
		sql_totSum = sql_totSum + " AND a.grseq like '" + p_year_Param + "' ||'%'  and gr.rgrayn='Y' ";
		sql_totSum = sql_totSum + "GROUP BY (d.grtype || d.grsubcd), a.grcode, a.grseq )";
		sql_master = "SELECT gubunnm ";
		sql_master = sql_master + "    , gubun ";
		sql_master = sql_master + "    , sum(totno)      as tot_totno ";
		sql_master = sql_master + "    , sum(deptcount11 ) as 시  ";
		sql_master = sql_master + "    , sum(deptcount1 ) as 중구  ";
		sql_master = sql_master + "    , sum(deptcount2 ) as 동구  ";
		sql_master = sql_master + "    , sum(deptcount3 ) as 남구  ";
		sql_master = sql_master + "    , sum(deptcount4 ) as 연수구  ";
		sql_master = sql_master + "    , sum(deptcount5 ) as 남동구  ";
		sql_master = sql_master + "    , sum(deptcount6 ) as 부평구  ";
		sql_master = sql_master + "    , sum(deptcount7 ) as 계양구  ";
		sql_master = sql_master + "    , sum(deptcount8 ) as 서구  ";
		sql_master = sql_master + "    , sum(deptcount9) as 강화군 ";
		sql_master = sql_master + "    , sum(deptcount10) as 웅진군 ";
		sql_master = sql_master + "    , sum(deptcount12) as 타시도 ";
		sql_master = sql_master + "    , sum(deptcount13) as 기타 ";
		sql_master = sql_master + " FROM ( ";
		sql_master = sql_master + "SELECT (d.grtype || d.grsubcd) as gubun ";
		sql_master = sql_master + "     ,  (min(mc.mcode_name) || min(sc.scode_name) || '교육') as gubunnm ";
		sql_master = sql_master + "     ,  a.grcode ";
		sql_master = sql_master + "     , decode(substr(a.grseq,6,1),'1',min(d.grcodenm) ||'(1)',min(d.grcodenm)||'('||substr(a.grseq,6,1)||')') txt_grcodenm ";
		sql_master = sql_master + "     , sum(decode(dt.dept,'3490000',1,0)) deptcount1 ";
		sql_master = sql_master + "     , sum(decode(dt.dept,'3500000',1,0)) deptcount2 ";
		sql_master = sql_master + "     , sum(decode(dt.dept,'3510000',1,0)) deptcount3 ";
		sql_master = sql_master + "     , sum(decode(dt.dept,'3520000',1,0)) deptcount4 ";
		sql_master = sql_master + "     , sum(decode(dt.dept,'3530000',1,0)) deptcount5 ";
		sql_master = sql_master + "     , sum(decode(dt.dept,'3540000',1,0)) deptcount6 ";
		sql_master = sql_master + "     , sum(decode(dt.dept,'3550000',1,0)) deptcount7 ";
		sql_master = sql_master + "     , sum(decode(dt.dept,'3560000',1,0)) deptcount8 ";
		sql_master = sql_master + "     , sum(decode(dt.dept,'3570000',1,0)) deptcount9 ";
		sql_master = sql_master + "     , sum(decode(dt.dept,'3580000',1,0)) deptcount10 ";
		sql_master = sql_master + "     , sum(decode(dt.dept,'6280000',1,0)) deptcount11 ";
		sql_master = sql_master + "     , sum(decode(dt.dept,'0000000',1,0)) deptcount12 ";
		sql_master = sql_master + "     , sum(decode(dt.dept,'9999999',1,0)) deptcount13 ";
		sql_master = sql_master + "     , count(*) totno  ";
		sql_master = sql_master + "  FROM tb_grseq a,tb_maincode mc, tb_subcode sc, tb_grresult gr, tb_dept dt, tb_grcode d  ";
		sql_master = sql_master + " WHERE a.grcode = d.grcode  ";
		sql_master = sql_master + " AND a.grcode   = gr.grcode  ";
		sql_master = sql_master + " AND a.grseq    = gr.grseq  ";
		sql_master = sql_master + " AND gr.rdept =dt.dept ";
		sql_master = sql_master + " AND (mc.cd_gubun(+)='G' AND d.grtype=mc.major_code(+))   ";
		sql_master = sql_master + " AND (sc.cd_gubun(+)='G' AND d.grtype=sc.major_code(+) AND d.grsubcd=sc.minor_code(+))  ";
		sql_master = sql_master + " AND a.grseq like '" + p_year_Param + "' ||'%'  and gr.rgrayn='Y' ";
		sql_master = sql_master + "GROUP BY (d.grtype || d.grsubcd), a.grcode, a.grseq ) ";
		sql_master = sql_master + "GROUP BY gubunnm, gubun";
	}

	private void initSQLdetailVarient(){
		sql_detail = "SELECT decode(substr(a.grseq,6,1),'1',min(d.grcodenm) ||'(1)',min(d.grcodenm)||'('||substr(a.grseq,6,1)||')') txt_grcodenm ";
		sql_detail = sql_detail + "     , count(*) totno  ";
		sql_detail = sql_detail + "     , sum(decode(dt.dept,'6280000',1,0)) deptcount11 ";
		sql_detail = sql_detail + "     , sum(decode(dt.dept,'3490000',1,0)) deptcount1 ";
		sql_detail = sql_detail + "     , sum(decode(dt.dept,'3500000',1,0)) deptcount2 ";
		sql_detail = sql_detail + "     , sum(decode(dt.dept,'3510000',1,0)) deptcount3 ";
		sql_detail = sql_detail + "     , sum(decode(dt.dept,'3520000',1,0)) deptcount4 ";
		sql_detail = sql_detail + "     , sum(decode(dt.dept,'3530000',1,0)) deptcount5 ";
		sql_detail = sql_detail + "     , sum(decode(dt.dept,'3540000',1,0)) deptcount6 ";
		sql_detail = sql_detail + "     , sum(decode(dt.dept,'3550000',1,0)) deptcount7 ";
		sql_detail = sql_detail + "     , sum(decode(dt.dept,'3560000',1,0)) deptcount8 ";
		sql_detail = sql_detail + "     , sum(decode(dt.dept,'3570000',1,0)) deptcount9 ";
		sql_detail = sql_detail + "     , sum(decode(dt.dept,'3580000',1,0)) deptcount10 ";
		sql_detail = sql_detail + "     , sum(decode(dt.dept,'0000000',1,0)) deptcount12 ";
		sql_detail = sql_detail + "     , sum(decode(dt.dept,'9999999',1,0)) deptcount13 ";
		sql_detail = sql_detail + "     , (d.grtype || d.grsubcd) as gubun ";
		sql_detail = sql_detail + "     ,  (min(mc.mcode_name) || min(sc.scode_name) || '교육') as gubunnm ";
		sql_detail = sql_detail + "     ,  a.grcode ";
		sql_detail = sql_detail + "  FROM tb_grseq a,tb_maincode mc, tb_subcode sc, tb_grresult gr, tb_dept dt, tb_grcode d  ";
		sql_detail = sql_detail + " WHERE a.grcode = d.grcode  ";
		sql_detail = sql_detail + " AND a.grcode   = gr.grcode  ";
		sql_detail = sql_detail + " AND a.grseq    = gr.grseq  ";
		sql_detail = sql_detail + " AND gr.rdept =dt.dept ";
		sql_detail = sql_detail + " AND (mc.cd_gubun(+)='G' AND d.grtype=mc.major_code(+))   ";
		sql_detail = sql_detail + " AND (sc.cd_gubun(+)='G' AND d.grtype=sc.major_code(+) AND d.grsubcd=sc.minor_code(+))  ";
		sql_detail = sql_detail + " AND a.grseq like '" + p_year_Param + "' ||'%'  and gr.rgrayn='Y' ";
		sql_detail = sql_detail + " AND (d.grtype || d.grsubcd) = '" + master_GUBUN + "' ";
		sql_detail = sql_detail + "GROUP BY (d.grtype || d.grsubcd), a.grcode, a.grseq";
	}

	//-----ResultSet 객체에서 필드 값 설정 함수-----
	//ResultSet totSum 객체에서 필드 값 설정 함수
	private void setFieldVariableFromtotSum() throws Exception{
		totSum_TOT_TOTNO=totSum.getDouble(1);
		totSum_TOT_DEPTCOUNT11=totSum.getDouble(2);
		totSum_TOT_DEPTCOUNT1=totSum.getDouble(3);
		totSum_TOT_DEPTCOUNT2=totSum.getDouble(4);
		totSum_TOT_DEPTCOUNT3=totSum.getDouble(5);
		totSum_TOT_DEPTCOUNT4=totSum.getDouble(6);
		totSum_TOT_DEPTCOUNT5=totSum.getDouble(7);
		totSum_TOT_DEPTCOUNT6=totSum.getDouble(8);
		totSum_TOT_DEPTCOUNT7=totSum.getDouble(9);
		totSum_TOT_DEPTCOUNT8=totSum.getDouble(10);
		totSum_TOT_DEPTCOUNT9=totSum.getDouble(11);
		totSum_TOT_DEPTCOUNT10=totSum.getDouble(12);
		totSum_TOT_DEPTCOUNT12=totSum.getDouble(13);
		totSum_TOT_DEPTCOUNT13=totSum.getDouble(14);
	}

	//ResultSet totSum 객체의 필드 값 초기화 함수
	private void setFieldInitFromtotSum(){
		totSum_TOT_TOTNO=0;
		totSum_TOT_DEPTCOUNT11=0;
		totSum_TOT_DEPTCOUNT1=0;
		totSum_TOT_DEPTCOUNT2=0;
		totSum_TOT_DEPTCOUNT3=0;
		totSum_TOT_DEPTCOUNT4=0;
		totSum_TOT_DEPTCOUNT5=0;
		totSum_TOT_DEPTCOUNT6=0;
		totSum_TOT_DEPTCOUNT7=0;
		totSum_TOT_DEPTCOUNT8=0;
		totSum_TOT_DEPTCOUNT9=0;
		totSum_TOT_DEPTCOUNT10=0;
		totSum_TOT_DEPTCOUNT12=0;
		totSum_TOT_DEPTCOUNT13=0;
	}

	//ResultSet master 객체에서 필드 값 설정 함수
	private void setFieldVariableFrommaster() throws Exception{
		master_GUBUNNM=GetB(master.getString(1));
		master_GUBUN=GetB(master.getString(2));
		master_TOT_TOTNO=master.getDouble(3);
		master_시=master.getDouble(4);
		master_중구=master.getDouble(5);
		master_동구=master.getDouble(6);
		master_남구=master.getDouble(7);
		master_연수구=master.getDouble(8);
		master_남동구=master.getDouble(9);
		master_부평구=master.getDouble(10);
		master_계양구=master.getDouble(11);
		master_서구=master.getDouble(12);
		master_강화군=master.getDouble(13);
		master_웅진군=master.getDouble(14);
		master_타시도=master.getDouble(15);
		master_기타=master.getDouble(16);
	}

	//ResultSet master 객체의 필드 값 초기화 함수
	private void setFieldInitFrommaster(){
		master_GUBUNNM="";
		master_GUBUN="";
		master_TOT_TOTNO=0;
		master_시=0;
		master_중구=0;
		master_동구=0;
		master_남구=0;
		master_연수구=0;
		master_남동구=0;
		master_부평구=0;
		master_계양구=0;
		master_서구=0;
		master_강화군=0;
		master_웅진군=0;
		master_타시도=0;
		master_기타=0;
	}

	//ResultSet detail 객체에서 필드 값 설정 함수
	private void setFieldVariableFromdetail() throws Exception{
		detail_TXT_GRCODENM=GetB(detail.getString(1));
		detail_TOTNO=detail.getDouble(2);
		detail_DEPTCOUNT11=detail.getDouble(3);
		detail_DEPTCOUNT1=detail.getDouble(4);
		detail_DEPTCOUNT2=detail.getDouble(5);
		detail_DEPTCOUNT3=detail.getDouble(6);
		detail_DEPTCOUNT4=detail.getDouble(7);
		detail_DEPTCOUNT5=detail.getDouble(8);
		detail_DEPTCOUNT6=detail.getDouble(9);
		detail_DEPTCOUNT7=detail.getDouble(10);
		detail_DEPTCOUNT8=detail.getDouble(11);
		detail_DEPTCOUNT9=detail.getDouble(12);
		detail_DEPTCOUNT10=detail.getDouble(13);
		detail_DEPTCOUNT12=detail.getDouble(14);
		detail_DEPTCOUNT13=detail.getDouble(15);
		detail_GUBUN=GetB(detail.getString(16));
		detail_GUBUNNM=GetB(detail.getString(17));
		detail_GRCODE=GetB(detail.getString(18));
	}

	//ResultSet detail 객체의 필드 값 초기화 함수
	private void setFieldInitFromdetail(){
		detail_TXT_GRCODENM="";
		detail_TOTNO=0;
		detail_DEPTCOUNT11=0;
		detail_DEPTCOUNT1=0;
		detail_DEPTCOUNT2=0;
		detail_DEPTCOUNT3=0;
		detail_DEPTCOUNT4=0;
		detail_DEPTCOUNT5=0;
		detail_DEPTCOUNT6=0;
		detail_DEPTCOUNT7=0;
		detail_DEPTCOUNT8=0;
		detail_DEPTCOUNT9=0;
		detail_DEPTCOUNT10=0;
		detail_DEPTCOUNT12=0;
		detail_DEPTCOUNT13=0;
		detail_GUBUN="";
		detail_GUBUNNM="";
		detail_GRCODE="";
	}

	//-----고정 데이터 초기화 함수-----
	private void initConstVarient(){
		sheet10_A1=" (3) 소속별";
		sheet10_A2="구  분";
		sheet10_B2="과  정  명";
		sheet10_C2="총계";
		sheet10_D2="시";
		sheet10_E2="중구";
		sheet10_F2="동구";
		sheet10_G2="남구";
		sheet10_H2="연수구";
		sheet10_I2="남동구";
		sheet10_J2="부평구";
		sheet10_K2="계양구";
		sheet10_L2="서구";
		sheet10_M2="강화군";
		sheet10_N2="웅진군";
		sheet10_O2="타시도";
		sheet10_P2="기타";
		sheet10_A3="총          계";
		sheet10_B4="소     계";
		sheet20_A1=" (3) 소속별";
	}

	//-----페이지 스킵 관련 함수-----
	//페이지 스킵시 호출되는 함수로서 페이지 번호를 증가시키고 페이지 지시문 출력 그리고 Y좌표 초기화
	//매개변수에 따라 해당 쉬트의 배경 이미지, 머리글 밴드, 바닥글 밴드 함수 호출
	private void pageSkip(int nIndex) throws Exception{
		nXCurPos=nXStartPos;
		nYCurPos=nYStartPos;
		nPageNum=nPageNum+1;
		out.print("-- " + nPageNum + " PAGE --\r");

		switch(nIndex){
			case 10:		//SHEET=Sheet=1   FRAME=0에서 페이지 스킵시
			getScriptFromtitle(false, true);		//머리글 밴드 호출
			break;
			case 20:		//SHEET=Sheet=2   FRAME=0에서 페이지 스킵시
			break;
		}
	}

	//페이지 스킵이 필요한지 검사하는 함수
	private boolean isPageSkip(int nTestPos){
		if(nTestPos>nYEndPos){
			return true;
		}else{
			return false;
		}
	}

	//----AI_CHART_OBJ1 챠트 데이터 함수----
	private void getChartDataAI_CHART_OBJ1( ) throws Exception{
		//지역 변수 선언 및 초기화
		String chartProp="";   //챠트 프로퍼티 스크립트

		//DataSet 객체 생성
		//ResultSet master 객체의 생성
		if(master==null){
			master = stat_master.executeQuery(sql_master);
		}else{
			master.beforeFirst();
		}
		if(!master.isBeforeFirst()){		//생성된 ResultSet에 레코드가 없으면
			return;
		}

		//계열(Series) 필드 설정
		AI_CHART_OBJ1="\t";
		AI_CHART_OBJ1=AI_CHART_OBJ1 + "시\t";
		AI_CHART_OBJ1=AI_CHART_OBJ1 + "중구\t";
		AI_CHART_OBJ1=AI_CHART_OBJ1 + "동구\t";
		AI_CHART_OBJ1=AI_CHART_OBJ1 + "남구\t";
		AI_CHART_OBJ1=AI_CHART_OBJ1 + "연수구\t";
		AI_CHART_OBJ1=AI_CHART_OBJ1 + "남동구\t";
		AI_CHART_OBJ1=AI_CHART_OBJ1 + "부평구\t";
		AI_CHART_OBJ1=AI_CHART_OBJ1 + "계양구\t";
		AI_CHART_OBJ1=AI_CHART_OBJ1 + "서구\t";
		AI_CHART_OBJ1=AI_CHART_OBJ1 + "강화군\t";
		AI_CHART_OBJ1=AI_CHART_OBJ1 + "웅진군\t";
		AI_CHART_OBJ1=AI_CHART_OBJ1 + "타시도\t";
		AI_CHART_OBJ1=AI_CHART_OBJ1 + "기타\r\n";

		while(master.next()){   //데이터 루프문
			//데이터 fetch
			setFieldVariableFrommaster();   //RecordSet master에서 필드 값 설정

			//X축 레이블 필드 설정
			AI_CHART_OBJ1=AI_CHART_OBJ1 + master_GUBUNNM + "\t";

			//데이터 설정
			AI_CHART_OBJ1=AI_CHART_OBJ1 + master_시 + "\t";
			AI_CHART_OBJ1=AI_CHART_OBJ1 + master_중구 + "\t";
			AI_CHART_OBJ1=AI_CHART_OBJ1 + master_동구 + "\t";
			AI_CHART_OBJ1=AI_CHART_OBJ1 + master_남구 + "\t";
			AI_CHART_OBJ1=AI_CHART_OBJ1 + master_연수구 + "\t";
			AI_CHART_OBJ1=AI_CHART_OBJ1 + master_남동구 + "\t";
			AI_CHART_OBJ1=AI_CHART_OBJ1 + master_부평구 + "\t";
			AI_CHART_OBJ1=AI_CHART_OBJ1 + master_계양구 + "\t";
			AI_CHART_OBJ1=AI_CHART_OBJ1 + master_서구 + "\t";
			AI_CHART_OBJ1=AI_CHART_OBJ1 + master_강화군 + "\t";
			AI_CHART_OBJ1=AI_CHART_OBJ1 + master_웅진군 + "\t";
			AI_CHART_OBJ1=AI_CHART_OBJ1 + master_타시도 + "\t";
			AI_CHART_OBJ1=AI_CHART_OBJ1 + master_기타 + "\r\n";
		}   //while end

		//챠트 프로퍼티 스크립트
		chartProp=chartProp + "SeriesToXLabel=TRUE\r\n";
		if(!chartProp.equals(isEmpty)){
			AI_CHART_OBJ1=AI_CHART_OBJ1 + "--PROPERTY\r\n";
			AI_CHART_OBJ1=AI_CHART_OBJ1 + chartProp;
		}
	}

	//-----공통 함수 선언-----
	private void getScriptHeader(String paper, String size, String value, String orient) throws Exception{
		out.print("--SCRIPT_START31--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void getSheetPaperInfo(String paper, String size, String value, String orient) throws Exception{
		out.print("--PAPER_INFO--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void initSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bFirstFrame){
		if(bFirstFrame){
			nStartPage=nMaxPage+1;
			nYLastPos=0;
		}
		nPageNum=nStartPage;
		nYStartPos=constStartY;
		nYEndPos=constEndY;
		nYCurPos=nYStartPos;
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
	}

	private void initChildSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bIsMultiFrame, boolean bIsFirstFrame){
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
		nYStartPos=constStartY;
		nYEndPos=constEndY;

		if(bIsMultiFrame){
			if(bIsFirstFrame){
				nStartPage=nPageNum;
				nYSavePos=nYCurPos;
				nYLastPos=0;
			}else{
				nPageNum=nStartPage;
				nYCurPos=nYSavePos;
			}
		}else{
			nStartPage=nPageNum;
		}
	}

	//Empty Row만으로 구성되어 출력 위치를 조정하기 위한 VoidBand 함수
	//nRangePos - VoidBand의 출력 영역
	//nIndex - PageSkip 함수 호출시 전달할 쉬트 인덱스
	private boolean voidBandNoneData(int nRangePos, int nIndex) throws Exception{
		int nTestPos;
		nTestPos=nYCurPos+nRangePos;
		if(isPageSkip(nTestPos)){
			pageSkip(nIndex);
			return true;
		}else{
			nYCurPos=nYCurPos+nRangePos;
			return false;
		}
	}

	private String Get0(String str){
		if(str==null){
			return "0";
		}else{
			if(str.equals("")){
				return "0";
			}else{
				return str;
			}
		}
	}

	private String GetB(String str){
		if(str==null){
			return "";
		}else{
			return str;
		}
	}

	private double SUM(double accVal, double tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(double accVal, long tmpVal){
		return(accVal+(double)tmpVal);
	}

	private long SUM(long accVal, long tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(long accVal, double tmpVal){
		return((double)accVal+tmpVal);
	}

	private long COUNT(long accuCNT){
		return ++accuCNT;
	}

	private long MIN(long maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(long maxV, double maxTempV){
		if((double)maxV<=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, double maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}
	private long MAX(long maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(long maxV, double maxTempV){
		if((double)maxV>=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, double maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}

	private double AVG(double sumVal, long cntVal){
		return(sumVal/cntVal);
	}

	private double AVG(long sumVal, long cntVal){
		return((double)sumVal/(double)cntVal);
	}

	private String aiReplace(String strAll, String strSrc, String strDest) {
		while(strAll.indexOf(strSrc) != -1) {
			strAll = strAll.substring(0, strAll.indexOf(strSrc)) + strDest + strAll.substring(strAll.indexOf(strSrc) + strSrc.length(), strAll.length());
		}
		return strAll;
	}

	private String toDate() {
		SimpleDateFormat dateFormat=new SimpleDateFormat("'#SERVERDATE#'yyyy/MM/dd/HH/mm/ss");
		java.util.Date currentDate = new java.util.Date();
		return dateFormat.format(currentDate);
	}

	final String toKor (String en){
		if(en==null){
			return "";
		}
		try{
			return new String(en.getBytes("8859_1"), "KSC5601");
		}catch(Exception e){return en;}
	}
	//문자의 폭을 조사하여 데이터의 출력 높이를 자동적으로 조정하는 함수
	private int getPrintHeight(String data, int[] charWidth, int fontSize, int cellWidth, int cellHeight, int nMaxHeight){
		int ch;
		int len = 95;
		int width = 0;
		int asciiWidth = 0;
		int linePitch = (int)(fontSize*1.4);
		int height = linePitch;
		int size = data.length();
		cellWidth = cellWidth-4;
		for (int i = 0; i < size; i++) {
			ch = data.charAt(i);

			if(ch<32 && !(ch==10 || ch==20 || ch==13)){
				continue;
			}

			if(ch>0x7F){
				width += asciiWidth;

				if (width > cellWidth) {
					width = asciiWidth;
					height += linePitch;
				}
				asciiWidth = 0;

				width += charWidth[len];
				if (width > cellWidth) {
					width = charWidth[len];
					height += linePitch;
				}
			} else if (ch==10 || ch==20) {
				width = 0;
				asciiWidth = 0;
				height += linePitch;
			} else if (ch==13) {
				width = 0;
				asciiWidth = 0;
				height += linePitch;
				if ((i != size-1) && (10 == (int)data.charAt(i+1))) {
					i++;
				}
			} else {
				if ((ch>64 && ch<91) || (ch>96 && ch<123)) {
					asciiWidth += charWidth[ch-32];
					if (i==size-1){
						width = width + asciiWidth;
						if (width>cellWidth){
							height += linePitch;
						}
					}
				} else {
					width += asciiWidth;

					if (width > cellWidth) {
						width = asciiWidth;
						height += linePitch;
					}

					asciiWidth = 0;

					width += charWidth[ch-32];
					if (width > cellWidth) {
						width = charWidth[ch-32];
						height += linePitch;
					}
				}
			}
		}

		if (height>cellHeight) {
			height=height-cellHeight;
		}else{
			height=0;
		}

		height = (int)MAX((long)height,(long)nMaxHeight);
		return height;
	}
}
%>
