<%
/* ### Generated by AIDesigner 3.7.1.23 ### */
%>

<%@ page language="java" import="java.sql.*,java.io.*,java.text.*" %>
<%@ page contentType="text/plain; charset=euc-kr" %>

<%
Object[] userObj = null;
ReportHandler handler = new ReportHandler(request,response,userObj);
handler.service(out);
%>

<%!
class ReportHandler{
	//공통 변수 선언
	private Object[] userObj = null;
	private int nStartPage;		//각 쉬트별 시작 페이지 저장
	private int nMaxPage;		//한 쉬트가 실행된 후 생성된 최대 페이지 번호 저장
	private int nPageNum;		//현재 페이지 번호
	private int nYStartPos;		//쉬트에서 Y 시작 좌표
	private int nYEndPos;		//쉬트에서 Y 끝 좌표
	private int nYCurPos;		//현재 Y 좌표
	private int nYSavePos;		//연결된 멀티 프레임 쉬트에서 시작 Y 좌표 저장
	private int nYLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 Y 좌표 저장
	private int nXStartPos;		//쉬트에서 X 시작 좌표
	private int nXEndPos;		//쉬트에서 X 끝 좌표
	private int nXCurPos;		//현재 X 좌표
	private int nXSavePos;		//연결된 멀티 프레임 쉬트에서 시작 X 좌표 저장
	private int  nXLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 X 좌표 저장
	private boolean bIsBeforePageSkip;		//조건 밴드에서 페이지 넘기기 여부 판단
	private int nLoopRef;		//절대 양식에서 루프 참조 변수
	private String isEmpty="";		//빈 문자열 비교에 사용

	private HttpServletRequest request;
	private HttpServletResponse response;
	private JspWriter out;

	//-----데이터 변수 선언-----
	String sheet10_A1;
	String sheet10_A3;
	String sheet10_A4;
	String sheet10_B4;
	String sheet10_C4;
	String sheet10_D4;
	String sheet10_E4;
	String sheet10_F4;
	String sheet10_G4;
	String sheet10_H4;
	String sheet10_I4;
	String sheet10_J4;
	String sheet10_A5;
	double sheet10_B5;
	double sheet10_C5;
	double sheet10_D5;
	double sheet10_E5;
	double sheet10_F5;
	double sheet10_G5;
	double sheet10_H5;
	double sheet10_I5;
	double sheet10_J5;
	String sheet20_A1;
	String sheet20_A2;
	String sheet20_B2;
	String sheet20_C2;
	String sheet20_D2;
	String sheet20_E2;
	String sheet20_F2;
	String sheet20_G2;
	String sheet20_H2;
	String sheet20_I2;
	String sheet20_A3;
	long sheet20_B3;
	long sheet20_C3;
	long sheet20_D3;
	long sheet20_E3;
	long sheet20_F3;
	long sheet20_G3;
	long sheet20_H3;
	long sheet20_I3;
	String sheet30_A1;
	String sheet30_A2;
	String sheet30_B2;
	String sheet30_C2;
	String sheet30_D2;
	String sheet30_A3;
	double sheet30_B3;
	double sheet30_C3;
	double sheet30_D3;
	String sheet40_A1;
	String sheet40_A2;
	String sheet40_B2;
	String sheet40_C2;
	double sheet40_A3;
	double sheet40_B3;
	double sheet40_C3;
	String sheet50_A1;
	String sheet50_A2;
	String sheet50_B2;
	String sheet50_C2;
	String sheet50_D2;
	String sheet50_E2;
	String sheet50_F2;
	String sheet50_G2;
	String sheet50_H2;
	String sheet50_I2;
	String sheet50_J2;
	String sheet50_K2;
	String sheet50_A3;
	double sheet50_B3;
	double sheet50_C3;
	double sheet50_D3;
	double sheet50_E3;
	double sheet50_F3;
	double sheet50_G3;
	double sheet50_H3;
	double sheet50_I3;
	double sheet50_J3;
	double sheet50_K3;
	String sheet60_A1;
	String sheet60_A2;
	String sheet60_D2;
	String sheet60_G2;
	String sheet60_J2;
	String sheet60_M2;
	String sheet60_A3;
	String sheet60_B3;
	String sheet60_C3;
	String sheet60_D3;
	String sheet60_E3;
	String sheet60_F3;
	String sheet60_G3;
	String sheet60_H3;
	String sheet60_I3;
	String sheet60_J3;
	String sheet60_K3;
	String sheet60_L3;
	String sheet60_M3;
	String sheet60_N3;
	String sheet60_O3;
	double sheet60_A4;
	double sheet60_B4;
	double sheet60_C4;
	double sheet60_D4;
	double sheet60_E4;
	double sheet60_F4;
	double sheet60_G4;
	double sheet60_H4;
	double sheet60_I4;
	double sheet60_J4;
	double sheet60_K4;
	double sheet60_L4;
	double sheet60_M4;
	double sheet60_N4;
	double sheet60_O4;
	double sheet60_R4;
	double sheet60_S4;

	//-----Connection, Statement, ResultSet 객체 선언-----
	private Connection conn_DUNET;		//DSN DUNET Connection 객체
	private java.sql.Statement stat_AG;		//ResultSet AG 객체를 생성하기 위한 Statement 객체
	private ResultSet AG;		//ResultSet AG 객체
	private java.sql.Statement stat_T;		//ResultSet T 객체를 생성하기 위한 Statement 객체
	private ResultSet T;		//ResultSet T 객체
	private java.sql.Statement stat_S;		//ResultSet S 객체를 생성하기 위한 Statement 객체
	private ResultSet S;		//ResultSet S 객체
	private java.sql.Statement stat_M;		//ResultSet M 객체를 생성하기 위한 Statement 객체
	private ResultSet M;		//ResultSet M 객체
	private java.sql.Statement stat_J;		//ResultSet J 객체를 생성하기 위한 Statement 객체
	private ResultSet J;		//ResultSet J 객체
	private java.sql.Statement stat_H;		//ResultSet H 객체를 생성하기 위한 Statement 객체
	private ResultSet H;		//ResultSet H 객체

	//-----SQL 변수 선언-----
	private String sql_AG;		//ResultSet AG 객체를 생성하기 위한 쿼리문 저장
	private String sql_T;		//ResultSet T 객체를 생성하기 위한 쿼리문 저장
	private String sql_S;		//ResultSet S 객체를 생성하기 위한 쿼리문 저장
	private String sql_M;		//ResultSet M 객체를 생성하기 위한 쿼리문 저장
	private String sql_J;		//ResultSet J 객체를 생성하기 위한 쿼리문 저장
	private String sql_H;		//ResultSet H 객체를 생성하기 위한 쿼리문 저장

	//-----쿼리 필드 변수 선언-----
	//ResultSet AG 객체에서 필드 값을 받는 쿼리 필드 변수
	private double AG_STUCNT0;
	private double AG_STUCNT10;
	private double AG_STUCNT20;
	private double AG_STUCNT30;
	private double AG_STUCNT40;
	private double AG_STUCNT50;
	private double AG_STUCNT60;
	private double AG_STUCNT70;
	private double AG_STUCNTTOT;

	//ResultSet T 객체에서 필드 값을 받는 쿼리 필드 변수
	private double T_STUCNT09;
	private double T_STUCNT10;
	private double T_STUCNT11;
	private double T_STUCNT13;
	private double T_STUCNT14;
	private double T_STUCNT15;
	private double T_STUCNT16;

	//ResultSet S 객체에서 필드 값을 받는 쿼리 필드 변수
	private double S_MANCNT;
	private double S_WOCNT;
	private double S_STUCNTTOT;

	//ResultSet M 객체에서 필드 값을 받는 쿼리 필드 변수
	private double M_YESCNT;
	private double M_NOCNT;
	private double M_STUCNTTOT;

	//ResultSet J 객체에서 필드 값을 받는 쿼리 필드 변수
	private double J_STUCNT01;
	private double J_STUCNT02;
	private double J_STUCNT03;
	private double J_STUCNT04;
	private double J_STUCNT05;
	private double J_STUCNT06;
	private double J_STUCNT07;
	private double J_STUCNT08;
	private double J_STUCNT09;
	private double J_STUCNT99;
	private double J_STUCNTTOT;

	//ResultSet H 객체에서 필드 값을 받는 쿼리 필드 변수
	private double H_PRIMF;
	private double H_PRIMC;
	private double H_PRIMR;
	private double H_MIDF;
	private double H_MIDC;
	private double H_MIDR;
	private double H_HIGHF;
	private double H_HIGHC;
	private double H_HIGHR;
	private double H_UNIVF;
	private double H_UNIVC;
	private double H_UNIVR;
	private double H_COURSEF;
	private double H_COURSEC;
	private double H_COURSER;
	private double H_STUCNTTOT;

	//파라미터 변수 선언
	String p_grcode_Param;
	String p_grseq_Param;

	//ReportHandler 생성자 함수
	ReportHandler(HttpServletRequest request,HttpServletResponse response,Object[] userObj){
		this.request=request;
		this.response=response;
		this.userObj=userObj;
	}

	//ReportHandler 서비스 함수
	void service(JspWriter out) throws Exception{
		try{    //try 구문
			this.out=out;
			nMaxPage=0;    //nMaxPage 초기화

			//스크립트 헤더 함수 호출
			getScriptHeader("A4", "2100x2970", "9", "VERTICAL");

			//파라미터 설정 함수 호출
			setParam();

			//고정 데이터 초기화 함수 호출
			initConstVarient();

			//Connection 및 Statement 객체 생성 함수 호출
			createConnAndStateObject();

			//쿼리문 초기화 함수 호출
			initSQLConst();

			//쉬트 함수 호출
			//SHEET=Sheet1   FRAME=0 함수 호출
			executeSheet10();

			//---------------스크립트 종료---------------
			out.print("--SCRIPT_END--\r");
		}catch(Exception e){    //catch 구문
			out.print(e);
			out.print("AI!REPORT JSP ERROR!!!!\r");
		}finally{    //finally 구문
			try{    //finally try 구문
				//DataSet Close
				if(H!=null) H.close();
				if(stat_H!=null) stat_H.close();
				if(J!=null) J.close();
				if(stat_J!=null) stat_J.close();
				if(M!=null) M.close();
				if(stat_M!=null) stat_M.close();
				if(S!=null) S.close();
				if(stat_S!=null) stat_S.close();
				if(T!=null) T.close();
				if(stat_T!=null) stat_T.close();
				if(AG!=null) AG.close();
				if(stat_AG!=null) stat_AG.close();
				if(conn_DUNET!=null) conn_DUNET.close();
			}catch(Exception e){    //finally catch 구문
			}    //end finally try
		}    //end try
	}

	//-----쉬트 함수-----
	//-----SHEET=Sheet1   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet10( ) throws Exception{
		//쉬트 초기화 함수 호출
		initSheetVariant(38, 94, 557, 801, true);

		//시작 페이지 번호 출력
		out.print("-- " + nPageNum + " PAGE --\r");

		//밴드 함수 호출
		getScriptFromtitle(true, true);    //머리글 밴드 호출
		getScriptFrompart1(true, true);    //Void 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기

		//자식 쉬트 호출
		//SHEET=Sheet2   FRAME=0 함수 호출
		executeSheet20();
		//SHEET=Sheet3   FRAME=0 함수 호출
		executeSheet30();
		//SHEET=Sheet4   FRAME=0 함수 호출
		executeSheet40();
		//SHEET=Sheet5   FRAME=0 함수 호출
		executeSheet50();
		//SHEET=Sheet6   FRAME=0 함수 호출
		executeSheet60();
	}

	//-----SHEET=Sheet2   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet20( ) throws Exception{
		//쉬트 초기화 함수 호출
		initChildSheetVariant(38, 94, 557, 801, false, false);

		//시작 페이지 번호 출력
		out.print("-- " + nPageNum + " PAGE --\r");

		//밴드 함수 호출
		getScriptFrompart2(true, true);    //Void 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기
	}

	//-----SHEET=Sheet3   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet30( ) throws Exception{
		//쉬트 초기화 함수 호출
		initChildSheetVariant(38, 94, 557, 801, false, false);

		//시작 페이지 번호 출력
		out.print("-- " + nPageNum + " PAGE --\r");

		//밴드 함수 호출
		getScriptFrompart3(true, true);    //Void 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기
	}

	//-----SHEET=Sheet4   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet40( ) throws Exception{
		//쉬트 초기화 함수 호출
		initChildSheetVariant(38, 94, 557, 801, false, false);

		//시작 페이지 번호 출력
		out.print("-- " + nPageNum + " PAGE --\r");

		//밴드 함수 호출
		getScriptFrompart4(true, true);    //Void 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기
	}

	//-----SHEET=Sheet5   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet50( ) throws Exception{
		//쉬트 초기화 함수 호출
		initChildSheetVariant(38, 94, 557, 801, false, false);

		//시작 페이지 번호 출력
		out.print("-- " + nPageNum + " PAGE --\r");

		//밴드 함수 호출
		getScriptFrompart5(true, true);    //Void 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기
	}

	//-----SHEET=Sheet6   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet60( ) throws Exception{
		//쉬트 초기화 함수 호출
		initChildSheetVariant(38, 94, 557, 801, false, false);

		//시작 페이지 번호 출력
		out.print("-- " + nPageNum + " PAGE --\r");

		//밴드 함수 호출
		getScriptFrompart6(true, true);    //Void 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기
	}

	//-----밴드 함수-----
	//----title HeaderBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : title
	//----밴드 종류 : 머리글 밴드
	//----bIsFrist : 쉬트 함수에서 최초로 호출될 때 true, 페이지 스킵 함수에서 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromtitle(boolean bIsFirst, boolean bIsPrint) throws Exception{
		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 함수 호출
			writeScripttitle();
		}   //end if(bIsPrint)
	}

	//----part1 VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : part1
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFrompart1(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=70;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//DataSet 객체 생성
			//ResultSet AG 객체의 생성
			if(AG==null){
				AG = stat_AG.executeQuery(sql_AG);
			}else{
				AG.beforeFirst();
			}

			//데이터 fetch
			if(AG.next()){
				setFieldVariableFromAG();	//ResultSet AG에서 필드 값 설정
			}else{
				setFieldInitFromAG();	//ResultSet AG의 필드 값 초기화
			}

			//데이터 변수 초기화
			sheet10_B5=0;
			sheet10_C5=0;
			sheet10_D5=0;
			sheet10_E5=0;
			sheet10_F5=0;
			sheet10_G5=0;
			sheet10_H5=0;
			sheet10_I5=0;
			sheet10_J5=0;

			//데이터 변수 할당
			sheet10_B5=AG_STUCNT0;
			sheet10_C5=AG_STUCNT10;
			sheet10_D5=AG_STUCNT20;
			sheet10_E5=AG_STUCNT30;
			sheet10_F5=AG_STUCNT40;
			sheet10_G5=AG_STUCNT50;
			sheet10_H5=AG_STUCNT60;
			sheet10_I5=AG_STUCNT70;
			sheet10_J5=AG_STUCNTTOT;
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptpart1();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//----part2 VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet2    FRAME=Frame0
	//----밴드 이름 : part2
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFrompart2(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=86;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//DataSet 객체 생성
			//ResultSet T 객체의 생성
			if(T==null){
				T = stat_T.executeQuery(sql_T);
			}else{
				T.beforeFirst();
			}

			//데이터 fetch
			if(T.next()){
				setFieldVariableFromT();	//ResultSet T에서 필드 값 설정
			}else{
				setFieldInitFromT();	//ResultSet T의 필드 값 초기화
			}

			//데이터 변수 초기화
			sheet20_B3=0L;
			sheet20_C3=0L;
			sheet20_D3=0L;
			sheet20_E3=0L;
			sheet20_F3=0L;
			sheet20_G3=0L;
			sheet20_H3=0L;
			sheet20_I3=0L;

			//데이터 변수 할당
			sheet20_B3=(long)T_STUCNT09;
			sheet20_C3=(long)T_STUCNT10;
			sheet20_D3=(long)T_STUCNT11;
			sheet20_E3=(long)T_STUCNT13;
			sheet20_F3=(long)T_STUCNT14;
			sheet20_G3=(long)T_STUCNT15;
			sheet20_H3=(long)T_STUCNT16;
			sheet20_I3=sheet20_B3+sheet20_C3+sheet20_D3+sheet20_E3+sheet20_F3+sheet20_G3+sheet20_H3;
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptpart2();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//----part3 VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet3    FRAME=Frame0
	//----밴드 이름 : part3
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFrompart3(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=70;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//DataSet 객체 생성
			//ResultSet S 객체의 생성
			if(S==null){
				S = stat_S.executeQuery(sql_S);
			}else{
				S.beforeFirst();
			}

			//데이터 fetch
			if(S.next()){
				setFieldVariableFromS();	//ResultSet S에서 필드 값 설정
			}else{
				setFieldInitFromS();	//ResultSet S의 필드 값 초기화
			}

			//데이터 변수 초기화
			sheet30_B3=0;
			sheet30_C3=0;
			sheet30_D3=0;

			//데이터 변수 할당
			sheet30_B3=S_MANCNT;
			sheet30_C3=S_WOCNT;
			sheet30_D3=S_STUCNTTOT;
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptpart3();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//----part4 VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet4    FRAME=Frame0
	//----밴드 이름 : part4
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFrompart4(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=70;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//DataSet 객체 생성
			//ResultSet M 객체의 생성
			if(M==null){
				M = stat_M.executeQuery(sql_M);
			}else{
				M.beforeFirst();
			}

			//데이터 fetch
			if(M.next()){
				setFieldVariableFromM();	//ResultSet M에서 필드 값 설정
			}else{
				setFieldInitFromM();	//ResultSet M의 필드 값 초기화
			}

			//데이터 변수 초기화
			sheet40_A3=0;
			sheet40_B3=0;
			sheet40_C3=0;

			//데이터 변수 할당
			sheet40_A3=M_YESCNT;
			sheet40_B3=M_NOCNT;
			sheet40_C3=M_STUCNTTOT;
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptpart4();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//----part5 VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet5    FRAME=Frame0
	//----밴드 이름 : part5
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFrompart5(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=86;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//DataSet 객체 생성
			//ResultSet J 객체의 생성
			if(J==null){
				J = stat_J.executeQuery(sql_J);
			}else{
				J.beforeFirst();
			}

			//데이터 fetch
			if(J.next()){
				setFieldVariableFromJ();	//ResultSet J에서 필드 값 설정
			}else{
				setFieldInitFromJ();	//ResultSet J의 필드 값 초기화
			}

			//데이터 변수 초기화
			sheet50_B3=0;
			sheet50_C3=0;
			sheet50_D3=0;
			sheet50_E3=0;
			sheet50_F3=0;
			sheet50_G3=0;
			sheet50_H3=0;
			sheet50_I3=0;
			sheet50_J3=0;
			sheet50_K3=0;

			//데이터 변수 할당
			sheet50_B3=J_STUCNT01;
			sheet50_C3=J_STUCNT02;
			sheet50_D3=J_STUCNT03;
			sheet50_E3=J_STUCNT04;
			sheet50_F3=J_STUCNT05;
			sheet50_G3=J_STUCNT06;
			sheet50_H3=J_STUCNT07;
			sheet50_I3=J_STUCNT08;
			sheet50_J3=J_STUCNT09;
			sheet50_K3=J_STUCNT99;
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptpart5();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//----part6 VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet6    FRAME=Frame0
	//----밴드 이름 : part6
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFrompart6(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=80;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//DataSet 객체 생성
			//ResultSet H 객체의 생성
			if(H==null){
				H = stat_H.executeQuery(sql_H);
			}else{
				H.beforeFirst();
			}

			//데이터 fetch
			if(H.next()){
				setFieldVariableFromH();	//ResultSet H에서 필드 값 설정
			}else{
				setFieldInitFromH();	//ResultSet H의 필드 값 초기화
			}

			//데이터 변수 초기화
			sheet60_A4=0;
			sheet60_B4=0;
			sheet60_C4=0;
			sheet60_D4=0;
			sheet60_E4=0;
			sheet60_F4=0;
			sheet60_G4=0;
			sheet60_H4=0;
			sheet60_I4=0;
			sheet60_J4=0;
			sheet60_K4=0;
			sheet60_L4=0;
			sheet60_M4=0;
			sheet60_N4=0;
			sheet60_O4=0;
			sheet60_R4=0;
			sheet60_S4=0;

			//데이터 변수 할당
			sheet60_A4=H_PRIMF;
			sheet60_B4=H_PRIMC;
			sheet60_C4=H_PRIMR;
			sheet60_D4=H_MIDF;
			sheet60_E4=H_MIDC;
			sheet60_F4=H_MIDR;
			sheet60_G4=H_HIGHF;
			sheet60_H4=H_HIGHC;
			sheet60_I4=H_HIGHR;
			sheet60_J4=H_UNIVF;
			sheet60_K4=H_UNIVC;
			sheet60_L4=H_UNIVR;
			sheet60_M4=H_COURSEF;
			sheet60_N4=H_COURSEC;
			sheet60_O4=H_COURSER;
			sheet60_R4=H_COURSER;
			sheet60_S4=H_STUCNTTOT;
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptpart6();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----스크립트 출력 함수-----
	//----title 스크립트 문 출력 함수----
	private void writeScripttitle( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT(38,41,518,1,16,0/,돋움체,RGB[0,0,0],BOLD, , ,NONE,38,1)");
		out.println(sheet10_A1+"\r");
	}

	//----part1 스크립트 문 출력 함수----
	private void writeScriptpart1( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",154,0,11,0/,돋움체,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_A3+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+20)+",50,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",50,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",50,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",50,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",50,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+20)+",50,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A4+"\r");
		out.println("^CELLBG("+(nXCurPos+50)+","+(nYCurPos+20)+",52,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+50)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+50)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+50)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+50)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+50)+","+(nYCurPos+20)+",52,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_B4+"\r");
		out.println("^CELLBG("+(nXCurPos+102)+","+(nYCurPos+20)+",52,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+102)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+102)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+102)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+102)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+102)+","+(nYCurPos+20)+",52,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_C4+"\r");
		out.println("^CELLBG("+(nXCurPos+154)+","+(nYCurPos+20)+",52,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+154)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+154)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+154)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+154)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+154)+","+(nYCurPos+20)+",52,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_D4+"\r");
		out.println("^CELLBG("+(nXCurPos+206)+","+(nYCurPos+20)+",52,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+206)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+206)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+206)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+206)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+206)+","+(nYCurPos+20)+",52,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E4+"\r");
		out.println("^CELLBG("+(nXCurPos+258)+","+(nYCurPos+20)+",52,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+258)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+258)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+258)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+258)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+258)+","+(nYCurPos+20)+",52,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F4+"\r");
		out.println("^CELLBG("+(nXCurPos+310)+","+(nYCurPos+20)+",52,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+310)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+310)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+310)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+310)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+310)+","+(nYCurPos+20)+",52,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_G4+"\r");
		out.println("^CELLBG("+(nXCurPos+362)+","+(nYCurPos+20)+",52,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+362)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+362)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+362)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+362)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+362)+","+(nYCurPos+20)+",52,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_H4+"\r");
		out.println("^CELLBG("+(nXCurPos+414)+","+(nYCurPos+20)+",52,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+414)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+414)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+414)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+414)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+414)+","+(nYCurPos+20)+",52,1,10,0/,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_I4+"\r");
		out.println("^CELLBG("+(nXCurPos+466)+","+(nYCurPos+20)+",52,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+466)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+466)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+466)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+466)+","+(nYCurPos+20)+",52,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+466)+","+(nYCurPos+20)+",52,1,10,0/,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_J4+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+40)+",50,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",50,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",50,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",50,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",50,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+40)+",50,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A5+"\r");
		out.println("^CELLLINE("+(nXCurPos+50)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+50)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+50)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+50)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+50)+","+(nYCurPos+40)+",52,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_B5+"\r");
		out.println("^CELLLINE("+(nXCurPos+102)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+102)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+102)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+102)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+102)+","+(nYCurPos+40)+",52,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_C5+"\r");
		out.println("^CELLLINE("+(nXCurPos+154)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+154)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+154)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+154)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+154)+","+(nYCurPos+40)+",52,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_D5+"\r");
		out.println("^CELLLINE("+(nXCurPos+206)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+206)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+206)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+206)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+206)+","+(nYCurPos+40)+",52,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E5+"\r");
		out.println("^CELLLINE("+(nXCurPos+258)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+258)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+258)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+258)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+258)+","+(nYCurPos+40)+",52,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F5+"\r");
		out.println("^CELLLINE("+(nXCurPos+310)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+310)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+310)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+310)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+310)+","+(nYCurPos+40)+",52,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_G5+"\r");
		out.println("^CELLLINE("+(nXCurPos+362)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+362)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+362)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+362)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+362)+","+(nYCurPos+40)+",52,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_H5+"\r");
		out.println("^CELLLINE("+(nXCurPos+414)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+414)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+414)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+414)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+414)+","+(nYCurPos+40)+",52,1,10,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_I5+"\r");
		out.println("^CELLLINE("+(nXCurPos+466)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+466)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+466)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+466)+","+(nYCurPos+40)+",52,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+466)+","+(nYCurPos+40)+",52,1,10,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_J5+"\r");
	}

	//----part2 스크립트 문 출력 함수----
	private void writeScriptpart2( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",112,0,11,0/,돋움체,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet20_A1+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+20)+",54,36,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",54,36,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",54,36,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",54,36,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",54,36,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+20)+",54,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,36,1)");
		out.println(sheet20_A2+"\r");
		out.println("^CELLBG("+(nXCurPos+54)+","+(nYCurPos+20)+",58,36,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+54)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+54)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+54)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+54)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+54)+","+(nYCurPos+20)+",58,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,36,1)");
		out.println(sheet20_B2+"\r");
		out.println("^CELLBG("+(nXCurPos+112)+","+(nYCurPos+20)+",58,36,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+112)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+112)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+112)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+112)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+112)+","+(nYCurPos+20)+",58,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,36,1)");
		out.println(sheet20_C2+"\r");
		out.println("^CELLBG("+(nXCurPos+170)+","+(nYCurPos+20)+",58,36,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+170)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+170)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+170)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+170)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+170)+","+(nYCurPos+20)+",58,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,36,1)");
		out.println(sheet20_D2+"\r");
		out.println("^CELLBG("+(nXCurPos+228)+","+(nYCurPos+20)+",58,36,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+228)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+228)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+228)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+228)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+228)+","+(nYCurPos+20)+",58,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,36,1)");
		out.println(sheet20_E2+"\r");
		out.println("^CELLBG("+(nXCurPos+286)+","+(nYCurPos+20)+",58,36,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+286)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+286)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+286)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+286)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+286)+","+(nYCurPos+20)+",58,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,36,1)");
		out.println(sheet20_F2+"\r");
		out.println("^CELLBG("+(nXCurPos+344)+","+(nYCurPos+20)+",58,36,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+344)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+344)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+344)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+344)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+344)+","+(nYCurPos+20)+",58,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,36,1)");
		out.println(sheet20_G2+"\r");
		out.println("^CELLBG("+(nXCurPos+402)+","+(nYCurPos+20)+",58,36,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+402)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+402)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+402)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+402)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+402)+","+(nYCurPos+20)+",58,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,36,1)");
		out.println(sheet20_H2+"\r");
		out.println("^CELLBG("+(nXCurPos+460)+","+(nYCurPos+20)+",58,36,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+460)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+460)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+460)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+460)+","+(nYCurPos+20)+",58,36,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+460)+","+(nYCurPos+20)+",58,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,36,1)");
		out.println(sheet20_I2+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+56)+",54,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+56)+",54,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+56)+",54,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+56)+",54,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+56)+",54,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+56)+",54,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet20_A3+"\r");
		out.println("^CELLLINE("+(nXCurPos+54)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+54)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+54)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+54)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+54)+","+(nYCurPos+56)+",58,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet20_B3+"\r");
		out.println("^CELLLINE("+(nXCurPos+112)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+112)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+112)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+112)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+112)+","+(nYCurPos+56)+",58,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet20_C3+"\r");
		out.println("^CELLLINE("+(nXCurPos+170)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+170)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+170)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+170)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+170)+","+(nYCurPos+56)+",58,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet20_D3+"\r");
		out.println("^CELLLINE("+(nXCurPos+228)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+228)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+228)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+228)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+228)+","+(nYCurPos+56)+",58,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet20_E3+"\r");
		out.println("^CELLLINE("+(nXCurPos+286)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+286)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+286)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+286)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+286)+","+(nYCurPos+56)+",58,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet20_F3+"\r");
		out.println("^CELLLINE("+(nXCurPos+344)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+344)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+344)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+344)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+344)+","+(nYCurPos+56)+",58,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet20_G3+"\r");
		out.println("^CELLLINE("+(nXCurPos+402)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+402)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+402)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+402)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+402)+","+(nYCurPos+56)+",58,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet20_H3+"\r");
		out.println("^CELLLINE("+(nXCurPos+460)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+460)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+460)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+460)+","+(nYCurPos+56)+",58,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+460)+","+(nYCurPos+56)+",58,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet20_I3+"\r");
	}

	//----part3 스크립트 문 출력 함수----
	private void writeScriptpart3( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",128,0,11,0/,돋움체,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet30_A1+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+20)+",128,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",128,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",128,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",128,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",128,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+20)+",128,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_A2+"\r");
		out.println("^CELLBG("+(nXCurPos+128)+","+(nYCurPos+20)+",130,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+128)+","+(nYCurPos+20)+",130,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+128)+","+(nYCurPos+20)+",130,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+128)+","+(nYCurPos+20)+",130,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+128)+","+(nYCurPos+20)+",130,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+128)+","+(nYCurPos+20)+",130,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_B2+"\r");
		out.println("^CELLBG("+(nXCurPos+258)+","+(nYCurPos+20)+",130,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+258)+","+(nYCurPos+20)+",130,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+258)+","+(nYCurPos+20)+",130,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+258)+","+(nYCurPos+20)+",130,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+258)+","+(nYCurPos+20)+",130,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+258)+","+(nYCurPos+20)+",130,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_C2+"\r");
		out.println("^CELLBG("+(nXCurPos+388)+","+(nYCurPos+20)+",130,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+388)+","+(nYCurPos+20)+",130,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+388)+","+(nYCurPos+20)+",130,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+388)+","+(nYCurPos+20)+",130,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+388)+","+(nYCurPos+20)+",130,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+388)+","+(nYCurPos+20)+",130,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_D2+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+40)+",128,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",128,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",128,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",128,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",128,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+40)+",128,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_A3+"\r");
		out.println("^CELLLINE("+(nXCurPos+128)+","+(nYCurPos+40)+",130,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+128)+","+(nYCurPos+40)+",130,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+128)+","+(nYCurPos+40)+",130,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+128)+","+(nYCurPos+40)+",130,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+128)+","+(nYCurPos+40)+",130,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_B3+"\r");
		out.println("^CELLLINE("+(nXCurPos+258)+","+(nYCurPos+40)+",130,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+258)+","+(nYCurPos+40)+",130,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+258)+","+(nYCurPos+40)+",130,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+258)+","+(nYCurPos+40)+",130,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+258)+","+(nYCurPos+40)+",130,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_C3+"\r");
		out.println("^CELLLINE("+(nXCurPos+388)+","+(nYCurPos+40)+",130,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+388)+","+(nYCurPos+40)+",130,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+388)+","+(nYCurPos+40)+",130,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+388)+","+(nYCurPos+40)+",130,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+388)+","+(nYCurPos+40)+",130,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_D3+"\r");
	}

	//----part4 스크립트 문 출력 함수----
	private void writeScriptpart4( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",173,0,11,0/,돋움체,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet40_A1+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+20)+",173,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",173,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",173,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",173,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",173,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+20)+",173,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet40_A2+"\r");
		out.println("^CELLBG("+(nXCurPos+173)+","+(nYCurPos+20)+",173,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+173)+","+(nYCurPos+20)+",173,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+173)+","+(nYCurPos+20)+",173,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+173)+","+(nYCurPos+20)+",173,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+173)+","+(nYCurPos+20)+",173,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+173)+","+(nYCurPos+20)+",173,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet40_B2+"\r");
		out.println("^CELLBG("+(nXCurPos+346)+","+(nYCurPos+20)+",173,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+346)+","+(nYCurPos+20)+",173,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+346)+","+(nYCurPos+20)+",173,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+346)+","+(nYCurPos+20)+",173,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+346)+","+(nYCurPos+20)+",173,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+346)+","+(nYCurPos+20)+",173,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet40_C2+"\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",173,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",173,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",173,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",173,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+40)+",173,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet40_A3+"\r");
		out.println("^CELLLINE("+(nXCurPos+173)+","+(nYCurPos+40)+",173,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+173)+","+(nYCurPos+40)+",173,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+173)+","+(nYCurPos+40)+",173,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+173)+","+(nYCurPos+40)+",173,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+173)+","+(nYCurPos+40)+",173,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet40_B3+"\r");
		out.println("^CELLLINE("+(nXCurPos+346)+","+(nYCurPos+40)+",173,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+346)+","+(nYCurPos+40)+",173,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+346)+","+(nYCurPos+40)+",173,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+346)+","+(nYCurPos+40)+",173,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+346)+","+(nYCurPos+40)+",173,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet40_C3+"\r");
	}

	//----part5 스크립트 문 출력 함수----
	private void writeScriptpart5( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",86,0,11,0/,돋움체,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet50_A1+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+20)+",38,36,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",38,36,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",38,36,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",38,36,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",38,36,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+20)+",38,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,36,1)");
		out.println(sheet50_A2+"\r");
		out.println("^CELLBG("+(nXCurPos+38)+","+(nYCurPos+20)+",48,36,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+38)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+38)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+38)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+38)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+38)+","+(nYCurPos+20)+",48,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,36,1)");
		out.println(sheet50_B2+"\r");
		out.println("^CELLBG("+(nXCurPos+86)+","+(nYCurPos+20)+",48,36,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+86)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+86)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+86)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+86)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+86)+","+(nYCurPos+20)+",48,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,36,1)");
		out.println(sheet50_C2+"\r");
		out.println("^CELLBG("+(nXCurPos+134)+","+(nYCurPos+20)+",48,36,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+134)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+134)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+134)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+134)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+134)+","+(nYCurPos+20)+",48,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,36,1)");
		out.println(sheet50_D2+"\r");
		out.println("^CELLBG("+(nXCurPos+182)+","+(nYCurPos+20)+",48,36,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+182)+","+(nYCurPos+20)+",48,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,36,1)");
		out.println(sheet50_E2+"\r");
		out.println("^CELLBG("+(nXCurPos+230)+","+(nYCurPos+20)+",48,36,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+230)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+230)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+230)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+230)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+230)+","+(nYCurPos+20)+",48,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,36,1)");
		out.println(sheet50_F2+"\r");
		out.println("^CELLBG("+(nXCurPos+278)+","+(nYCurPos+20)+",48,36,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+278)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+278)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+278)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+278)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+278)+","+(nYCurPos+20)+",48,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,36,1)");
		out.println(sheet50_G2+"\r");
		out.println("^CELLBG("+(nXCurPos+326)+","+(nYCurPos+20)+",48,36,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+326)+","+(nYCurPos+20)+",48,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,36,1)");
		out.println(sheet50_H2+"\r");
		out.println("^CELLBG("+(nXCurPos+374)+","+(nYCurPos+20)+",48,36,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+374)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+374)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+374)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+374)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+374)+","+(nYCurPos+20)+",48,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,36,1)");
		out.println(sheet50_I2+"\r");
		out.println("^CELLBG("+(nXCurPos+422)+","+(nYCurPos+20)+",48,36,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+422)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+422)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+422)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+422)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+422)+","+(nYCurPos+20)+",48,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,36,1)");
		out.println(sheet50_J2+"\r");
		out.println("^CELLBG("+(nXCurPos+470)+","+(nYCurPos+20)+",48,36,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+470)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+470)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+470)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+470)+","+(nYCurPos+20)+",48,36,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+470)+","+(nYCurPos+20)+",48,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,36,1)");
		out.println(sheet50_K2+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+56)+",38,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+56)+",38,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+56)+",38,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+56)+",38,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+56)+",38,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+56)+",38,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet50_A3+"\r");
		out.println("^CELLLINE("+(nXCurPos+38)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+38)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+38)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+38)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+38)+","+(nYCurPos+56)+",48,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet50_B3+"\r");
		out.println("^CELLLINE("+(nXCurPos+86)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+86)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+86)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+86)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+86)+","+(nYCurPos+56)+",48,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet50_C3+"\r");
		out.println("^CELLLINE("+(nXCurPos+134)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+134)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+134)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+134)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+134)+","+(nYCurPos+56)+",48,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet50_D3+"\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+182)+","+(nYCurPos+56)+",48,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet50_E3+"\r");
		out.println("^CELLLINE("+(nXCurPos+230)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+230)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+230)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+230)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+230)+","+(nYCurPos+56)+",48,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet50_F3+"\r");
		out.println("^CELLLINE("+(nXCurPos+278)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+278)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+278)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+278)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+278)+","+(nYCurPos+56)+",48,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet50_G3+"\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+326)+","+(nYCurPos+56)+",48,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet50_H3+"\r");
		out.println("^CELLLINE("+(nXCurPos+374)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+374)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+374)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+374)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+374)+","+(nYCurPos+56)+",48,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet50_I3+"\r");
		out.println("^CELLLINE("+(nXCurPos+422)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+422)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+422)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+422)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+422)+","+(nYCurPos+56)+",48,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet50_J3+"\r");
		out.println("^CELLLINE("+(nXCurPos+470)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+470)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+470)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+470)+","+(nYCurPos+56)+",48,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+470)+","+(nYCurPos+56)+",48,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet50_K3+"\r");
	}

	//----part6 스크립트 문 출력 함수----
	private void writeScriptpart6( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",103,0,11,0/,돋움체,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet60_A1+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+20)+",103,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",103,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",103,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",103,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+20)+",103,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+20)+",103,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_A2+"\r");
		out.println("^CELLBG("+(nXCurPos+103)+","+(nYCurPos+20)+",103,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+103)+","+(nYCurPos+20)+",103,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+103)+","+(nYCurPos+20)+",103,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+103)+","+(nYCurPos+20)+",103,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+103)+","+(nYCurPos+20)+",103,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+103)+","+(nYCurPos+20)+",103,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_D2+"\r");
		out.println("^CELLBG("+(nXCurPos+206)+","+(nYCurPos+20)+",103,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+206)+","+(nYCurPos+20)+",103,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+206)+","+(nYCurPos+20)+",103,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+206)+","+(nYCurPos+20)+",103,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+206)+","+(nYCurPos+20)+",103,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+206)+","+(nYCurPos+20)+",103,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_G2+"\r");
		out.println("^CELLBG("+(nXCurPos+309)+","+(nYCurPos+20)+",103,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+309)+","+(nYCurPos+20)+",103,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+309)+","+(nYCurPos+20)+",103,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+309)+","+(nYCurPos+20)+",103,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+309)+","+(nYCurPos+20)+",103,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+309)+","+(nYCurPos+20)+",103,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_J2+"\r");
		out.println("^CELLBG("+(nXCurPos+412)+","+(nYCurPos+20)+",103,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos+20)+",103,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos+20)+",103,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos+20)+",103,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos+20)+",103,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+412)+","+(nYCurPos+20)+",103,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_M2+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+40)+",35,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",35,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",35,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",35,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",35,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+40)+",35,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_A3+"\r");
		out.println("^CELLBG("+(nXCurPos+35)+","+(nYCurPos+40)+",34,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+35)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+35)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+35)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+35)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+35)+","+(nYCurPos+40)+",34,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_B3+"\r");
		out.println("^CELLBG("+(nXCurPos+69)+","+(nYCurPos+40)+",34,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+69)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+69)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+69)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+69)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+69)+","+(nYCurPos+40)+",34,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_C3+"\r");
		out.println("^CELLBG("+(nXCurPos+103)+","+(nYCurPos+40)+",35,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+103)+","+(nYCurPos+40)+",35,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+103)+","+(nYCurPos+40)+",35,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+103)+","+(nYCurPos+40)+",35,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+103)+","+(nYCurPos+40)+",35,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+103)+","+(nYCurPos+40)+",35,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_D3+"\r");
		out.println("^CELLBG("+(nXCurPos+138)+","+(nYCurPos+40)+",34,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+138)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+138)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+138)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+138)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+138)+","+(nYCurPos+40)+",34,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_E3+"\r");
		out.println("^CELLBG("+(nXCurPos+172)+","+(nYCurPos+40)+",34,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+172)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+172)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+172)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+172)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+172)+","+(nYCurPos+40)+",34,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_F3+"\r");
		out.println("^CELLBG("+(nXCurPos+206)+","+(nYCurPos+40)+",35,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+206)+","+(nYCurPos+40)+",35,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+206)+","+(nYCurPos+40)+",35,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+206)+","+(nYCurPos+40)+",35,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+206)+","+(nYCurPos+40)+",35,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+206)+","+(nYCurPos+40)+",35,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_G3+"\r");
		out.println("^CELLBG("+(nXCurPos+241)+","+(nYCurPos+40)+",34,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+241)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+241)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+241)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+241)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+241)+","+(nYCurPos+40)+",34,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_H3+"\r");
		out.println("^CELLBG("+(nXCurPos+275)+","+(nYCurPos+40)+",34,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+275)+","+(nYCurPos+40)+",34,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_I3+"\r");
		out.println("^CELLBG("+(nXCurPos+309)+","+(nYCurPos+40)+",35,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+309)+","+(nYCurPos+40)+",35,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+309)+","+(nYCurPos+40)+",35,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+309)+","+(nYCurPos+40)+",35,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+309)+","+(nYCurPos+40)+",35,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+309)+","+(nYCurPos+40)+",35,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_J3+"\r");
		out.println("^CELLBG("+(nXCurPos+344)+","+(nYCurPos+40)+",34,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+344)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+344)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+344)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+344)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+344)+","+(nYCurPos+40)+",34,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_K3+"\r");
		out.println("^CELLBG("+(nXCurPos+378)+","+(nYCurPos+40)+",34,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+378)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+378)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+378)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+378)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+378)+","+(nYCurPos+40)+",34,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_L3+"\r");
		out.println("^CELLBG("+(nXCurPos+412)+","+(nYCurPos+40)+",35,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos+40)+",35,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos+40)+",35,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos+40)+",35,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos+40)+",35,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+412)+","+(nYCurPos+40)+",35,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_M3+"\r");
		out.println("^CELLBG("+(nXCurPos+447)+","+(nYCurPos+40)+",34,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+447)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+447)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+447)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+447)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+447)+","+(nYCurPos+40)+",34,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_N3+"\r");
		out.println("^CELLBG("+(nXCurPos+481)+","+(nYCurPos+40)+",34,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+481)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+481)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+481)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+481)+","+(nYCurPos+40)+",34,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+481)+","+(nYCurPos+40)+",34,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_O3+"\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+60)+",35,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+60)+",35,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+60)+",35,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+60)+",35,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+60)+",35,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_A4+"\r");
		out.println("^CELLLINE("+(nXCurPos+35)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+35)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+35)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+35)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+35)+","+(nYCurPos+60)+",34,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_B4+"\r");
		out.println("^CELLLINE("+(nXCurPos+69)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+69)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+69)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+69)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+69)+","+(nYCurPos+60)+",34,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_C4+"\r");
		out.println("^CELLLINE("+(nXCurPos+103)+","+(nYCurPos+60)+",35,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+103)+","+(nYCurPos+60)+",35,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+103)+","+(nYCurPos+60)+",35,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+103)+","+(nYCurPos+60)+",35,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+103)+","+(nYCurPos+60)+",35,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_D4+"\r");
		out.println("^CELLLINE("+(nXCurPos+138)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+138)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+138)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+138)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+138)+","+(nYCurPos+60)+",34,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_E4+"\r");
		out.println("^CELLLINE("+(nXCurPos+172)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+172)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+172)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+172)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+172)+","+(nYCurPos+60)+",34,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_F4+"\r");
		out.println("^CELLLINE("+(nXCurPos+206)+","+(nYCurPos+60)+",35,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+206)+","+(nYCurPos+60)+",35,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+206)+","+(nYCurPos+60)+",35,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+206)+","+(nYCurPos+60)+",35,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+206)+","+(nYCurPos+60)+",35,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_G4+"\r");
		out.println("^CELLLINE("+(nXCurPos+241)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+241)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+241)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+241)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+241)+","+(nYCurPos+60)+",34,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_H4+"\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+275)+","+(nYCurPos+60)+",34,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_I4+"\r");
		out.println("^CELLLINE("+(nXCurPos+309)+","+(nYCurPos+60)+",35,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+309)+","+(nYCurPos+60)+",35,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+309)+","+(nYCurPos+60)+",35,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+309)+","+(nYCurPos+60)+",35,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+309)+","+(nYCurPos+60)+",35,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_J4+"\r");
		out.println("^CELLLINE("+(nXCurPos+344)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+344)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+344)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+344)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+344)+","+(nYCurPos+60)+",34,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_K4+"\r");
		out.println("^CELLLINE("+(nXCurPos+378)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+378)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+378)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+378)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+378)+","+(nYCurPos+60)+",34,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_L4+"\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos+60)+",35,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos+60)+",35,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos+60)+",35,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos+60)+",35,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+412)+","+(nYCurPos+60)+",35,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_M4+"\r");
		out.println("^CELLLINE("+(nXCurPos+447)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+447)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+447)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+447)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+447)+","+(nYCurPos+60)+",34,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_N4+"\r");
		out.println("^CELLLINE("+(nXCurPos+481)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+481)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+481)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+481)+","+(nYCurPos+60)+",34,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+481)+","+(nYCurPos+60)+",34,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet60_O4+"\r");
	}

	//파라미터 설정 함수
	private void setParam(){
		p_grcode_Param=toKor(GetB(request.getParameter("p_grcode")));
		p_grseq_Param=toKor(GetB(request.getParameter("p_grseq")));
	}

	//-----Connection 및 Statement 객체 생성 함수-----
	private void createConnAndStateObject() throws Exception{
		//DUNET Connection 객체 생성
		Class.forName("oracle.jdbc.driver.OracleDriver").newInstance();
		conn_DUNET=DriverManager.getConnection("jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.12.203)(PORT=1521))(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.12.204)(PORT=1521))(FAILOVER=on)(LOAD_BALANCE=off))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=LOTI)))","cmlms","dlscjs");stat_AG=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_T=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_S=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_M=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_J=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_H=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
	}

	//-----SQL문 변수 초기화 함수-----
	private void initSQLConst(){
		sql_AG = "select sum(case when (to_number(substr(grseq,1,4))-to_number(birth_year)+1) < 10 or birth_year is null then 1 else 0 end) stucnt0, ";
		sql_AG = sql_AG + "sum(case when (to_number(substr(grseq,1,4))-to_number(birth_year)+1) between 10 and 19 then 1 else 0 end) stucnt10, ";
		sql_AG = sql_AG + "sum(case when (to_number(substr(grseq,1,4))-to_number(birth_year)+1) between 20 and 29 then 1 else 0 end) stucnt20, ";
		sql_AG = sql_AG + "sum(case when (to_number(substr(grseq,1,4))-to_number(birth_year)+1) between 30 and 39 then 1 else 0 end) stucnt30, ";
		sql_AG = sql_AG + "sum(case when (to_number(substr(grseq,1,4))-to_number(birth_year)+1) between 40 and 49 then 1 else 0 end) stucnt40, ";
		sql_AG = sql_AG + "sum(case when (to_number(substr(grseq,1,4))-to_number(birth_year)+1) between 50 and 59 then 1 else 0 end) stucnt50, ";
		sql_AG = sql_AG + "sum(case when (to_number(substr(grseq,1,4))-to_number(birth_year)+1) between 60 and 69 then 1 else 0 end) stucnt60, ";
		sql_AG = sql_AG + "sum(case when (to_number(substr(grseq,1,4))-to_number(birth_year)+1) > 70 then 1 else 0 end) stucnt70, count(*) stucnttot ";
		sql_AG = sql_AG + "from  ";
		sql_AG = sql_AG + "( ";
		sql_AG = sql_AG + "select a.grcode, a.grseq, to_char(c.birth_date,'yyyy') birth_year, a.userno from cmtb_app_info a, cmtb_grseq b, cmtb_member c  ";
		sql_AG = sql_AG + "where a.grcode=b.grcode and a.grseq=b.grseq and a.userno=c.userno and a.grcode='" + p_grcode_Param + "' and a.grseq='" + p_grseq_Param + "' ";
		sql_AG = sql_AG + "union ";
		sql_AG = sql_AG + "select a.grcode, a.grseq, to_char(c.birth_date,'yyyy') birth_year, a.userno from cmtb_offapp_info a, cmtb_grseq b, cmtb_offmember c  ";
		sql_AG = sql_AG + "where a.grcode=b.grcode and a.grseq=b.grseq and a.userno=c.userno and a.grcode='" + p_grcode_Param + "' and a.grseq='" + p_grseq_Param + "' ";
		sql_AG = sql_AG + ")";
		sql_T = "SELECT sum(decode(tmzn, '09', dis_cnt, 0)) stucnt09, sum(decode(tmzn, '10', dis_cnt, 0)) stucnt10,  ";
		sql_T = sql_T + "       sum(decode(tmzn, '11', dis_cnt, 0)) stucnt11, sum(decode(tmzn, '13', dis_cnt, 0)) stucnt13,  ";
		sql_T = sql_T + "sum(decode(tmzn, '14', dis_cnt, 0)) stucnt14, sum(decode(tmzn, '15', dis_cnt, 0)) stucnt15, sum(decode(tmzn, '16', dis_cnt, 0)) stucnt16 ";
		sql_T = sql_T + "FROM ( ";
		sql_T = sql_T + "SELECT GRCODE, GRSEQ, IS_TIMEZONE(SCO_DATE) TMZN, COUNT(*) ALL_CNT, COUNT(DISTINCT STUDENT_ID) DIS_CNT  ";
		sql_T = sql_T + "FROM LCMS_CMI WHERE GRCODE='" + p_grcode_Param + "' and grseq='" + p_grseq_Param + "' ";
		sql_T = sql_T + "GROUP BY GRCODE, GRSEQ, IS_TIMEZONE(SCO_DATE) ";
		sql_T = sql_T + ")";
		sql_S = "select sum(decode(sex, 'M', 1, 0)) mancnt, sum(decode(sex, 'F', 1, 0)) wocnt, count(*) stucnttot ";
		sql_S = sql_S + "from  ";
		sql_S = sql_S + "( ";
		sql_S = sql_S + "select a.grcode, a.grseq, c.sex, a.userno from cmtb_app_info a, cmtb_grseq b, cmtb_member c  ";
		sql_S = sql_S + "where a.grcode=b.grcode and a.grseq=b.grseq and a.userno=c.userno and a.grcode='" + p_grcode_Param + "' and a.grseq='" + p_grseq_Param + "' ";
		sql_S = sql_S + "union ";
		sql_S = sql_S + "select a.grcode, a.grseq, c.sex, a.userno from cmtb_offapp_info a, cmtb_grseq b, cmtb_offmember c  ";
		sql_S = sql_S + "where a.grcode=b.grcode and a.grseq=b.grseq and a.userno=c.userno and a.grcode='" + p_grcode_Param + "' and a.grseq='" + p_grseq_Param + "' ";
		sql_S = sql_S + ")";
		sql_M = "select sum(decode(marry_yn, 'Y', 1, 0)) yescnt, sum(decode(marry_yn, 'N', 1, null, 1,  0)) nocnt, count(*) stucnttot ";
		sql_M = sql_M + "from  ";
		sql_M = sql_M + "( ";
		sql_M = sql_M + "select a.grcode, a.grseq, c.marry_yn, a.userno from cmtb_app_info a, cmtb_grseq b, cmtb_member c  ";
		sql_M = sql_M + "where a.grcode=b.grcode and a.grseq=b.grseq and a.userno=c.userno and a.grcode='" + p_grcode_Param + "' and a.grseq='" + p_grseq_Param + "' ";
		sql_M = sql_M + "union ";
		sql_M = sql_M + "select a.grcode, a.grseq, c.marry_yn, a.userno from cmtb_offapp_info a, cmtb_grseq b, cmtb_offmember c  ";
		sql_M = sql_M + "where a.grcode=b.grcode and a.grseq=b.grseq and a.userno=c.userno and a.grcode='" + p_grcode_Param + "' and a.grseq='" + p_grseq_Param + "' ";
		sql_M = sql_M + ")";
		sql_J = "select sum(decode(job, '학생', 1, 0)) stucnt01, sum(decode(job, '회사원', 1, 0)) stucnt02,  ";
		sql_J = sql_J + "sum(decode(job, '공무원', 1, 0)) stucnt03, sum(decode(job, '의료인', 1, 0)) stucnt04,  ";
		sql_J = sql_J + "sum(decode(job, '법조인', 1, 0)) stucnt05, sum(decode(job, '언론인', 1, 0)) stucnt06,  ";
		sql_J = sql_J + "sum(decode(job, '자영업', 1, 0)) stucnt07, sum(decode(job, '농/수/축산업', 1, 0)) stucnt08,  ";
		sql_J = sql_J + "sum(decode(job, '주부', 1, 0)) stucnt09, sum(decode(job, '기타', 1, null, 1, '', 0)) stucnt99, count(*) stucnttot ";
		sql_J = sql_J + "from  ";
		sql_J = sql_J + "( ";
		sql_J = sql_J + "select a.grcode, a.grseq, c.job, a.userno from cmtb_app_info a, cmtb_grseq b, cmtb_member c  ";
		sql_J = sql_J + "where a.grcode=b.grcode and a.grseq=b.grseq and a.userno=c.userno and a.grcode='" + p_grcode_Param + "' and a.grseq='" + p_grseq_Param + "' ";
		sql_J = sql_J + "union ";
		sql_J = sql_J + "select a.grcode, a.grseq, c.job, a.userno from cmtb_offapp_info a, cmtb_grseq b, cmtb_offmember c  ";
		sql_J = sql_J + "where a.grcode=b.grcode and a.grseq=b.grseq and a.userno=c.userno and a.grcode='" + p_grcode_Param + "' and a.grseq='" + p_grseq_Param + "' ";
		sql_J = sql_J + ")";
		sql_H = "select sum(case when school='05' and gradu_gubun='1' then 1 else 0 end)  primf,  ";
		sql_H = sql_H + "sum(case when school='05' and gradu_gubun='2' then 1 else 0 end)  primc,  ";
		sql_H = sql_H + "sum(case when school='05' and gradu_gubun='3' then 1 else 0 end)  primr,  ";
		sql_H = sql_H + "sum(case when school='04' and gradu_gubun='1' then 1 else 0 end)  midf,  ";
		sql_H = sql_H + "sum(case when school='04' and gradu_gubun='2' then 1 else 0 end)  midc,  ";
		sql_H = sql_H + "sum(case when school='04' and gradu_gubun='3' then 1 else 0 end)  midr,  ";
		sql_H = sql_H + "sum(case when school='03' and gradu_gubun='1' then 1 else 0 end)  highf,  ";
		sql_H = sql_H + "sum(case when school='03' and gradu_gubun='2' then 1 else 0 end)  highc,  ";
		sql_H = sql_H + "sum(case when school='03' and gradu_gubun='3' then 1 else 0 end)  highr,  ";
		sql_H = sql_H + "sum(case when school='02' and gradu_gubun='1' then 1 else 0 end)  univf,  ";
		sql_H = sql_H + "sum(case when school='02' and gradu_gubun='2' then 1 else 0 end)  univc,  ";
		sql_H = sql_H + "sum(case when school='02' and gradu_gubun='3' then 1 else 0 end)  univr,  ";
		sql_H = sql_H + "sum(case when school='01' and gradu_gubun='1' then 1 else 0 end)  coursef,  ";
		sql_H = sql_H + "sum(case when school='01' and gradu_gubun='2' then 1 else 0 end)  coursec,  ";
		sql_H = sql_H + "sum(case when school='01' and gradu_gubun='3' then 1 else 0 end)  courser,  count(*) stucnttot ";
		sql_H = sql_H + "from  ";
		sql_H = sql_H + "( ";
		sql_H = sql_H + "select a.grcode, a.grseq, c.school, c.gru_state gradu_gubun, a.userno from cmtb_app_info a, cmtb_grseq b, cmtb_member c  ";
		sql_H = sql_H + "where a.grcode=b.grcode and a.grseq=b.grseq and a.userno=c.userno and a.grcode='" + p_grcode_Param + "' and a.grseq='" + p_grseq_Param + "' ";
		sql_H = sql_H + "union ";
		sql_H = sql_H + "select a.grcode, a.grseq, c.school, c.gradu_gubun, a.userno from cmtb_offapp_info a, cmtb_grseq b, cmtb_offmember c  ";
		sql_H = sql_H + "where a.grcode=b.grcode and a.grseq=b.grseq and a.userno=c.userno and a.grcode='" + p_grcode_Param + "' and a.grseq='" + p_grseq_Param + "' ";
		sql_H = sql_H + ")";
	}

	//-----ResultSet 객체에서 필드 값 설정 함수-----
	//ResultSet AG 객체에서 필드 값 설정 함수
	private void setFieldVariableFromAG() throws Exception{
		AG_STUCNT0=AG.getDouble(1);
		AG_STUCNT10=AG.getDouble(2);
		AG_STUCNT20=AG.getDouble(3);
		AG_STUCNT30=AG.getDouble(4);
		AG_STUCNT40=AG.getDouble(5);
		AG_STUCNT50=AG.getDouble(6);
		AG_STUCNT60=AG.getDouble(7);
		AG_STUCNT70=AG.getDouble(8);
		AG_STUCNTTOT=AG.getDouble(9);
	}

	//ResultSet AG 객체의 필드 값 초기화 함수
	private void setFieldInitFromAG(){
		AG_STUCNT0=0;
		AG_STUCNT10=0;
		AG_STUCNT20=0;
		AG_STUCNT30=0;
		AG_STUCNT40=0;
		AG_STUCNT50=0;
		AG_STUCNT60=0;
		AG_STUCNT70=0;
		AG_STUCNTTOT=0;
	}

	//ResultSet T 객체에서 필드 값 설정 함수
	private void setFieldVariableFromT() throws Exception{
		T_STUCNT09=T.getDouble(1);
		T_STUCNT10=T.getDouble(2);
		T_STUCNT11=T.getDouble(3);
		T_STUCNT13=T.getDouble(4);
		T_STUCNT14=T.getDouble(5);
		T_STUCNT15=T.getDouble(6);
		T_STUCNT16=T.getDouble(7);
	}

	//ResultSet T 객체의 필드 값 초기화 함수
	private void setFieldInitFromT(){
		T_STUCNT09=0;
		T_STUCNT10=0;
		T_STUCNT11=0;
		T_STUCNT13=0;
		T_STUCNT14=0;
		T_STUCNT15=0;
		T_STUCNT16=0;
	}

	//ResultSet S 객체에서 필드 값 설정 함수
	private void setFieldVariableFromS() throws Exception{
		S_MANCNT=S.getDouble(1);
		S_WOCNT=S.getDouble(2);
		S_STUCNTTOT=S.getDouble(3);
	}

	//ResultSet S 객체의 필드 값 초기화 함수
	private void setFieldInitFromS(){
		S_MANCNT=0;
		S_WOCNT=0;
		S_STUCNTTOT=0;
	}

	//ResultSet M 객체에서 필드 값 설정 함수
	private void setFieldVariableFromM() throws Exception{
		M_YESCNT=M.getDouble(1);
		M_NOCNT=M.getDouble(2);
		M_STUCNTTOT=M.getDouble(3);
	}

	//ResultSet M 객체의 필드 값 초기화 함수
	private void setFieldInitFromM(){
		M_YESCNT=0;
		M_NOCNT=0;
		M_STUCNTTOT=0;
	}

	//ResultSet J 객체에서 필드 값 설정 함수
	private void setFieldVariableFromJ() throws Exception{
		J_STUCNT01=J.getDouble(1);
		J_STUCNT02=J.getDouble(2);
		J_STUCNT03=J.getDouble(3);
		J_STUCNT04=J.getDouble(4);
		J_STUCNT05=J.getDouble(5);
		J_STUCNT06=J.getDouble(6);
		J_STUCNT07=J.getDouble(7);
		J_STUCNT08=J.getDouble(8);
		J_STUCNT09=J.getDouble(9);
		J_STUCNT99=J.getDouble(10);
		J_STUCNTTOT=J.getDouble(11);
	}

	//ResultSet J 객체의 필드 값 초기화 함수
	private void setFieldInitFromJ(){
		J_STUCNT01=0;
		J_STUCNT02=0;
		J_STUCNT03=0;
		J_STUCNT04=0;
		J_STUCNT05=0;
		J_STUCNT06=0;
		J_STUCNT07=0;
		J_STUCNT08=0;
		J_STUCNT09=0;
		J_STUCNT99=0;
		J_STUCNTTOT=0;
	}

	//ResultSet H 객체에서 필드 값 설정 함수
	private void setFieldVariableFromH() throws Exception{
		H_PRIMF=H.getDouble(1);
		H_PRIMC=H.getDouble(2);
		H_PRIMR=H.getDouble(3);
		H_MIDF=H.getDouble(4);
		H_MIDC=H.getDouble(5);
		H_MIDR=H.getDouble(6);
		H_HIGHF=H.getDouble(7);
		H_HIGHC=H.getDouble(8);
		H_HIGHR=H.getDouble(9);
		H_UNIVF=H.getDouble(10);
		H_UNIVC=H.getDouble(11);
		H_UNIVR=H.getDouble(12);
		H_COURSEF=H.getDouble(13);
		H_COURSEC=H.getDouble(14);
		H_COURSER=H.getDouble(15);
		H_STUCNTTOT=H.getDouble(16);
	}

	//ResultSet H 객체의 필드 값 초기화 함수
	private void setFieldInitFromH(){
		H_PRIMF=0;
		H_PRIMC=0;
		H_PRIMR=0;
		H_MIDF=0;
		H_MIDC=0;
		H_MIDR=0;
		H_HIGHF=0;
		H_HIGHC=0;
		H_HIGHR=0;
		H_UNIVF=0;
		H_UNIVC=0;
		H_UNIVR=0;
		H_COURSEF=0;
		H_COURSEC=0;
		H_COURSER=0;
		H_STUCNTTOT=0;
	}

	//-----고정 데이터 초기화 함수-----
	private void initConstVarient(){
		sheet10_A1="시민수강자 이력통계";
		sheet10_A3="연령대별통계";
		sheet10_A4="구분";
		sheet10_B4="9세미만";
		sheet10_C4="10대";
		sheet10_D4="20대";
		sheet10_E4="30대";
		sheet10_F4="40대";
		sheet10_G4="50대";
		sheet10_H4="60대";
		sheet10_I4="70세이상";
		sheet10_J4="총계";
		sheet10_A5="인원";
		sheet20_A1="시간대별통계";
		sheet20_A2="구분";
		sheet20_B2="09:00~ 09:50";
		sheet20_C2="10:00~ 10:50";
		sheet20_D2="11:00~ 11:50";
		sheet20_E2="13:00~ 13:50";
		sheet20_F2="14:00~ 14:50";
		sheet20_G2="15:00~ 15:50";
		sheet20_H2="16:00~ 16:50";
		sheet20_I2="총계";
		sheet20_A3="인원";
		sheet30_A1="성별통계";
		sheet30_A2="구분";
		sheet30_B2="남";
		sheet30_C2="에";
		sheet30_D2="계";
		sheet30_A3="인원";
		sheet40_A1="기혼여부통계";
		sheet40_A2="기혼";
		sheet40_B2="미혼";
		sheet40_C2="전체";
		sheet50_A1="직업별통계";
		sheet50_A2="구분";
		sheet50_B2="학생";
		sheet50_C2="회사원";
		sheet50_D2="공무원";
		sheet50_E2="의료인";
		sheet50_F2="법조인";
		sheet50_G2="언론인";
		sheet50_H2="자역업";
		sheet50_I2="농/수/축산업";
		sheet50_J2="주부";
		sheet50_K2="기타";
		sheet50_A3="인원";
		sheet60_A1="학력별통계";
		sheet60_A2="초등학교";
		sheet60_D2="중학교";
		sheet60_G2="고등학교";
		sheet60_J2="대학교";
		sheet60_M2="대학원";
		sheet60_A3="졸업";
		sheet60_B3="재학";
		sheet60_C3="휴학";
		sheet60_D3="졸업";
		sheet60_E3="재학";
		sheet60_F3="휴학";
		sheet60_G3="졸업";
		sheet60_H3="재학";
		sheet60_I3="휴학";
		sheet60_J3="졸업";
		sheet60_K3="재학";
		sheet60_L3="휴학";
		sheet60_M3="졸업";
		sheet60_N3="재학";
		sheet60_O3="휴학";
	}

	//-----페이지 스킵 관련 함수-----
	//페이지 스킵시 호출되는 함수로서 페이지 번호를 증가시키고 페이지 지시문 출력 그리고 Y좌표 초기화
	//매개변수에 따라 해당 쉬트의 배경 이미지, 머리글 밴드, 바닥글 밴드 함수 호출
	private void pageSkip(int nIndex) throws Exception{
		nXCurPos=nXStartPos;
		nYCurPos=nYStartPos;
		nPageNum=nPageNum+1;
		out.print("-- " + nPageNum + " PAGE --\r");

		switch(nIndex){
			case 10:		//SHEET=Sheet=1   FRAME=0에서 페이지 스킵시
			getScriptFromtitle(false, true);		//머리글 밴드 호출
			break;
		}
	}

	//페이지 스킵이 필요한지 검사하는 함수
	private boolean isPageSkip(int nTestPos){
		if(nTestPos>nYEndPos){
			return true;
		}else{
			return false;
		}
	}

	//-----공통 함수 선언-----
	private void getScriptHeader(String paper, String size, String value, String orient) throws Exception{
		out.print("--SCRIPT_START31--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void getSheetPaperInfo(String paper, String size, String value, String orient) throws Exception{
		out.print("--PAPER_INFO--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void initSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bFirstFrame){
		if(bFirstFrame){
			nStartPage=nMaxPage+1;
			nYLastPos=0;
		}
		nPageNum=nStartPage;
		nYStartPos=constStartY;
		nYEndPos=constEndY;
		nYCurPos=nYStartPos;
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
	}

	private void initChildSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bIsMultiFrame, boolean bIsFirstFrame){
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
		nYStartPos=constStartY;
		nYEndPos=constEndY;

		if(bIsMultiFrame){
			if(bIsFirstFrame){
				nStartPage=nPageNum;
				nYSavePos=nYCurPos;
				nYLastPos=0;
			}else{
				nPageNum=nStartPage;
				nYCurPos=nYSavePos;
			}
		}else{
			nStartPage=nPageNum;
		}
	}

	//Empty Row만으로 구성되어 출력 위치를 조정하기 위한 VoidBand 함수
	//nRangePos - VoidBand의 출력 영역
	//nIndex - PageSkip 함수 호출시 전달할 쉬트 인덱스
	private boolean voidBandNoneData(int nRangePos, int nIndex) throws Exception{
		int nTestPos;
		nTestPos=nYCurPos+nRangePos;
		if(isPageSkip(nTestPos)){
			pageSkip(nIndex);
			return true;
		}else{
			nYCurPos=nYCurPos+nRangePos;
			return false;
		}
	}

	private String Get0(String str){
		if(str==null){
			return "0";
		}else{
			if(str.equals("")){
				return "0";
			}else{
				return str;
			}
		}
	}

	private String GetB(String str){
		if(str==null){
			return "";
		}else{
			return str;
		}
	}

	private double SUM(double accVal, double tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(double accVal, long tmpVal){
		return(accVal+(double)tmpVal);
	}

	private long SUM(long accVal, long tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(long accVal, double tmpVal){
		return((double)accVal+tmpVal);
	}

	private long COUNT(long accuCNT){
		return ++accuCNT;
	}

	private long MIN(long maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(long maxV, double maxTempV){
		if((double)maxV<=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, double maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}
	private long MAX(long maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(long maxV, double maxTempV){
		if((double)maxV>=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, double maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}

	private double AVG(double sumVal, long cntVal){
		return(sumVal/cntVal);
	}

	private double AVG(long sumVal, long cntVal){
		return((double)sumVal/(double)cntVal);
	}

	private String aiReplace(String strAll, String strSrc, String strDest) {
		while(strAll.indexOf(strSrc) != -1) {
			strAll = strAll.substring(0, strAll.indexOf(strSrc)) + strDest + strAll.substring(strAll.indexOf(strSrc) + strSrc.length(), strAll.length());
		}
		return strAll;
	}

	private String toDate() {
		SimpleDateFormat dateFormat=new SimpleDateFormat("'#SERVERDATE#'yyyy/MM/dd/HH/mm/ss");
		java.util.Date currentDate = new java.util.Date();
		return dateFormat.format(currentDate);
	}

	final String toKor (String en){
		if(en==null){
			return "";
		}
		try{
			return new String(en.getBytes("8859_1"), "KSC5601");
		}catch(Exception e){return en;}
	}
}
%>
