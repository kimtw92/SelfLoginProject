<%
/* ### Generated by AIDesigner 3.7.1.23 ### */
%>

<%@ page language="java" import="java.sql.*,java.io.*,java.text.*" %>
<%@ page contentType="text/plain; charset=euc-kr" %>

<%
Object[] userObj = null;
ReportHandler handler = new ReportHandler(request,response,userObj);
handler.service(out);
%>

<%!
class ReportHandler{
	//공통 변수 선언
	private Object[] userObj = null;
	private int nStartPage;		//각 쉬트별 시작 페이지 저장
	private int nMaxPage;		//한 쉬트가 실행된 후 생성된 최대 페이지 번호 저장
	private int nPageNum;		//현재 페이지 번호
	private int nYStartPos;		//쉬트에서 Y 시작 좌표
	private int nYEndPos;		//쉬트에서 Y 끝 좌표
	private int nYCurPos;		//현재 Y 좌표
	private int nYSavePos;		//연결된 멀티 프레임 쉬트에서 시작 Y 좌표 저장
	private int nYLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 Y 좌표 저장
	private int nXStartPos;		//쉬트에서 X 시작 좌표
	private int nXEndPos;		//쉬트에서 X 끝 좌표
	private int nXCurPos;		//현재 X 좌표
	private int nXSavePos;		//연결된 멀티 프레임 쉬트에서 시작 X 좌표 저장
	private int  nXLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 X 좌표 저장
	private boolean bIsBeforePageSkip;		//조건 밴드에서 페이지 넘기기 여부 판단
	private int nLoopRef;		//절대 양식에서 루프 참조 변수
	private String isEmpty="";		//빈 문자열 비교에 사용

	private HttpServletRequest request;
	private HttpServletResponse response;
	private JspWriter out;

	//-----데이터 변수 선언-----
	String sheet10_A1;
	String sheet10_A8;
	int[] nAutoHeight_master=new int[1];
	String sheet10_A3;
	String sheet10_B3;
	String sheet10_C3;
	String sheet10_D3;
	String sheet10_E3;
	String sheet10_F3;
	String sheet10_K3;
	String sheet10_L3;
	String sheet10_F4;
	String sheet10_G4;
	String sheet10_H4;
	String sheet10_I4;
	String sheet10_J4;
	String sheet10_A5;
	double sheet10_C5;
	double sheet10_D5;
	double sheet10_E5;
	double sheet10_F5;
	double sheet10_G5;
	double sheet10_H5;
	double sheet10_I5;
	double sheet10_J5;
	double sheet10_K5;
	double sheet10_L5;
	String sheet10_A6;
	String sheet10_B6;
	double sheet10_C6;
	double sheet10_D6;
	double sheet10_E6;
	double sheet10_F6;
	double sheet10_G6;
	double sheet10_H6;
	double sheet10_I6;
	double sheet10_J6;
	double sheet10_K6;
	double sheet10_L6;
	int[] nAutoHeight_detail=new int[1];
	String sheet10_B7;
	double sheet10_C7;
	double sheet10_D7;
	double sheet10_E7;
	double sheet10_F7;
	double sheet10_G7;
	double sheet10_H7;
	double sheet10_I7;
	double sheet10_J7;
	double sheet10_K7;
	double sheet10_L7;

	//-----Connection, Statement, ResultSet 객체 선언-----
	private Connection conn_DUNET;		//DSN DUNET Connection 객체
	private java.sql.Statement stat_totsum;		//ResultSet totsum 객체를 생성하기 위한 Statement 객체
	private ResultSet totsum;		//ResultSet totsum 객체
	private java.sql.Statement stat_master;		//ResultSet master 객체를 생성하기 위한 Statement 객체
	private ResultSet master;		//ResultSet master 객체
	private java.sql.Statement stat_detail;		//ResultSet detail 객체를 생성하기 위한 Statement 객체
	private ResultSet detail;		//ResultSet detail 객체

	//-----SQL 변수 선언-----
	private String sql_totsum;		//ResultSet totsum 객체를 생성하기 위한 쿼리문 저장
	private String sql_master;		//ResultSet master 객체를 생성하기 위한 쿼리문 저장
	private String sql_detail;		//ResultSet detail 객체를 생성하기 위한 쿼리문 저장

	//-----쿼리 필드 변수 선언-----
	//ResultSet totsum 객체에서 필드 값을 받는 쿼리 필드 변수
	private double totsum_TOT_STU_CNT;
	private double totsum_TOT_GRSEQ_CNT;
	private double totsum_TOT_TUTOR_TOTAL_CNT;
	private double totsum_TOT_A_CNT;
	private double totsum_TOT_A1_CNT;
	private double totsum_TOT_B_CNT;
	private double totsum_TOT_C1_CNT;
	private double totsum_TOT_C2_CNT;
	private double totsum_TOT_C3_CNT;
	private double totsum_TOT_Z_CNT;

	//ResultSet master 객체에서 필드 값을 받는 쿼리 필드 변수
	private String master_GUBUNNM;
	private String master_GUBUN;
	private double master_TOT_STU_CNT;
	private double master_TOT_GRSEQ_CNT;
	private double master_TOT_TUTOR_TOTAL_CNT;
	private double master_TOT_A_CNT;
	private double master_TOT_A1_CNT;
	private double master_TOT_B_CNT;
	private double master_TOT_C1_CNT;
	private double master_TOT_C2_CNT;
	private double master_TOT_C3_CNT;
	private double master_TOT_Z_CNT;

	//ResultSet detail 객체에서 필드 값을 받는 쿼리 필드 변수
	private String detail_GRCODE;
	private String detail_GUBUN;
	private String detail_GUBUNNM;
	private String detail_GRCODENM;
	private double detail_STU_CNT;
	private double detail_GRSEQ_CNT;
	private double detail_TUTOR_TOTAL_CNT;
	private double detail_A_CNT;
	private double detail_A1_CNT;
	private double detail_B_CNT;
	private double detail_C1_CNT;
	private double detail_C2_CNT;
	private double detail_C3_CNT;
	private double detail_Z_CNT;

	//파라미터 변수 선언
	String p_year_Param;
	String p_gubun_Param;

	//-----사용자 정의 변수 및 함수-----
	private String removeHtmlTag(String srcText) {
		//대체(치환)하고 하는 문자열이 더 있는 경우 아래의 배열에 쌍으로 추가
		String[] relSrc = {"&NBSP;", "&lt;", "&gt;", "&amp;", "&quot;"};
		String[] relTgt = {" ", "<", ">", "&", "\"" };

		int pointer = 0, st = 0, ed = 0;
		int size = srcText.length();
		StringBuffer buf = new StringBuffer(size);

		while (st != -1) {
			st = srcText.indexOf("<", st);
			if (st != -1) {
				ed = srcText.indexOf(">", st+1);
				if (ed == -1) {
					break;
				} 
				buf.append(srcText.substring(pointer, st));
				pointer = st = ed + 1;
			}
		}
		if (pointer < size) {
			buf.append(srcText.substring(pointer));
		}

		srcText = buf.toString();
		// 특수문자열의 대체가 불필요한 경우 아래의 for 문을 주석처리 가능
		for (int i = 0; i < relSrc.length; i++) {
			pointer = st = 0;
			if (srcText.indexOf(relSrc[i], pointer) == -1) continue;

			buf.setLength(0);
			size = srcText.length();
			int len = relSrc[i].length();

			while ((pointer = srcText.indexOf(relSrc[i], pointer)) != -1) {
				buf.append(srcText.substring(st, pointer));
				buf.append(relTgt[i]);
				pointer += len;
				st = pointer;
			}
			if (st < size) {
				buf.append(srcText.substring(st));
			}
			srcText = buf.toString();
		}

		return srcText;
	}


	//ReportHandler 생성자 함수
	ReportHandler(HttpServletRequest request,HttpServletResponse response,Object[] userObj){
		this.request=request;
		this.response=response;
		this.userObj=userObj;
	}

	//ReportHandler 서비스 함수
	void service(JspWriter out) throws Exception{
		try{    //try 구문
			this.out=out;
			nMaxPage=0;    //nMaxPage 초기화

			//스크립트 헤더 함수 호출
			getScriptHeader("A4", "2100x2970", "9", "VERTICAL");

			//파라미터 설정 함수 호출
			setParam();

			//고정 데이터 초기화 함수 호출
			initConstVarient();

			//Connection 및 Statement 객체 생성 함수 호출
			createConnAndStateObject();

			//쿼리문 초기화 함수 호출
			initSQLConst();

			//쉬트 함수 호출
			//SHEET=Sheet1   FRAME=0 함수 호출
			executeSheet10();

			//---------------스크립트 종료---------------
			out.print("--SCRIPT_END--\r");
		}catch(Exception e){    //catch 구문
			out.print(e);
			out.print("AI!REPORT JSP ERROR!!!!\r");
		}finally{    //finally 구문
			try{    //finally try 구문
				//DataSet Close
				if(stat_detail!=null) stat_detail.close();
				if(master!=null) master.close();
				if(stat_master!=null) stat_master.close();
				if(totsum!=null) totsum.close();
				if(stat_totsum!=null) stat_totsum.close();
				if(conn_DUNET!=null) conn_DUNET.close();
			}catch(Exception e){    //finally catch 구문
			}    //end finally try
		}    //end try
	}

	//-----쉬트 함수-----
	//-----SHEET=Sheet1   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet10( ) throws Exception{
		//쉬트 초기화 함수 호출
		initSheetVariant(41, 89, 546, 781, true);

		//시작 페이지 번호 출력
		out.print("-- " + nPageNum + " PAGE --\r");

		//밴드 함수 호출
		getScriptFromheader(true, true);    //머리글 밴드 호출
		getScriptFromfooter(true, true);    //바닥글 밴드 호출
		getScriptFrommaster(true);    //반복 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기
	}

	//-----밴드 함수-----
	//----header HeaderBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : header
	//----밴드 종류 : 머리글 밴드
	//----bIsFrist : 쉬트 함수에서 최초로 호출될 때 true, 페이지 스킵 함수에서 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromheader(boolean bIsFirst, boolean bIsPrint) throws Exception{
		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//데이터 변수 초기화
			sheet10_A1="";

			//데이터 변수 할당
			sheet10_A1= p_year_Param + "년 시간통계";
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 함수 호출
			writeScriptheader();
		}   //end if(bIsPrint)
	}

	//----footer FooterBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : footer
	//----밴드 종류 : 바닥글 밴드
	//----bIsFrist : 쉬트 함수에서 최초로 호출될 때 true, 페이지 스킵 함수에서 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromfooter(boolean bIsFirst, boolean bIsPrint) throws Exception{
		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 함수 호출
			writeScriptfooter();
		}   //end if(bIsPrint)
	}

	//----masterHeader RepeatHeader Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : masterHeader
	//----밴드 종류 : 반복 헤더
	//----bIsFrist : 반복 밴드 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFrommasterHeader(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=50;	//밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//DataSet 객체 생성
			//ResultSet totsum 객체의 생성
			if(totsum==null){
				totsum = stat_totsum.executeQuery(sql_totsum);
			}else{
				totsum.beforeFirst();
			}

			//데이터 fetch
			if(totsum.next()){
				setFieldVariableFromtotsum();	//ResultSet totsum에서 필드 값 설정
			}else{
				setFieldInitFromtotsum();	//ResultSet totsum의 필드 값 초기화
			}

			//데이터 변수 초기화
			sheet10_C5=0;
			sheet10_D5=0;
			sheet10_E5=0;
			sheet10_F5=0;
			sheet10_G5=0;
			sheet10_H5=0;
			sheet10_I5=0;
			sheet10_J5=0;
			sheet10_K5=0;
			sheet10_L5=0;

			//데이터 변수 할당
			sheet10_C5=totsum_TOT_STU_CNT;
			sheet10_D5=totsum_TOT_GRSEQ_CNT;
			sheet10_E5=totsum_TOT_TUTOR_TOTAL_CNT;
			sheet10_F5=totsum_TOT_A_CNT;
			sheet10_G5=totsum_TOT_A1_CNT;
			sheet10_H5=totsum_TOT_B_CNT;
			sheet10_I5=totsum_TOT_C1_CNT;
			sheet10_J5=totsum_TOT_C2_CNT;
			sheet10_K5=totsum_TOT_C3_CNT;
			sheet10_L5=totsum_TOT_Z_CNT;
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptmasterHeader();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----detail RepeatBand Start-----
	//-----소속 쉬트 : SHEET=Sheet1   FRAME=Frame0
	//-----밴드 이름 : detail
	//-----밴드 종류 : 반복 밴드
	//-----bIsPrint : 감추기 속성 설정 여부 true면 출력, false면 스크립트를 생성하지 않음
	private void getScriptFromdetail(boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=18;    //밴드 출력 높이
		boolean bIsFirst=true;
		//폰트명 : 굴림체
		//폰트 사이즈 : 9
		//각 문자별 폭을 할당할 배열 선언
		int[] charWidth = {5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,10};

		//데이터 변수 초기화
		sheet10_B7="";
		sheet10_C7=0;
		sheet10_D7=0;
		sheet10_E7=0;
		sheet10_F7=0;
		sheet10_G7=0;
		sheet10_H7=0;
		sheet10_I7=0;
		sheet10_J7=0;
		sheet10_K7=0;
		sheet10_L7=0;

		//DataSet 객체 생성
		//ResultSet detail 객체의 생성
		initSQLdetailVarient();
		detail = stat_detail.executeQuery(sql_detail);

		while(detail.next()){   //자동으로 생성되는 반복 밴드의 루프문
			//데이터 fetch
			setFieldVariableFromdetail();	//RecordSet detail에서 필드 값 설정

			if(bIsFirst){   //밴드 호출 후 루프 내에서 한번 만 실행되는 코드
			}   //end if(bIsFirst)

			//데이터 변수 할당
			sheet10_B7=detail_GRCODENM;
			sheet10_C7=detail_STU_CNT;
			sheet10_D7=detail_GRSEQ_CNT;
			sheet10_E7=detail_TUTOR_TOTAL_CNT;
			sheet10_F7=detail_A_CNT;
			sheet10_G7=detail_A1_CNT;
			sheet10_H7=detail_B_CNT;
			sheet10_I7=detail_C1_CNT;
			sheet10_J7=detail_C2_CNT;
			sheet10_K7=detail_C3_CNT;
			sheet10_L7=detail_Z_CNT;

			//Auto Size Code
			nAutoHeight_detail[0]=0;
			nAutoHeight_detail[0]=getPrintHeight(sheet10_B7, charWidth, 9, 100, 18, nAutoHeight_detail[0]);
			nAutoHeight_detail[0]=nAutoHeight_detail[0]+18;
			nBandHeight=nAutoHeight_detail[0];   //밴드 출력 높이 설정

			//AI 스크립트 출력
			if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
				if(isPageSkip(nYCurPos+nBandHeight)){   //스크립트 출력 영역 검사
					//페이지 스킵 함수 호출
					pageSkip(10);

					//반복 헤더 및 부모 반복단위 호출
					getScriptFrommasterHeader(false, true);	//반복 헤더 호출
					writeScriptmaster();

					nYCurPos=nYCurPos+nAutoHeight_master[0];
				}   //end if(page skip test)

				//스크립트 출력 함수 호출
				writeScriptdetail();

				//다음 출력 좌표 설정
				nYCurPos=nYCurPos+nBandHeight;
			}   //end if(bIsPrint)

			//bIsFirst 및 출력 라인 설정
			bIsFirst=false;
		}   //while end

		//DataSet Close
		if(detail!=null) detail.close();
	}

	//-----master RepeatBand Start-----
	//-----소속 쉬트 : SHEET=Sheet1   FRAME=Frame0
	//-----밴드 이름 : master
	//-----밴드 종류 : 반복 밴드
	//-----bIsPrint : 감추기 속성 설정 여부 true면 출력, false면 스크립트를 생성하지 않음
	private void getScriptFrommaster(boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=18;    //밴드 출력 높이
		boolean bIsFirst=true;
		//폰트명 : 굴림체
		//폰트 사이즈 : 9
		//각 문자별 폭을 할당할 배열 선언
		int[] charWidth = {5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,10};

		//데이터 변수 초기화
		sheet10_A6="";
		sheet10_C6=0;
		sheet10_D6=0;
		sheet10_E6=0;
		sheet10_F6=0;
		sheet10_G6=0;
		sheet10_H6=0;
		sheet10_I6=0;
		sheet10_J6=0;
		sheet10_K6=0;
		sheet10_L6=0;

		//DataSet 객체 생성
		//ResultSet master 객체의 생성
		if(master==null){
			master = stat_master.executeQuery(sql_master);
		}else{
			master.beforeFirst();
		}

		while(master.next()){   //자동으로 생성되는 반복 밴드의 루프문
			//데이터 fetch
			setFieldVariableFrommaster();	//RecordSet master에서 필드 값 설정

			if(bIsFirst){   //밴드 호출 후 루프 내에서 한번 만 실행되는 코드
				//반복 헤더 호출 및 조건 플래그 초기화
				getScriptFrommasterHeader(bIsFirst, true);	//반복 헤더 호출
			}   //end if(bIsFirst)

			//데이터 변수 할당
			sheet10_A6=master_GUBUNNM;
			sheet10_C6=master_TOT_STU_CNT;
			sheet10_D6=master_TOT_GRSEQ_CNT;
			sheet10_E6=master_TOT_TUTOR_TOTAL_CNT;
			sheet10_F6=master_TOT_A_CNT;
			sheet10_G6=master_TOT_A1_CNT;
			sheet10_H6=master_TOT_B_CNT;
			sheet10_I6=master_TOT_C1_CNT;
			sheet10_J6=master_TOT_C2_CNT;
			sheet10_K6=master_TOT_C3_CNT;
			sheet10_L6=master_TOT_Z_CNT;

			//Auto Size Code
			nAutoHeight_master[0]=0;
			nAutoHeight_master[0]=getPrintHeight(sheet10_A6, charWidth, 9, 70, 18, nAutoHeight_master[0]);
			nAutoHeight_master[0]=nAutoHeight_master[0]+18;
			nBandHeight=nAutoHeight_master[0];   //밴드 출력 높이 설정

			//AI 스크립트 출력
			if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
				if(isPageSkip(nYCurPos+nBandHeight)){   //스크립트 출력 영역 검사
					//페이지 스킵 함수 호출
					pageSkip(10);

					//반복 헤더 및 부모 반복단위 호출
					getScriptFrommasterHeader(false, true);	//반복 헤더 호출
				}   //end if(page skip test)

				//스크립트 출력 함수 호출
				writeScriptmaster();

				//다음 출력 좌표 설정
				nYCurPos=nYCurPos+nBandHeight;
			}   //end if(bIsPrint)

			//루프 내부 자식 밴드 호출
			getScriptFromdetail(true);

			//bIsFirst 및 출력 라인 설정
			bIsFirst=false;
		}   //while end
	}

	//-----스크립트 출력 함수-----
	//----header 스크립트 문 출력 함수----
	private void writeScriptheader( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT(41,41,505,0,16,0/,굴림체,RGB[0,0,0],BOLD, , ,NONE,38,1)");
		out.println(sheet10_A1+"\r");
	}

	//----footer 스크립트 문 출력 함수----
	private void writeScriptfooter( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT(41,781,505,1,11,0/,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A8+"\r");
	}

	//----masterHeader 스크립트 문 출력 함수----
	private void writeScriptmasterHeader( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos)+",70,32,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",70,32,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",70,32,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",70,32,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",70,32,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",70,1,10,0/,굴림체,RGB[0,0,0], , , ,NONE,32,1)");
		out.println(sheet10_A3+"\r");
		out.println("^CELLBG("+(nXCurPos+70)+","+(nYCurPos)+",100,32,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+70)+","+(nYCurPos)+",100,32,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+70)+","+(nYCurPos)+",100,32,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+70)+","+(nYCurPos)+",100,32,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+70)+","+(nYCurPos)+",100,32,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+70)+","+(nYCurPos)+",100,1,10,0/,굴림체,RGB[0,0,0], , , ,NONE,32,1)");
		out.println(sheet10_B3+"\r");
		out.println("^CELLBG("+(nXCurPos+170)+","+(nYCurPos)+",35,32,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+170)+","+(nYCurPos)+",35,32,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+170)+","+(nYCurPos)+",35,32,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+170)+","+(nYCurPos)+",35,32,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+170)+","+(nYCurPos)+",35,32,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+170)+","+(nYCurPos)+",35,1,10,0/,굴림체,RGB[0,0,0], , , ,NONE,32,1)");
		out.println(sheet10_C3+"\r");
		out.println("^CELLBG("+(nXCurPos+205)+","+(nYCurPos)+",35,32,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+205)+","+(nYCurPos)+",35,32,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+205)+","+(nYCurPos)+",35,32,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+205)+","+(nYCurPos)+",35,32,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+205)+","+(nYCurPos)+",35,32,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+205)+","+(nYCurPos)+",35,1,10,0/,굴림체,RGB[0,0,0], , , ,NONE,32,1)");
		out.println(sheet10_D3+"\r");
		out.println("^CELLBG("+(nXCurPos+240)+","+(nYCurPos)+",35,32,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+240)+","+(nYCurPos)+",35,32,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+240)+","+(nYCurPos)+",35,32,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+240)+","+(nYCurPos)+",35,32,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+240)+","+(nYCurPos)+",35,32,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+240)+","+(nYCurPos)+",35,1,10,0/,굴림체,RGB[0,0,0], , , ,NONE,32,1)");
		out.println(sheet10_E3+"\r");
		out.println("^CELLBG("+(nXCurPos+275)+","+(nYCurPos)+",150,16,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos)+",150,16,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos)+",150,16,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos)+",150,16,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos)+",150,16,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+275)+","+(nYCurPos)+",150,1,10,0/,굴림체,RGB[0,0,0], , , ,NONE,16,1)");
		out.println(sheet10_F3+"\r");
		out.println("^CELLBG("+(nXCurPos+425)+","+(nYCurPos)+",40,32,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+425)+","+(nYCurPos)+",40,32,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+425)+","+(nYCurPos)+",40,32,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+425)+","+(nYCurPos)+",40,32,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+425)+","+(nYCurPos)+",40,32,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+425)+","+(nYCurPos)+",40,1,10,0/,굴림체,RGB[0,0,0], , , ,NONE,32,1)");
		out.println(sheet10_K3+"\r");
		out.println("^CELLBG("+(nXCurPos+465)+","+(nYCurPos)+",40,32,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+465)+","+(nYCurPos)+",40,32,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+465)+","+(nYCurPos)+",40,32,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+465)+","+(nYCurPos)+",40,32,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+465)+","+(nYCurPos)+",40,32,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+465)+","+(nYCurPos)+",40,1,10,0/,굴림체,RGB[0,0,0], , , ,NONE,32,1)");
		out.println(sheet10_L3+"\r");
		out.println("^CELLBG("+(nXCurPos+275)+","+(nYCurPos+16)+",30,16,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos+16)+",30,16,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos+16)+",30,16,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos+16)+",30,16,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos+16)+",30,16,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+275)+","+(nYCurPos+16)+",30,1,10,0/,굴림체,RGB[0,0,0], , , ,NONE,16,1)");
		out.println(sheet10_F4+"\r");
		out.println("^CELLBG("+(nXCurPos+305)+","+(nYCurPos+16)+",30,16,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+305)+","+(nYCurPos+16)+",30,16,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+305)+","+(nYCurPos+16)+",30,16,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+305)+","+(nYCurPos+16)+",30,16,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+305)+","+(nYCurPos+16)+",30,16,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+305)+","+(nYCurPos+16)+",30,1,10,0/,굴림체,RGB[0,0,0], , , ,NONE,16,1)");
		out.println(sheet10_G4+"\r");
		out.println("^CELLBG("+(nXCurPos+335)+","+(nYCurPos+16)+",30,16,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+335)+","+(nYCurPos+16)+",30,16,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+335)+","+(nYCurPos+16)+",30,16,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+335)+","+(nYCurPos+16)+",30,16,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+335)+","+(nYCurPos+16)+",30,16,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+335)+","+(nYCurPos+16)+",30,1,10,0/,굴림체,RGB[0,0,0], , , ,NONE,16,1)");
		out.println(sheet10_H4+"\r");
		out.println("^CELLBG("+(nXCurPos+365)+","+(nYCurPos+16)+",30,16,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+365)+","+(nYCurPos+16)+",30,16,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+365)+","+(nYCurPos+16)+",30,16,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+365)+","+(nYCurPos+16)+",30,16,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+365)+","+(nYCurPos+16)+",30,16,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+365)+","+(nYCurPos+16)+",30,1,10,0/,굴림체,RGB[0,0,0], , , ,NONE,16,1)");
		out.println(sheet10_I4+"\r");
		out.println("^CELLBG("+(nXCurPos+395)+","+(nYCurPos+16)+",30,16,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos+16)+",30,16,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos+16)+",30,16,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos+16)+",30,16,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos+16)+",30,16,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+395)+","+(nYCurPos+16)+",30,1,10,0/,굴림체,RGB[0,0,0], , , ,NONE,16,1)");
		out.println(sheet10_J4+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+32)+",170,18,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+32)+",170,18,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+32)+",170,18,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+32)+",170,18,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+32)+",170,18,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+32)+",170,1,9,0/,굴림체,RGB[0,0,0], , , ,NONE,18,1)");
		out.println(sheet10_A5+"\r");
		out.println("^CELLBG("+(nXCurPos+170)+","+(nYCurPos+32)+",35,18,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+170)+","+(nYCurPos+32)+",35,18,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+170)+","+(nYCurPos+32)+",35,18,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+170)+","+(nYCurPos+32)+",35,18,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+170)+","+(nYCurPos+32)+",35,18,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+170)+","+(nYCurPos+32)+",35,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,18,1)");
		out.println(sheet10_C5+"\r");
		out.println("^CELLBG("+(nXCurPos+205)+","+(nYCurPos+32)+",35,18,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+205)+","+(nYCurPos+32)+",35,18,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+205)+","+(nYCurPos+32)+",35,18,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+205)+","+(nYCurPos+32)+",35,18,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+205)+","+(nYCurPos+32)+",35,18,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+205)+","+(nYCurPos+32)+",35,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,18,1)");
		out.println(sheet10_D5+"\r");
		out.println("^CELLBG("+(nXCurPos+240)+","+(nYCurPos+32)+",35,18,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+240)+","+(nYCurPos+32)+",35,18,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+240)+","+(nYCurPos+32)+",35,18,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+240)+","+(nYCurPos+32)+",35,18,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+240)+","+(nYCurPos+32)+",35,18,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+240)+","+(nYCurPos+32)+",35,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,18,1)");
		out.println(sheet10_E5+"\r");
		out.println("^CELLBG("+(nXCurPos+275)+","+(nYCurPos+32)+",30,18,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos+32)+",30,18,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos+32)+",30,18,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos+32)+",30,18,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos+32)+",30,18,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+275)+","+(nYCurPos+32)+",30,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,18,1)");
		out.println(sheet10_F5+"\r");
		out.println("^CELLBG("+(nXCurPos+305)+","+(nYCurPos+32)+",30,18,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+305)+","+(nYCurPos+32)+",30,18,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+305)+","+(nYCurPos+32)+",30,18,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+305)+","+(nYCurPos+32)+",30,18,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+305)+","+(nYCurPos+32)+",30,18,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+305)+","+(nYCurPos+32)+",30,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,18,1)");
		out.println(sheet10_G5+"\r");
		out.println("^CELLBG("+(nXCurPos+335)+","+(nYCurPos+32)+",30,18,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+335)+","+(nYCurPos+32)+",30,18,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+335)+","+(nYCurPos+32)+",30,18,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+335)+","+(nYCurPos+32)+",30,18,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+335)+","+(nYCurPos+32)+",30,18,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+335)+","+(nYCurPos+32)+",30,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,18,1)");
		out.println(sheet10_H5+"\r");
		out.println("^CELLBG("+(nXCurPos+365)+","+(nYCurPos+32)+",30,18,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+365)+","+(nYCurPos+32)+",30,18,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+365)+","+(nYCurPos+32)+",30,18,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+365)+","+(nYCurPos+32)+",30,18,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+365)+","+(nYCurPos+32)+",30,18,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+365)+","+(nYCurPos+32)+",30,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,18,1)");
		out.println(sheet10_I5+"\r");
		out.println("^CELLBG("+(nXCurPos+395)+","+(nYCurPos+32)+",30,18,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos+32)+",30,18,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos+32)+",30,18,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos+32)+",30,18,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos+32)+",30,18,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+395)+","+(nYCurPos+32)+",30,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,18,1)");
		out.println(sheet10_J5+"\r");
		out.println("^CELLBG("+(nXCurPos+425)+","+(nYCurPos+32)+",40,18,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+425)+","+(nYCurPos+32)+",40,18,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+425)+","+(nYCurPos+32)+",40,18,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+425)+","+(nYCurPos+32)+",40,18,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+425)+","+(nYCurPos+32)+",40,18,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+425)+","+(nYCurPos+32)+",40,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,18,1)");
		out.println(sheet10_K5+"\r");
		out.println("^CELLBG("+(nXCurPos+465)+","+(nYCurPos+32)+",40,18,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+465)+","+(nYCurPos+32)+",40,18,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+465)+","+(nYCurPos+32)+",40,18,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+465)+","+(nYCurPos+32)+",40,18,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+465)+","+(nYCurPos+32)+",40,18,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+465)+","+(nYCurPos+32)+",40,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,18,1)");
		out.println(sheet10_L5+"\r");
	}

	//----detail 스크립트 문 출력 함수----
	private void writeScriptdetail( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",70,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",70,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",70,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",70,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos+70)+","+(nYCurPos)+",100,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+70)+","+(nYCurPos)+",100,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+70)+","+(nYCurPos)+",100,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+70)+","+(nYCurPos)+",100,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+70)+","+(nYCurPos)+",100,0,9,0/,굴림체,RGB[0,0,0], , , ,XL,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_B7+"\r");
		out.println("^CELLLINE("+(nXCurPos+170)+","+(nYCurPos)+",35,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+170)+","+(nYCurPos)+",35,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+170)+","+(nYCurPos)+",35,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+170)+","+(nYCurPos)+",35,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+170)+","+(nYCurPos)+",35,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_C7+"\r");
		out.println("^CELLLINE("+(nXCurPos+205)+","+(nYCurPos)+",35,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+205)+","+(nYCurPos)+",35,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+205)+","+(nYCurPos)+",35,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+205)+","+(nYCurPos)+",35,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+205)+","+(nYCurPos)+",35,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_D7+"\r");
		out.println("^CELLLINE("+(nXCurPos+240)+","+(nYCurPos)+",35,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+240)+","+(nYCurPos)+",35,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+240)+","+(nYCurPos)+",35,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+240)+","+(nYCurPos)+",35,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+240)+","+(nYCurPos)+",35,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_E7+"\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos)+",30,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos)+",30,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos)+",30,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos)+",30,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+275)+","+(nYCurPos)+",30,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_F7+"\r");
		out.println("^CELLLINE("+(nXCurPos+305)+","+(nYCurPos)+",30,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+305)+","+(nYCurPos)+",30,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+305)+","+(nYCurPos)+",30,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+305)+","+(nYCurPos)+",30,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+305)+","+(nYCurPos)+",30,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_G7+"\r");
		out.println("^CELLLINE("+(nXCurPos+335)+","+(nYCurPos)+",30,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+335)+","+(nYCurPos)+",30,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+335)+","+(nYCurPos)+",30,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+335)+","+(nYCurPos)+",30,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+335)+","+(nYCurPos)+",30,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_H7+"\r");
		out.println("^CELLLINE("+(nXCurPos+365)+","+(nYCurPos)+",30,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+365)+","+(nYCurPos)+",30,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+365)+","+(nYCurPos)+",30,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+365)+","+(nYCurPos)+",30,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+365)+","+(nYCurPos)+",30,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_I7+"\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos)+",30,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos)+",30,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos)+",30,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos)+",30,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+395)+","+(nYCurPos)+",30,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_J7+"\r");
		out.println("^CELLLINE("+(nXCurPos+425)+","+(nYCurPos)+",40,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+425)+","+(nYCurPos)+",40,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+425)+","+(nYCurPos)+",40,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+425)+","+(nYCurPos)+",40,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+425)+","+(nYCurPos)+",40,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_K7+"\r");
		out.println("^CELLLINE("+(nXCurPos+465)+","+(nYCurPos)+",40,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+465)+","+(nYCurPos)+",40,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+465)+","+(nYCurPos)+",40,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+465)+","+(nYCurPos)+",40,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+465)+","+(nYCurPos)+",40,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_L7+"\r");
	}

	//----master 스크립트 문 출력 함수----
	private void writeScriptmaster( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos)+",70,"+(nAutoHeight_master[0])+",1,RGB[241,241,252],RGB[241,241,252],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",70,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",70,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",70,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",70,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",70,0,9,0/,굴림체,RGB[0,0,0], , , ,XL,"+(nAutoHeight_master[0])+",1)");
		out.println(sheet10_A6+"\r");
		out.println("^CELLBG("+(nXCurPos+70)+","+(nYCurPos)+",100,"+(nAutoHeight_master[0])+",1,RGB[241,241,252],RGB[241,241,252],0)\r");
		out.println("^CELLLINE("+(nXCurPos+70)+","+(nYCurPos)+",100,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+70)+","+(nYCurPos)+",100,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+70)+","+(nYCurPos)+",100,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+70)+","+(nYCurPos)+",100,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+70)+","+(nYCurPos)+",100,1,9,0/,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_master[0])+",1)");
		out.println(sheet10_B6+"\r");
		out.println("^CELLBG("+(nXCurPos+170)+","+(nYCurPos)+",35,"+(nAutoHeight_master[0])+",1,RGB[241,241,252],RGB[241,241,252],0)\r");
		out.println("^CELLLINE("+(nXCurPos+170)+","+(nYCurPos)+",35,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+170)+","+(nYCurPos)+",35,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+170)+","+(nYCurPos)+",35,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+170)+","+(nYCurPos)+",35,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+170)+","+(nYCurPos)+",35,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_master[0])+",1)");
		out.println(sheet10_C6+"\r");
		out.println("^CELLBG("+(nXCurPos+205)+","+(nYCurPos)+",35,"+(nAutoHeight_master[0])+",1,RGB[241,241,252],RGB[241,241,252],0)\r");
		out.println("^CELLLINE("+(nXCurPos+205)+","+(nYCurPos)+",35,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+205)+","+(nYCurPos)+",35,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+205)+","+(nYCurPos)+",35,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+205)+","+(nYCurPos)+",35,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+205)+","+(nYCurPos)+",35,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_master[0])+",1)");
		out.println(sheet10_D6+"\r");
		out.println("^CELLBG("+(nXCurPos+240)+","+(nYCurPos)+",35,"+(nAutoHeight_master[0])+",1,RGB[241,241,252],RGB[241,241,252],0)\r");
		out.println("^CELLLINE("+(nXCurPos+240)+","+(nYCurPos)+",35,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+240)+","+(nYCurPos)+",35,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+240)+","+(nYCurPos)+",35,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+240)+","+(nYCurPos)+",35,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+240)+","+(nYCurPos)+",35,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_master[0])+",1)");
		out.println(sheet10_E6+"\r");
		out.println("^CELLBG("+(nXCurPos+275)+","+(nYCurPos)+",30,"+(nAutoHeight_master[0])+",1,RGB[241,241,252],RGB[241,241,252],0)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos)+",30,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos)+",30,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos)+",30,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+275)+","+(nYCurPos)+",30,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+275)+","+(nYCurPos)+",30,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_master[0])+",1)");
		out.println(sheet10_F6+"\r");
		out.println("^CELLBG("+(nXCurPos+305)+","+(nYCurPos)+",30,"+(nAutoHeight_master[0])+",1,RGB[241,241,252],RGB[241,241,252],0)\r");
		out.println("^CELLLINE("+(nXCurPos+305)+","+(nYCurPos)+",30,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+305)+","+(nYCurPos)+",30,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+305)+","+(nYCurPos)+",30,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+305)+","+(nYCurPos)+",30,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+305)+","+(nYCurPos)+",30,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_master[0])+",1)");
		out.println(sheet10_G6+"\r");
		out.println("^CELLBG("+(nXCurPos+335)+","+(nYCurPos)+",30,"+(nAutoHeight_master[0])+",1,RGB[241,241,252],RGB[241,241,252],0)\r");
		out.println("^CELLLINE("+(nXCurPos+335)+","+(nYCurPos)+",30,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+335)+","+(nYCurPos)+",30,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+335)+","+(nYCurPos)+",30,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+335)+","+(nYCurPos)+",30,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+335)+","+(nYCurPos)+",30,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_master[0])+",1)");
		out.println(sheet10_H6+"\r");
		out.println("^CELLBG("+(nXCurPos+365)+","+(nYCurPos)+",30,"+(nAutoHeight_master[0])+",1,RGB[241,241,252],RGB[241,241,252],0)\r");
		out.println("^CELLLINE("+(nXCurPos+365)+","+(nYCurPos)+",30,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+365)+","+(nYCurPos)+",30,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+365)+","+(nYCurPos)+",30,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+365)+","+(nYCurPos)+",30,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+365)+","+(nYCurPos)+",30,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_master[0])+",1)");
		out.println(sheet10_I6+"\r");
		out.println("^CELLBG("+(nXCurPos+395)+","+(nYCurPos)+",30,"+(nAutoHeight_master[0])+",1,RGB[241,241,252],RGB[241,241,252],0)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos)+",30,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos)+",30,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos)+",30,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos)+",30,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+395)+","+(nYCurPos)+",30,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_master[0])+",1)");
		out.println(sheet10_J6+"\r");
		out.println("^CELLBG("+(nXCurPos+425)+","+(nYCurPos)+",40,"+(nAutoHeight_master[0])+",1,RGB[241,241,252],RGB[241,241,252],0)\r");
		out.println("^CELLLINE("+(nXCurPos+425)+","+(nYCurPos)+",40,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+425)+","+(nYCurPos)+",40,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+425)+","+(nYCurPos)+",40,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+425)+","+(nYCurPos)+",40,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+425)+","+(nYCurPos)+",40,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_master[0])+",1)");
		out.println(sheet10_K6+"\r");
		out.println("^CELLBG("+(nXCurPos+465)+","+(nYCurPos)+",40,"+(nAutoHeight_master[0])+",1,RGB[241,241,252],RGB[241,241,252],0)\r");
		out.println("^CELLLINE("+(nXCurPos+465)+","+(nYCurPos)+",40,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+465)+","+(nYCurPos)+",40,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+465)+","+(nYCurPos)+",40,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+465)+","+(nYCurPos)+",40,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+465)+","+(nYCurPos)+",40,2,9,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_master[0])+",1)");
		out.println(sheet10_L6+"\r");
	}

	//파라미터 설정 함수
	private void setParam(){
		p_year_Param=GetB(request.getParameter("p_year"));
		p_gubun_Param=GetB(request.getParameter("p_gubun"));
	}

	//-----Connection 및 Statement 객체 생성 함수-----
	private void createConnAndStateObject() throws Exception{
		//DUNET Connection 객체 생성
		Class.forName("oracle.jdbc.driver.OracleDriver");
		conn_DUNET = DriverManager.getConnection("jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.12.203)(PORT=1521))(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.12.204)(PORT=1521))(FAILOVER=on)(LOAD_BALANCE=off))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=LOTI)))","inchlms","fhxl21");stat_totsum=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_master=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_detail=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
	}

	//-----SQL문 변수 초기화 함수-----
	private void initSQLConst(){
		sql_totsum = "SELECT sum(stu_cnt) as tot_stu_cnt ";
		sql_totsum = sql_totsum + "     , sum(grseq_cnt) as tot_grseq_cnt ";
		sql_totsum = sql_totsum + "     , sum(tutor_total_cnt) as tot_tutor_total_cnt ";
		sql_totsum = sql_totsum + "     , sum(a_cnt) as tot_a_cnt ";
		sql_totsum = sql_totsum + "     , sum(a1_cnt) as tot_a1_cnt ";
		sql_totsum = sql_totsum + "     , sum(b_cnt) as tot_b_cnt ";
		sql_totsum = sql_totsum + "     , sum(c1_cnt) as tot_c1_cnt ";
		sql_totsum = sql_totsum + "     , sum(c2_cnt) as tot_c2_cnt ";
		sql_totsum = sql_totsum + "     , sum(c3_cnt) as tot_c3_cnt ";
		sql_totsum = sql_totsum + "     , sum(z_cnt) as tot_z_cnt ";
		sql_totsum = sql_totsum + "  FROM ( ";
		sql_totsum = sql_totsum + "select a.grcode ";
		sql_totsum = sql_totsum + "     , a.gubun ";
		sql_totsum = sql_totsum + "     , a.gubunnm ";
		sql_totsum = sql_totsum + "     , a.grcodenm ";
		sql_totsum = sql_totsum + "     , count(b.userno) as stu_cnt ";
		sql_totsum = sql_totsum + "     , a.grseq_cnt ";
		sql_totsum = sql_totsum + "     , a.tutor_total_cnt ";
		sql_totsum = sql_totsum + "     , a.a_cnt ";
		sql_totsum = sql_totsum + "     , a.a1_cnt ";
		sql_totsum = sql_totsum + "     , a.b_cnt ";
		sql_totsum = sql_totsum + "     , a.c1_cnt ";
		sql_totsum = sql_totsum + "     , a.c2_cnt ";
		sql_totsum = sql_totsum + "     , a.c3_cnt ";
		sql_totsum = sql_totsum + "     , a.z_cnt ";
		sql_totsum = sql_totsum + "from ( ";
		sql_totsum = sql_totsum + "select c.grcode as grcode , ";
		sql_totsum = sql_totsum + "(c.grtype || c.grsubcd) as gubun , ";
		sql_totsum = sql_totsum + "(mc.mcode_name || sc.scode_name || '교육') as gubunnm , ";
		sql_totsum = sql_totsum + "c.grcodenm as grcodenm , ";
		sql_totsum = sql_totsum + "count(distinct d.grseq) as grseq_cnt , ";
		sql_totsum = sql_totsum + "sum(decode(e.tlevel, 'A', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 'A1', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 'B', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 'C1', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 'C2', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 'C3', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 'Z', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 0)) as TUTOR_TOTAL_CNT , ";
		sql_totsum = sql_totsum + "sum(decode(e.tlevel, 'A', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 0)) as A_CNT , ";
		sql_totsum = sql_totsum + "sum(decode(e.tlevel, 'A1', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 0)) as A1_CNT , ";
		sql_totsum = sql_totsum + "sum(decode(e.tlevel, 'B', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 0)) as B_CNT , ";
		sql_totsum = sql_totsum + "sum(decode(e.tlevel, 'C1', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 0)) as C1_CNT , ";
		sql_totsum = sql_totsum + "sum(decode(e.tlevel, 'C2', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 0)) as C2_CNT , ";
		sql_totsum = sql_totsum + "sum(decode(e.tlevel, 'C3', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 0)) as C3_CNT , ";
		sql_totsum = sql_totsum + "sum(decode(e.tlevel, 'Z', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 0)) as Z_CNT ";
		sql_totsum = sql_totsum + "from tb_maincode mc, ";
		sql_totsum = sql_totsum + "tb_subcode sc, ";
		sql_totsum = sql_totsum + "tb_grcode c, ";
		sql_totsum = sql_totsum + "tb_classtutor d, ";
		sql_totsum = sql_totsum + "tb_tutor e, ";
		sql_totsum = sql_totsum + "tb_subjseq f ";
		sql_totsum = sql_totsum + "where (mc.cd_gubun(+)='G' ";
		sql_totsum = sql_totsum + "and c.grtype=mc.major_code(+)) ";
		sql_totsum = sql_totsum + "and (sc.cd_gubun(+)='G' ";
		sql_totsum = sql_totsum + "and c.grtype=sc.major_code(+) ";
		sql_totsum = sql_totsum + "and c.grsubcd=sc.minor_code(+)) ";
		sql_totsum = sql_totsum + "and c.grcode = d.grcode ";
		sql_totsum = sql_totsum + "and d.tuserno = e.userno ";
		sql_totsum = sql_totsum + "and d.grcode = f.grcode ";
		sql_totsum = sql_totsum + "and d.grseq = f.grseq ";
		sql_totsum = sql_totsum + "and d.subj = f.subj ";
		sql_totsum = sql_totsum + "and substr(d.grseq, 0, 4) ='" + p_year_Param + "' ";
		sql_totsum = sql_totsum + "group by c.grcode , (c.grtype || c.grsubcd) , (mc.mcode_name || sc.scode_name || '교육') , c.grcodenm ";
		sql_totsum = sql_totsum + "order by gubun, grcode, gubunnm, grcodenm ) a , ";
		sql_totsum = sql_totsum + "( ";
		sql_totsum = sql_totsum + "select grcode, ";
		sql_totsum = sql_totsum + "userno ";
		sql_totsum = sql_totsum + "from tb_grresult ";
		sql_totsum = sql_totsum + "where substr(grseq, 0, 4) ='" + p_year_Param + "') b ";
		sql_totsum = sql_totsum + "where a.grcode = b.grcode(+) ";
		sql_totsum = sql_totsum + "group by a.grcode, a.gubun, a.gubunnm, a.grcodenm, a.grseq_cnt, a.tutor_total_cnt, a.a_cnt , a.a1_cnt ,a.b_cnt, a.c1_cnt , a.c2_cnt , a.c3_cnt, a.z_cnt ";
		sql_totsum = sql_totsum + " )";
		sql_master = "SELECT gubunnm ";
		sql_master = sql_master + "     , gubun ";
		sql_master = sql_master + "     , sum(stu_cnt) as tot_stu_cnt ";
		sql_master = sql_master + "     , sum(grseq_cnt) as tot_grseq_cnt ";
		sql_master = sql_master + "     , sum(tutor_total_cnt) as tot_tutor_total_cnt ";
		sql_master = sql_master + "     , sum(a_cnt) as tot_a_cnt ";
		sql_master = sql_master + "     , sum(a1_cnt) as tot_a1_cnt ";
		sql_master = sql_master + "     , sum(b_cnt) as tot_b_cnt ";
		sql_master = sql_master + "     , sum(c1_cnt) as tot_c1_cnt ";
		sql_master = sql_master + "     , sum(c2_cnt) as tot_c2_cnt ";
		sql_master = sql_master + "     , sum(c3_cnt) as tot_c3_cnt ";
		sql_master = sql_master + "     , sum(z_cnt) as tot_z_cnt ";
		sql_master = sql_master + "  FROM ( ";
		sql_master = sql_master + "select a.grcode ";
		sql_master = sql_master + "     , a.gubun ";
		sql_master = sql_master + "     , a.gubunnm ";
		sql_master = sql_master + "     , a.grcodenm ";
		sql_master = sql_master + "     , count(b.userno) as stu_cnt ";
		sql_master = sql_master + "     , a.grseq_cnt ";
		sql_master = sql_master + "     , a.tutor_total_cnt ";
		sql_master = sql_master + "     , a.a_cnt ";
		sql_master = sql_master + "     , a.a1_cnt ";
		sql_master = sql_master + "     , a.b_cnt ";
		sql_master = sql_master + "     , a.c1_cnt ";
		sql_master = sql_master + "     , a.c2_cnt ";
		sql_master = sql_master + "     , a.c3_cnt ";
		sql_master = sql_master + "     , a.z_cnt ";
		sql_master = sql_master + "from ( ";
		sql_master = sql_master + "select c.grcode as grcode , ";
		sql_master = sql_master + "(c.grtype || c.grsubcd) as gubun , ";
		sql_master = sql_master + "(mc.mcode_name || sc.scode_name || '교육') as gubunnm , ";
		sql_master = sql_master + "c.grcodenm as grcodenm , ";
		sql_master = sql_master + "count(distinct d.grseq) as grseq_cnt , ";
		sql_master = sql_master + "sum(decode(e.tlevel, 'A', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 'A1', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 'B', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 'C1', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 'C2', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 'C3', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 'Z', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 0)) as TUTOR_TOTAL_CNT , ";
		sql_master = sql_master + "sum(decode(e.tlevel, 'A', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 0)) as A_CNT , ";
		sql_master = sql_master + "sum(decode(e.tlevel, 'A1', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 0)) as A1_CNT , ";
		sql_master = sql_master + "sum(decode(e.tlevel, 'B', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 0)) as B_CNT , ";
		sql_master = sql_master + "sum(decode(e.tlevel, 'C1', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 0)) as C1_CNT , ";
		sql_master = sql_master + "sum(decode(e.tlevel, 'C2', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 0)) as C2_CNT , ";
		sql_master = sql_master + "sum(decode(e.tlevel, 'C3', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 0)) as C3_CNT , ";
		sql_master = sql_master + "sum(decode(e.tlevel, 'Z', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 0)) as Z_CNT ";
		sql_master = sql_master + "from tb_maincode mc, ";
		sql_master = sql_master + "tb_subcode sc, ";
		sql_master = sql_master + "tb_grcode c, ";
		sql_master = sql_master + "tb_classtutor d, ";
		sql_master = sql_master + "tb_tutor e, ";
		sql_master = sql_master + "tb_subjseq f ";
		sql_master = sql_master + "where (mc.cd_gubun(+)='G' ";
		sql_master = sql_master + "and c.grtype=mc.major_code(+)) ";
		sql_master = sql_master + "and (sc.cd_gubun(+)='G' ";
		sql_master = sql_master + "and c.grtype=sc.major_code(+) ";
		sql_master = sql_master + "and c.grsubcd=sc.minor_code(+)) ";
		sql_master = sql_master + "and c.grcode = d.grcode ";
		sql_master = sql_master + "and d.tuserno = e.userno ";
		sql_master = sql_master + "and d.grcode = f.grcode ";
		sql_master = sql_master + "and d.grseq = f.grseq ";
		sql_master = sql_master + "and d.subj = f.subj ";
		sql_master = sql_master + "and substr(d.grseq, 0, 4) ='" + p_year_Param + "' ";
		sql_master = sql_master + "group by c.grcode , (c.grtype || c.grsubcd) , (mc.mcode_name || sc.scode_name || '교육') , c.grcodenm ";
		sql_master = sql_master + "order by gubun, grcode, gubunnm, grcodenm ) a , ";
		sql_master = sql_master + "( ";
		sql_master = sql_master + "select grcode, ";
		sql_master = sql_master + "userno ";
		sql_master = sql_master + "from tb_grresult ";
		sql_master = sql_master + "where substr(grseq, 0, 4) ='" + p_year_Param + "') b ";
		sql_master = sql_master + "where a.grcode = b.grcode(+) ";
		sql_master = sql_master + "group by a.grcode, a.gubun, a.gubunnm, a.grcodenm, a.grseq_cnt, a.tutor_total_cnt, a.a_cnt , a.a1_cnt ,a.b_cnt, a.c1_cnt , a.c2_cnt , a.c3_cnt, a.z_cnt ";
		sql_master = sql_master + " ) ";
		sql_master = sql_master + "GROUP BY gubunnm, gubun";
	}

	private void initSQLdetailVarient(){
		sql_detail = "select a.grcode ";
		sql_detail = sql_detail + "     , a.gubun ";
		sql_detail = sql_detail + "     , a.gubunnm ";
		sql_detail = sql_detail + "     , a.grcodenm ";
		sql_detail = sql_detail + "     , count(b.userno) as stu_cnt ";
		sql_detail = sql_detail + "     , a.grseq_cnt ";
		sql_detail = sql_detail + "     , a.tutor_total_cnt ";
		sql_detail = sql_detail + "     , a.a_cnt ";
		sql_detail = sql_detail + "     , a.a1_cnt ";
		sql_detail = sql_detail + "     , a.b_cnt ";
		sql_detail = sql_detail + "     , a.c1_cnt ";
		sql_detail = sql_detail + "     , a.c2_cnt ";
		sql_detail = sql_detail + "     , a.c3_cnt ";
		sql_detail = sql_detail + "     , a.z_cnt ";
		sql_detail = sql_detail + "from ( ";
		sql_detail = sql_detail + "select c.grcode as grcode , ";
		sql_detail = sql_detail + "(c.grtype || c.grsubcd) as gubun , ";
		sql_detail = sql_detail + "(mc.mcode_name || sc.scode_name || '교육') as gubunnm , ";
		sql_detail = sql_detail + "c.grcodenm as grcodenm , ";
		sql_detail = sql_detail + "count(distinct d.grseq) as grseq_cnt , ";
		sql_detail = sql_detail + "sum(decode(e.tlevel, 'A', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 'A1', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 'B', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 'C1', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 'C2', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 'C3', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 'Z', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 0)) as TUTOR_TOTAL_CNT , ";
		sql_detail = sql_detail + "sum(decode(e.tlevel, 'A', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 0)) as A_CNT , ";
		sql_detail = sql_detail + "sum(decode(e.tlevel, 'A1', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 0)) as A1_CNT , ";
		sql_detail = sql_detail + "sum(decode(e.tlevel, 'B', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 0)) as B_CNT , ";
		sql_detail = sql_detail + "sum(decode(e.tlevel, 'C1', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 0)) as C1_CNT , ";
		sql_detail = sql_detail + "sum(decode(e.tlevel, 'C2', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 0)) as C2_CNT , ";
		sql_detail = sql_detail + "sum(decode(e.tlevel, 'C3', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 0)) as C3_CNT , ";
		sql_detail = sql_detail + "sum(decode(e.tlevel, 'Z', nvl(f.lessontime, 0)+nvl(f.silgitime, 0)+nvl(f.torontime, 0)+nvl(f.hyuntime, 0)+nvl(f.multitime, 0)+nvl(f.etctime, 0), 0)) as Z_CNT ";
		sql_detail = sql_detail + "from tb_maincode mc, ";
		sql_detail = sql_detail + "tb_subcode sc, ";
		sql_detail = sql_detail + "tb_grcode c, ";
		sql_detail = sql_detail + "tb_classtutor d, ";
		sql_detail = sql_detail + "tb_tutor e, ";
		sql_detail = sql_detail + "tb_subjseq f ";
		sql_detail = sql_detail + "where (mc.cd_gubun(+)='G' ";
		sql_detail = sql_detail + "and c.grtype=mc.major_code(+)) ";
		sql_detail = sql_detail + "and (sc.cd_gubun(+)='G' ";
		sql_detail = sql_detail + "and c.grtype=sc.major_code(+) ";
		sql_detail = sql_detail + "and c.grsubcd=sc.minor_code(+)) ";
		sql_detail = sql_detail + "and c.grcode = d.grcode ";
		sql_detail = sql_detail + "and d.tuserno = e.userno ";
		sql_detail = sql_detail + "and d.grcode = f.grcode ";
		sql_detail = sql_detail + "and d.grseq = f.grseq ";
		sql_detail = sql_detail + "and d.subj = f.subj ";
		sql_detail = sql_detail + "and substr(d.grseq, 0, 4) ='" + p_year_Param + "' ";
		sql_detail = sql_detail + "group by c.grcode , (c.grtype || c.grsubcd) , (mc.mcode_name || sc.scode_name || '교육') , c.grcodenm ";
		sql_detail = sql_detail + "order by gubun, grcode, gubunnm, grcodenm ) a , ";
		sql_detail = sql_detail + "( ";
		sql_detail = sql_detail + "select grcode, ";
		sql_detail = sql_detail + "userno ";
		sql_detail = sql_detail + "from tb_grresult ";
		sql_detail = sql_detail + "where substr(grseq, 0, 4) ='" + p_year_Param + "') b ";
		sql_detail = sql_detail + "where a.grcode = b.grcode(+) ";
		sql_detail = sql_detail + "AND a.gubun = '" + master_GUBUN + "' ";
		sql_detail = sql_detail + "group by a.grcode, a.gubun, a.gubunnm, a.grcodenm, a.grseq_cnt, a.tutor_total_cnt, a.a_cnt , a.a1_cnt ,a.b_cnt, a.c1_cnt , a.c2_cnt , a.c3_cnt, a.z_cnt";
	}

	//-----ResultSet 객체에서 필드 값 설정 함수-----
	//ResultSet totsum 객체에서 필드 값 설정 함수
	private void setFieldVariableFromtotsum() throws Exception{
		totsum_TOT_STU_CNT=totsum.getDouble(1);
		totsum_TOT_GRSEQ_CNT=totsum.getDouble(2);
		totsum_TOT_TUTOR_TOTAL_CNT=totsum.getDouble(3);
		totsum_TOT_A_CNT=totsum.getDouble(4);
		totsum_TOT_A1_CNT=totsum.getDouble(5);
		totsum_TOT_B_CNT=totsum.getDouble(6);
		totsum_TOT_C1_CNT=totsum.getDouble(7);
		totsum_TOT_C2_CNT=totsum.getDouble(8);
		totsum_TOT_C3_CNT=totsum.getDouble(9);
		totsum_TOT_Z_CNT=totsum.getDouble(10);
	}

	//ResultSet totsum 객체의 필드 값 초기화 함수
	private void setFieldInitFromtotsum(){
		totsum_TOT_STU_CNT=0;
		totsum_TOT_GRSEQ_CNT=0;
		totsum_TOT_TUTOR_TOTAL_CNT=0;
		totsum_TOT_A_CNT=0;
		totsum_TOT_A1_CNT=0;
		totsum_TOT_B_CNT=0;
		totsum_TOT_C1_CNT=0;
		totsum_TOT_C2_CNT=0;
		totsum_TOT_C3_CNT=0;
		totsum_TOT_Z_CNT=0;
	}

	//ResultSet master 객체에서 필드 값 설정 함수
	private void setFieldVariableFrommaster() throws Exception{
		master_GUBUNNM=GetB(master.getString(1));
		master_GUBUN=GetB(master.getString(2));
		master_TOT_STU_CNT=master.getDouble(3);
		master_TOT_GRSEQ_CNT=master.getDouble(4);
		master_TOT_TUTOR_TOTAL_CNT=master.getDouble(5);
		master_TOT_A_CNT=master.getDouble(6);
		master_TOT_A1_CNT=master.getDouble(7);
		master_TOT_B_CNT=master.getDouble(8);
		master_TOT_C1_CNT=master.getDouble(9);
		master_TOT_C2_CNT=master.getDouble(10);
		master_TOT_C3_CNT=master.getDouble(11);
		master_TOT_Z_CNT=master.getDouble(12);
	}

	//ResultSet master 객체의 필드 값 초기화 함수
	private void setFieldInitFrommaster(){
		master_GUBUNNM="";
		master_GUBUN="";
		master_TOT_STU_CNT=0;
		master_TOT_GRSEQ_CNT=0;
		master_TOT_TUTOR_TOTAL_CNT=0;
		master_TOT_A_CNT=0;
		master_TOT_A1_CNT=0;
		master_TOT_B_CNT=0;
		master_TOT_C1_CNT=0;
		master_TOT_C2_CNT=0;
		master_TOT_C3_CNT=0;
		master_TOT_Z_CNT=0;
	}

	//ResultSet detail 객체에서 필드 값 설정 함수
	private void setFieldVariableFromdetail() throws Exception{
		detail_GRCODE=GetB(detail.getString(1));
		detail_GUBUN=GetB(detail.getString(2));
		detail_GUBUNNM=GetB(detail.getString(3));
		detail_GRCODENM=GetB(detail.getString(4));
		detail_STU_CNT=detail.getDouble(5);
		detail_GRSEQ_CNT=detail.getDouble(6);
		detail_TUTOR_TOTAL_CNT=detail.getDouble(7);
		detail_A_CNT=detail.getDouble(8);
		detail_A1_CNT=detail.getDouble(9);
		detail_B_CNT=detail.getDouble(10);
		detail_C1_CNT=detail.getDouble(11);
		detail_C2_CNT=detail.getDouble(12);
		detail_C3_CNT=detail.getDouble(13);
		detail_Z_CNT=detail.getDouble(14);
	}

	//ResultSet detail 객체의 필드 값 초기화 함수
	private void setFieldInitFromdetail(){
		detail_GRCODE="";
		detail_GUBUN="";
		detail_GUBUNNM="";
		detail_GRCODENM="";
		detail_STU_CNT=0;
		detail_GRSEQ_CNT=0;
		detail_TUTOR_TOTAL_CNT=0;
		detail_A_CNT=0;
		detail_A1_CNT=0;
		detail_B_CNT=0;
		detail_C1_CNT=0;
		detail_C2_CNT=0;
		detail_C3_CNT=0;
		detail_Z_CNT=0;
	}

	//-----고정 데이터 초기화 함수-----
	private void initConstVarient(){
		sheet10_A8="#PAGE / #TOTALPAGE";
		sheet10_A3="구분";
		sheet10_B3="과  정  명";
		sheet10_C3="교육인원";
		sheet10_D3="기수";
		sheet10_E3="총강사인원";
		sheet10_F3="외   래   강   사";
		sheet10_K3="자체교관인원";
		sheet10_L3="비고";
		sheet10_F4="소계";
		sheet10_G4="A급";
		sheet10_H4="B급";
		sheet10_I4="C급";
		sheet10_J4="D급";
		sheet10_A5="총     계";
		sheet10_B6="소     계";
	}

	//-----페이지 스킵 관련 함수-----
	//페이지 스킵시 호출되는 함수로서 페이지 번호를 증가시키고 페이지 지시문 출력 그리고 Y좌표 초기화
	//매개변수에 따라 해당 쉬트의 배경 이미지, 머리글 밴드, 바닥글 밴드 함수 호출
	private void pageSkip(int nIndex) throws Exception{
		nXCurPos=nXStartPos;
		nYCurPos=nYStartPos;
		nPageNum=nPageNum+1;
		out.print("-- " + nPageNum + " PAGE --\r");

		switch(nIndex){
			case 10:		//SHEET=Sheet=1   FRAME=0에서 페이지 스킵시
			getScriptFromheader(false, true);		//머리글 밴드 호출
			getScriptFromfooter(false, true);		//바닥글 밴드 호출
			break;
		}
	}

	//페이지 스킵이 필요한지 검사하는 함수
	private boolean isPageSkip(int nTestPos){
		if(nTestPos>nYEndPos){
			return true;
		}else{
			return false;
		}
	}

	//-----공통 함수 선언-----
	private void getScriptHeader(String paper, String size, String value, String orient) throws Exception{
		out.print("--SCRIPT_START31--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void getSheetPaperInfo(String paper, String size, String value, String orient) throws Exception{
		out.print("--PAPER_INFO--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void initSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bFirstFrame){
		if(bFirstFrame){
			nStartPage=nMaxPage+1;
			nYLastPos=0;
		}
		nPageNum=nStartPage;
		nYStartPos=constStartY;
		nYEndPos=constEndY;
		nYCurPos=nYStartPos;
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
	}

	private void initChildSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bIsMultiFrame, boolean bIsFirstFrame){
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
		nYStartPos=constStartY;
		nYEndPos=constEndY;

		if(bIsMultiFrame){
			if(bIsFirstFrame){
				nStartPage=nPageNum;
				nYSavePos=nYCurPos;
				nYLastPos=0;
			}else{
				nPageNum=nStartPage;
				nYCurPos=nYSavePos;
			}
		}else{
			nStartPage=nPageNum;
		}
	}

	//Empty Row만으로 구성되어 출력 위치를 조정하기 위한 VoidBand 함수
	//nRangePos - VoidBand의 출력 영역
	//nIndex - PageSkip 함수 호출시 전달할 쉬트 인덱스
	private boolean voidBandNoneData(int nRangePos, int nIndex) throws Exception{
		int nTestPos;
		nTestPos=nYCurPos+nRangePos;
		if(isPageSkip(nTestPos)){
			pageSkip(nIndex);
			return true;
		}else{
			nYCurPos=nYCurPos+nRangePos;
			return false;
		}
	}

	private String Get0(String str){
		if(str==null){
			return "0";
		}else{
			if(str.equals("")){
				return "0";
			}else{
				return str;
			}
		}
	}

	private String GetB(String str){
		if(str==null){
			return "";
		}else{
			return str;
		}
	}

	private double SUM(double accVal, double tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(double accVal, long tmpVal){
		return(accVal+(double)tmpVal);
	}

	private long SUM(long accVal, long tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(long accVal, double tmpVal){
		return((double)accVal+tmpVal);
	}

	private long COUNT(long accuCNT){
		return ++accuCNT;
	}

	private long MIN(long maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(long maxV, double maxTempV){
		if((double)maxV<=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, double maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}
	private long MAX(long maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(long maxV, double maxTempV){
		if((double)maxV>=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, double maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}

	private double AVG(double sumVal, long cntVal){
		return(sumVal/cntVal);
	}

	private double AVG(long sumVal, long cntVal){
		return((double)sumVal/(double)cntVal);
	}

	private String aiReplace(String strAll, String strSrc, String strDest) {
		while(strAll.indexOf(strSrc) != -1) {
			strAll = strAll.substring(0, strAll.indexOf(strSrc)) + strDest + strAll.substring(strAll.indexOf(strSrc) + strSrc.length(), strAll.length());
		}
		return strAll;
	}

	private String toDate() {
		SimpleDateFormat dateFormat=new SimpleDateFormat("'#SERVERDATE#'yyyy/MM/dd/HH/mm/ss");
		java.util.Date currentDate = new java.util.Date();
		return dateFormat.format(currentDate);
	}

	final String toKor (String en){
		if(en==null){
			return "";
		}
		try{
			return new String(en.getBytes("8859_1"), "KSC5601");
		}catch(Exception e){return en;}
	}
	//문자의 폭을 조사하여 데이터의 출력 높이를 자동적으로 조정하는 함수
	private int getPrintHeight(String data, int[] charWidth, int fontSize, int cellWidth, int cellHeight, int nMaxHeight){
		int ch;
		int len = 95;
		int width = 0;
		int asciiWidth = 0;
		int linePitch = (int)(fontSize*1.4);
		int height = linePitch;
		int size = data.length();
		cellWidth = cellWidth-4;
		for (int i = 0; i < size; i++) {
			ch = data.charAt(i);

			if(ch<32 && !(ch==10 || ch==20 || ch==13)){
				continue;
			}

			if(ch>0x7F){
				width += asciiWidth;

				if (width > cellWidth) {
					width = asciiWidth;
					height += linePitch;
				}
				asciiWidth = 0;

				width += charWidth[len];
				if (width > cellWidth) {
					width = charWidth[len];
					height += linePitch;
				}
			} else if (ch==10 || ch==20) {
				width = 0;
				asciiWidth = 0;
				height += linePitch;
			} else if (ch==13) {
				width = 0;
				asciiWidth = 0;
				height += linePitch;
				if ((i != size-1) && (10 == (int)data.charAt(i+1))) {
					i++;
				}
			} else {
				if ((ch>64 && ch<91) || (ch>96 && ch<123)) {
					asciiWidth += charWidth[ch-32];
					if (i==size-1){
						width = width + asciiWidth;
						if (width>cellWidth){
							height += linePitch;
						}
					}
				} else {
					width += asciiWidth;

					if (width > cellWidth) {
						width = asciiWidth;
						height += linePitch;
					}

					asciiWidth = 0;

					width += charWidth[ch-32];
					if (width > cellWidth) {
						width = charWidth[ch-32];
						height += linePitch;
					}
				}
			}
		}

		if (height>cellHeight) {
			height=height-cellHeight;
		}else{
			height=0;
		}

		height = (int)MAX((long)height,(long)nMaxHeight);
		return height;
	}
}
%>
