<%
/* ### Generated by AIDesigner 3.7.1.22 ### */
%>

<%@ page language="java" import="java.sql.*,java.io.*,java.text.*" %>
<%@ page contentType="text/plain; charset=euc-kr" %>

<%
Object[] userObj = null;
ReportHandler handler = new ReportHandler(request,response,userObj);
handler.service(out);
%>

<%!
class ReportHandler{
	//공통 변수 선언
	private Object[] userObj = null;
	private int nStartPage;		//각 쉬트별 시작 페이지 저장
	private int nMaxPage;		//한 쉬트가 실행된 후 생성된 최대 페이지 번호 저장
	private int nPageNum;		//현재 페이지 번호
	private int nYStartPos;		//쉬트에서 Y 시작 좌표
	private int nYEndPos;		//쉬트에서 Y 끝 좌표
	private int nYCurPos;		//현재 Y 좌표
	private int nYSavePos;		//연결된 멀티 프레임 쉬트에서 시작 Y 좌표 저장
	private int nYLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 Y 좌표 저장
	private int nXStartPos;		//쉬트에서 X 시작 좌표
	private int nXEndPos;		//쉬트에서 X 끝 좌표
	private int nXCurPos;		//현재 X 좌표
	private int nXSavePos;		//연결된 멀티 프레임 쉬트에서 시작 X 좌표 저장
	private int  nXLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 X 좌표 저장
	private boolean bIsBeforePageSkip;		//조건 밴드에서 페이지 넘기기 여부 판단
	private int nLoopRef;		//절대 양식에서 루프 참조 변수
	private String isEmpty="";		//빈 문자열 비교에 사용

	private HttpServletRequest request;
	private HttpServletResponse response;
	private JspWriter out;

	//-----데이터 변수 선언-----
	String sheet10_A1;
	String sheet10_A4;
	String sheet10_A5;
	String sheet10_C5;
	String sheet10_E5;
	String sheet10_A6;
	String sheet10_A7;
	String sheet10_C7;
	String sheet10_E7;
	String sheet10_A8;
	String sheet10_C8;
	String sheet10_E8;
	String sheet10_A9;
	String sheet10_E9;
	String sheet10_A10;
	String sheet10_A12;
	String sheet10_C13;
	String sheet10_D14;
	String sheet10_A19;
	String sheet10_A21;
	String sheet10_C21;
	String sheet10_A22;
	String sheet10_C22;
	String sheet10_B24;
	String sheet10_B26;
	String sheet10_B27;
	String sheet10_B28;

	//-----Connection, Statement, ResultSet 객체 선언-----
	private Connection conn_DUNET;		//DSN DUNET Connection 객체
	private java.sql.Statement stat_GR_INFO;		//ResultSet GR_INFO 객체를 생성하기 위한 Statement 객체
	private ResultSet GR_INFO;		//ResultSet GR_INFO 객체

	//-----SQL 변수 선언-----
	private String sql_GR_INFO;		//ResultSet GR_INFO 객체를 생성하기 위한 쿼리문 저장

	//-----쿼리 필드 변수 선언-----
	//ResultSet GR_INFO 객체에서 필드 값을 받는 쿼리 필드 변수
	private String GR_INFO_GR_INFO;

	//파라미터 변수 선언
	String p_grcode_Param;
	String p_grseq_Param;
	String p_dept_Param;

	//ReportHandler 생성자 함수
	ReportHandler(HttpServletRequest request,HttpServletResponse response,Object[] userObj){
		this.request=request;
		this.response=response;
		this.userObj=userObj;
	}

	//ReportHandler 서비스 함수
	void service(JspWriter out) throws Exception{
		try{    //try 구문
			this.out=out;
			nMaxPage=0;    //nMaxPage 초기화

			//스크립트 헤더 함수 호출
			getScriptHeader("A4", "2100x2970", "9", "VERTICAL");

			//파라미터 설정 함수 호출
			setParam();

			//고정 데이터 초기화 함수 호출
			initConstVarient();

			//Connection 및 Statement 객체 생성 함수 호출
			createConnAndStateObject();

			//쿼리문 초기화 함수 호출
			initSQLConst();

			//쉬트 함수 호출
			//SHEET=Sheet1   FRAME=0 함수 호출
			executeSheet10();

			//---------------스크립트 종료---------------
			out.print("--SCRIPT_END--\r");
		}catch(Exception e){    //catch 구문
			out.print(e);
			out.print("AI!REPORT JSP ERROR!!!!\r");
		}finally{    //finally 구문
			try{    //finally try 구문
				//DataSet Close
				if(GR_INFO!=null) GR_INFO.close();
				if(stat_GR_INFO!=null) stat_GR_INFO.close();
				if(conn_DUNET!=null) conn_DUNET.close();
			}catch(Exception e){    //finally catch 구문
			}    //end finally try
		}    //end try
	}

	//-----쉬트 함수-----
	//-----SHEET=Sheet1   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet10( ) throws Exception{
		//쉬트 초기화 함수 호출
		initSheetVariant(41, 69, 546, 773, true);

		//시작 페이지 번호 출력
		out.print("-- " + nPageNum + " PAGE --\r");

		//밴드 함수 호출
		getScriptFromvoidband(true, true);    //Void 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기
	}

	//-----밴드 함수-----
	//----voidband VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : voidband
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFromvoidband(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=621;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//DataSet 객체 생성
			//ResultSet GR_INFO 객체의 생성
			if(GR_INFO==null){
				GR_INFO = stat_GR_INFO.executeQuery(sql_GR_INFO);
			}else{
				GR_INFO.beforeFirst();
			}

			//데이터 fetch
			if(GR_INFO.next()){
				setFieldVariableFromGR_INFO();	//ResultSet GR_INFO에서 필드 값 설정
			}else{
				setFieldInitFromGR_INFO();	//ResultSet GR_INFO의 필드 값 초기화
			}

			//데이터 변수 초기화
			sheet10_A4="";

			//데이터 변수 할당
			sheet10_A4=GR_INFO_GR_INFO;
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptvoidband();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----스크립트 출력 함수-----
	//----voidband 스크립트 문 출력 함수----
	private void writeScriptvoidband( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",505,1,18,0/,돋움체,RGB[0,0,0],BOLD, , ,NONE,60,1)");
		out.println(sheet10_A1+"\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+60)+",505,0,11,0/,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A4+"\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+80)+",74,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+80)+",74,25,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+80)+",74,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+80)+",74,25,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+80)+",74,1,11,0/,돋움체,RGB[0,0,0], , , ,NONE,25,1)");
		out.println(sheet10_A5+"\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+80)+",89,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+80)+",89,25,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+80)+",89,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+80)+",89,25,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos+163)+","+(nYCurPos+80)+",74,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+163)+","+(nYCurPos+80)+",74,25,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+163)+","+(nYCurPos+80)+",74,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+163)+","+(nYCurPos+80)+",74,25,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+163)+","+(nYCurPos+80)+",74,1,11,0/,돋움체,RGB[0,0,0], , , ,NONE,25,1)");
		out.println(sheet10_C5+"\r");
		out.println("^CELLLINE("+(nXCurPos+237)+","+(nYCurPos+80)+",89,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+237)+","+(nYCurPos+80)+",89,25,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+237)+","+(nYCurPos+80)+",89,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+237)+","+(nYCurPos+80)+",89,25,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+80)+",90,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+80)+",90,25,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+80)+",90,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+80)+",90,25,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+326)+","+(nYCurPos+80)+",90,1,11,0/,돋움체,RGB[0,0,0], , , ,NONE,25,1)");
		out.println(sheet10_E5+"\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+80)+",89,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+80)+",89,25,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+80)+",89,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+80)+",89,25,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+105)+",74,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+105)+",74,25,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+105)+",74,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+105)+",74,25,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+105)+",74,1,11,0/,돋움체,RGB[0,0,0], , , ,NONE,25,1)");
		out.println(sheet10_A6+"\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+105)+",431,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+105)+",431,25,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+105)+",431,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+105)+",431,25,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+130)+",74,32,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+130)+",74,32,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+130)+",74,32,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+130)+",74,32,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+130)+",74,1,11,0/,돋움체,RGB[0,0,0], , , ,NONE,32,1)");
		out.println(sheet10_A7+"\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+130)+",89,32,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+130)+",89,32,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+130)+",89,32,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+130)+",89,32,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos+163)+","+(nYCurPos+130)+",74,32,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+163)+","+(nYCurPos+130)+",74,32,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+163)+","+(nYCurPos+130)+",74,32,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+163)+","+(nYCurPos+130)+",74,32,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+163)+","+(nYCurPos+130)+",74,1,11,0/,돋움체,RGB[0,0,0], , , ,NONE,32,1)");
		out.println(sheet10_C7+"\r");
		out.println("^CELLLINE("+(nXCurPos+237)+","+(nYCurPos+130)+",89,32,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+237)+","+(nYCurPos+130)+",89,32,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+237)+","+(nYCurPos+130)+",89,32,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+237)+","+(nYCurPos+130)+",89,32,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+130)+",90,32,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+130)+",90,32,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+130)+",90,32,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+130)+",90,32,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+326)+","+(nYCurPos+130)+",90,1,11,0/,돋움체,RGB[0,0,0], , , ,NONE,32,1)");
		out.println(sheet10_E7+"\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+130)+",89,32,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+130)+",89,32,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+130)+",89,32,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+130)+",89,32,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+162)+",74,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+162)+",74,25,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+162)+",74,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+162)+",74,25,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+162)+",74,1,11,0/,돋움체,RGB[0,0,0], , , ,NONE,25,1)");
		out.println(sheet10_A8+"\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+162)+",89,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+162)+",89,25,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+162)+",89,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+162)+",89,25,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos+163)+","+(nYCurPos+162)+",74,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+163)+","+(nYCurPos+162)+",74,25,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+163)+","+(nYCurPos+162)+",74,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+163)+","+(nYCurPos+162)+",74,25,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+163)+","+(nYCurPos+162)+",74,1,11,0/,돋움체,RGB[0,0,0], , , ,NONE,25,1)");
		out.println(sheet10_C8+"\r");
		out.println("^CELLLINE("+(nXCurPos+237)+","+(nYCurPos+162)+",89,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+237)+","+(nYCurPos+162)+",89,25,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+237)+","+(nYCurPos+162)+",89,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+237)+","+(nYCurPos+162)+",89,25,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+162)+",90,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+162)+",90,25,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+162)+",90,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+162)+",90,25,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+326)+","+(nYCurPos+162)+",90,1,11,0/,돋움체,RGB[0,0,0], , , ,NONE,25,1)");
		out.println(sheet10_E8+"\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+162)+",89,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+162)+",89,25,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+162)+",89,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+162)+",89,25,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+187)+",74,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+187)+",74,25,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+187)+",74,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+187)+",74,25,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+187)+",74,1,11,0/,돋움체,RGB[0,0,0], , , ,NONE,25,1)");
		out.println(sheet10_A9+"\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+187)+",252,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+187)+",252,25,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+187)+",252,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+187)+",252,25,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+187)+",90,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+187)+",90,25,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+187)+",90,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+187)+",90,25,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+326)+","+(nYCurPos+187)+",90,1,11,0/,돋움체,RGB[0,0,0], , , ,NONE,25,1)");
		out.println(sheet10_E9+"\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+187)+",89,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+187)+",89,25,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+187)+",89,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+187)+",89,25,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+212)+",74,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+212)+",74,25,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+212)+",74,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+212)+",74,25,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+212)+",74,1,11,0/,돋움체,RGB[0,0,0], , , ,NONE,25,1)");
		out.println(sheet10_A10+"\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+212)+",431,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+212)+",431,25,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+212)+",431,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+212)+",431,25,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+237)+",74,15,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+237)+",74,15,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+237)+",89,15,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+163)+","+(nYCurPos+237)+",74,15,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+237)+","+(nYCurPos+237)+",89,15,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+237)+",90,15,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+237)+",89,15,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+237)+",89,15,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+252)+",505,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+252)+",505,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+252)+",505,1,11,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A12+"\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+272)+",74,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+163)+","+(nYCurPos+272)+",342,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+163)+","+(nYCurPos+272)+",342,0,11,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_C13+"\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+292)+",74,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+237)+","+(nYCurPos+292)+",268,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+237)+","+(nYCurPos+292)+",268,0,11,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_D14+"\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+312)+",74,15,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+312)+",74,15,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+312)+",89,15,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+163)+","+(nYCurPos+312)+",74,15,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+237)+","+(nYCurPos+312)+",89,15,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+312)+",90,15,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+312)+",89,15,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+312)+",89,15,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+387)+",505,1,18,0/,돋움체,RGB[0,0,0],BOLD, , ,NONE,40,1)");
		out.println(sheet10_A19+"\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+427)+",74,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+427)+",74,25,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+427)+",74,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+427)+",74,25,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+427)+",74,1,11,0/,돋움체,RGB[0,0,0], , , ,NONE,25,1)");
		out.println(sheet10_A21+"\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+427)+",89,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+427)+",89,25,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+427)+",89,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+427)+",89,25,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos+163)+","+(nYCurPos+427)+",74,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+163)+","+(nYCurPos+427)+",74,25,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+163)+","+(nYCurPos+427)+",74,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+163)+","+(nYCurPos+427)+",74,25,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+163)+","+(nYCurPos+427)+",74,1,11,0/,돋움체,RGB[0,0,0], , , ,NONE,25,1)");
		out.println(sheet10_C21+"\r");
		out.println("^CELLLINE("+(nXCurPos+237)+","+(nYCurPos+427)+",268,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+237)+","+(nYCurPos+427)+",268,25,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+237)+","+(nYCurPos+427)+",268,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+237)+","+(nYCurPos+427)+",268,25,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+452)+",74,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+452)+",74,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+452)+",74,25,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+452)+",74,1,11,0/,돋움체,RGB[0,0,0], , , ,NONE,25,1)");
		out.println(sheet10_A22+"\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+452)+",89,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+452)+",89,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+452)+",89,25,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos+163)+","+(nYCurPos+452)+",74,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+163)+","+(nYCurPos+452)+",74,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+163)+","+(nYCurPos+452)+",74,25,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+163)+","+(nYCurPos+452)+",74,1,11,0/,돋움체,RGB[0,0,0], , , ,NONE,25,1)");
		out.println(sheet10_C22+"\r");
		out.println("^CELLLINE("+(nXCurPos+237)+","+(nYCurPos+452)+",268,25,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+237)+","+(nYCurPos+452)+",268,25,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+237)+","+(nYCurPos+452)+",268,25,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+477)+",74,14,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+477)+",74,14,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+477)+",89,14,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+163)+","+(nYCurPos+477)+",74,14,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+237)+","+(nYCurPos+477)+",89,14,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+477)+",90,14,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+477)+",89,14,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+477)+",89,14,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+491)+",74,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+491)+",431,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+74)+","+(nYCurPos+491)+",431,0,11,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_B24+"\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+511)+",74,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+511)+",89,20,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+531)+",74,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+531)+",431,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+74)+","+(nYCurPos+531)+",431,0,11,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_B26+"\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+551)+",74,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+551)+",431,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+74)+","+(nYCurPos+551)+",431,0,11,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_B27+"\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+571)+",74,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+571)+",431,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+74)+","+(nYCurPos+571)+",431,0,11,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_B28+"\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+591)+",74,10,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+591)+",74,10,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+74)+","+(nYCurPos+591)+",89,10,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+163)+","+(nYCurPos+591)+",74,10,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+237)+","+(nYCurPos+591)+",89,10,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+326)+","+(nYCurPos+591)+",90,10,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+591)+",89,10,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+591)+",89,10,0,RGB[0,0,0],3)\r");
	}

	//파라미터 설정 함수
	private void setParam(){
		p_grcode_Param=toKor(GetB(request.getParameter("p_grcode")));
		p_grseq_Param=toKor(GetB(request.getParameter("p_grseq")));
		p_dept_Param=toKor(GetB(request.getParameter("p_dept")));
	}

	//-----Connection 및 Statement 객체 생성 함수-----
	private void createConnAndStateObject() throws Exception{
		//DUNET Connection 객체 생성
		Class.forName("oracle.jdbc.driver.OracleDriver");
		conn_DUNET = DriverManager.getConnection("jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.12.203)(PORT=1521))(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.12.204)(PORT=1521))(FAILOVER=on)(LOAD_BALANCE=off))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=LOTI)))","cmlms","fhxl21");stat_GR_INFO=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
	}

	//-----SQL문 변수 초기화 함수-----
	private void initSQLConst(){
		sql_GR_INFO = "SELECT '교육수강기간 : ' || TO_CHAR(STARTED,'YYYY') || '년 ' || ";
		sql_GR_INFO = sql_GR_INFO + "      TO_CHAR(STARTED,'MM')   || '월 ' || ";
		sql_GR_INFO = sql_GR_INFO + "      TO_CHAR(STARTED,'DD')   || '일 ~  ' || ";
		sql_GR_INFO = sql_GR_INFO + "      TO_CHAR(ENDDATE,'YYYY') || '년 ' || ";
		sql_GR_INFO = sql_GR_INFO + "      TO_CHAR(ENDDATE,'MM') || '월 ' || ";
		sql_GR_INFO = sql_GR_INFO + "      TO_CHAR(ENDDATE,'DD') || '일' AS GR_INFO ";
		sql_GR_INFO = sql_GR_INFO + "  FROM CMTB_GRSEQ  ";
		sql_GR_INFO = sql_GR_INFO + " WHERE GRCODE = '" + p_grcode_Param + "' ";
		sql_GR_INFO = sql_GR_INFO + " AND GRSEQ    = '" + p_grseq_Param + "' ";
		sql_GR_INFO = sql_GR_INFO + " AND DEPT = '" + p_dept_Param + "'";
	}

	//-----ResultSet 객체에서 필드 값 설정 함수-----
	//ResultSet GR_INFO 객체에서 필드 값 설정 함수
	private void setFieldVariableFromGR_INFO() throws Exception{
		GR_INFO_GR_INFO=GetB(GR_INFO.getString(1));
	}

	//ResultSet GR_INFO 객체의 필드 값 초기화 함수
	private void setFieldInitFromGR_INFO(){
		GR_INFO_GR_INFO="";
	}

	//-----고정 데이터 초기화 함수-----
	private void initConstVarient(){
		sheet10_A1="수강 신청서";
		sheet10_A5="성명";
		sheet10_C5="주민번호";
		sheet10_E5="접수번호";
		sheet10_A6="주소";
		sheet10_A7="연령";
		sheet10_C7="성별";
		sheet10_E7="전화번호(직장/자택)";
		sheet10_A8="기혼여부";
		sheet10_C8="결혼기념일";
		sheet10_E8="직업";
		sheet10_A9="이메일주소";
		sheet10_E9="학력";
		sheet10_A10="과정명";
		sheet10_A12="위와 같이 교육 수강 신청합니다.";
		sheet10_C13="                                 년   월   일";
		sheet10_D14="                신청인 ";
		sheet10_A19="접 수 증";
		sheet10_A21="성명";
		sheet10_C21="주민번호";
		sheet10_A22="신청과정";
		sheet10_C22="연령";
		sheet10_B24="교육개강은      년   월   일 입니다.       교육장소 :";
		sheet10_B26="위와 같이 접수 하였음을 확인 합니다.";
		sheet10_B27="                                           교육 수강 문의처 :";
		sheet10_B28="                                      년   월   일         직인";
	}

	//-----페이지 스킵 관련 함수-----
	//페이지 스킵시 호출되는 함수로서 페이지 번호를 증가시키고 페이지 지시문 출력 그리고 Y좌표 초기화
	//매개변수에 따라 해당 쉬트의 배경 이미지, 머리글 밴드, 바닥글 밴드 함수 호출
	private void pageSkip(int nIndex) throws Exception{
		nXCurPos=nXStartPos;
		nYCurPos=nYStartPos;
		nPageNum=nPageNum+1;
		out.print("-- " + nPageNum + " PAGE --\r");

		switch(nIndex){
			case 10:		//SHEET=Sheet=1   FRAME=0에서 페이지 스킵시
			break;
		}
	}

	//페이지 스킵이 필요한지 검사하는 함수
	private boolean isPageSkip(int nTestPos){
		if(nTestPos>nYEndPos){
			return true;
		}else{
			return false;
		}
	}

	//-----공통 함수 선언-----
	private void getScriptHeader(String paper, String size, String value, String orient) throws Exception{
		out.print("--SCRIPT_START31--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void getSheetPaperInfo(String paper, String size, String value, String orient) throws Exception{
		out.print("--PAPER_INFO--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void initSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bFirstFrame){
		if(bFirstFrame){
			nStartPage=nMaxPage+1;
			nYLastPos=0;
		}
		nPageNum=nStartPage;
		nYStartPos=constStartY;
		nYEndPos=constEndY;
		nYCurPos=nYStartPos;
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
	}

	private void initChildSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bIsMultiFrame, boolean bIsFirstFrame){
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
		nYStartPos=constStartY;
		nYEndPos=constEndY;

		if(bIsMultiFrame){
			if(bIsFirstFrame){
				nStartPage=nPageNum;
				nYSavePos=nYCurPos;
				nYLastPos=0;
			}else{
				nPageNum=nStartPage;
				nYCurPos=nYSavePos;
			}
		}else{
			nStartPage=nPageNum;
		}
	}

	//Empty Row만으로 구성되어 출력 위치를 조정하기 위한 VoidBand 함수
	//nRangePos - VoidBand의 출력 영역
	//nIndex - PageSkip 함수 호출시 전달할 쉬트 인덱스
	private boolean voidBandNoneData(int nRangePos, int nIndex) throws Exception{
		int nTestPos;
		nTestPos=nYCurPos+nRangePos;
		if(isPageSkip(nTestPos)){
			pageSkip(nIndex);
			return true;
		}else{
			nYCurPos=nYCurPos+nRangePos;
			return false;
		}
	}

	private String Get0(String str){
		if(str==null){
			return "0";
		}else{
			if(str.equals("")){
				return "0";
			}else{
				return str;
			}
		}
	}

	private String GetB(String str){
		if(str==null){
			return "";
		}else{
			return str;
		}
	}

	private double SUM(double accVal, double tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(double accVal, long tmpVal){
		return(accVal+(double)tmpVal);
	}

	private long SUM(long accVal, long tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(long accVal, double tmpVal){
		return((double)accVal+tmpVal);
	}

	private long COUNT(long accuCNT){
		return ++accuCNT;
	}

	private long MIN(long maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(long maxV, double maxTempV){
		if((double)maxV<=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, double maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}
	private long MAX(long maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(long maxV, double maxTempV){
		if((double)maxV>=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, double maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}

	private double AVG(double sumVal, long cntVal){
		return(sumVal/cntVal);
	}

	private double AVG(long sumVal, long cntVal){
		return((double)sumVal/(double)cntVal);
	}

	private String aiReplace(String strAll, String strSrc, String strDest) {
		while(strAll.indexOf(strSrc) != -1) {
			strAll = strAll.substring(0, strAll.indexOf(strSrc)) + strDest + strAll.substring(strAll.indexOf(strSrc) + strSrc.length(), strAll.length());
		}
		return strAll;
	}

	private String toDate() {
		SimpleDateFormat dateFormat=new SimpleDateFormat("'#SERVERDATE#'yyyy/MM/dd/HH/mm/ss");
		java.util.Date currentDate = new java.util.Date();
		return dateFormat.format(currentDate);
	}

	final String toKor (String en){
		if(en==null){
			return "";
		}
		try{
			return new String(en.getBytes("8859_1"), "KSC5601");
		}catch(Exception e){return en;}
	}
}
%>
