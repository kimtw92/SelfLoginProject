<%
/* ### Generated by AIDesigner 3.7.1.22 ### */
%>

<%@ page language="java" import="java.sql.*,java.io.*,java.text.*" %>
<%@ page contentType="text/plain; charset=euc-kr" %>

<%
Object[] userObj = null;
ReportHandler handler = new ReportHandler(request,response,userObj);
handler.service(out);
%>

<%!
class ReportHandler{
	//공통 변수 선언
	private Object[] userObj = null;
	private int nStartPage;		//각 쉬트별 시작 페이지 저장
	private int nMaxPage;		//한 쉬트가 실행된 후 생성된 최대 페이지 번호 저장
	private int nPageNum;		//현재 페이지 번호
	private int nYStartPos;		//쉬트에서 Y 시작 좌표
	private int nYEndPos;		//쉬트에서 Y 끝 좌표
	private int nYCurPos;		//현재 Y 좌표
	private int nYSavePos;		//연결된 멀티 프레임 쉬트에서 시작 Y 좌표 저장
	private int nYLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 Y 좌표 저장
	private int nXStartPos;		//쉬트에서 X 시작 좌표
	private int nXEndPos;		//쉬트에서 X 끝 좌표
	private int nXCurPos;		//현재 X 좌표
	private int nXSavePos;		//연결된 멀티 프레임 쉬트에서 시작 X 좌표 저장
	private int  nXLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 X 좌표 저장
	private boolean bIsBeforePageSkip;		//조건 밴드에서 페이지 넘기기 여부 판단
	private int nLoopRef;		//절대 양식에서 루프 참조 변수
	private String isEmpty="";		//빈 문자열 비교에 사용

	private HttpServletRequest request;
	private HttpServletResponse response;
	private JspWriter out;

	//-----데이터 변수 선언-----
	String sheet10_A1;
	String sheet10_A2;
	String sheet10_A4;
	String sheet10_A10;
	String sheet10_A5;
	String sheet10_B5;
	String sheet10_C5;
	String sheet10_D5;
	String sheet10_M5;
	String sheet10_N5;
	String sheet10_O5;
	String sheet10_D6;
	String sheet10_E6;
	String sheet10_F6;
	String sheet10_G6;
	String sheet10_H6;
	String sheet10_I6;
	String sheet10_J6;
	String sheet10_K6;
	String sheet10_L6;
	String sheet10_A7;
	double sheet10_C7;
	double sheet10_D7;
	double sheet10_E7;
	double sheet10_F7;
	double sheet10_G7;
	double sheet10_H7;
	double sheet10_I7;
	double sheet10_J7;
	double sheet10_K7;
	double sheet10_L7;
	double sheet10_M7;
	double sheet10_N7;
	double sheet10_O7;
	String sheet10_A8;
	String sheet10_B8;
	double sheet10_C8;
	double sheet10_D8;
	double sheet10_E8;
	double sheet10_F8;
	double sheet10_G8;
	double sheet10_H8;
	double sheet10_I8;
	double sheet10_J8;
	double sheet10_K8;
	double sheet10_L8;
	double sheet10_M8;
	double sheet10_N8;
	double sheet10_O8;
	String sheet10_B9;
	double sheet10_C9;
	double sheet10_D9;
	double sheet10_E9;
	double sheet10_F9;
	double sheet10_G9;
	double sheet10_H9;
	double sheet10_I9;
	double sheet10_J9;
	double sheet10_K9;
	double sheet10_L9;
	double sheet10_M9;
	double sheet10_N9;
	double sheet10_O9;
	String AI_CHART_OBJ6;

	//-----Connection, Statement, ResultSet 객체 선언-----
	private Connection conn_DUNET;		//DSN DUNET Connection 객체
	private java.sql.Statement stat_totAvg;		//ResultSet totAvg 객체를 생성하기 위한 Statement 객체
	private ResultSet totAvg;		//ResultSet totAvg 객체
	private java.sql.Statement stat_detail;		//ResultSet detail 객체를 생성하기 위한 Statement 객체
	private ResultSet detail;		//ResultSet detail 객체
	private java.sql.Statement stat_master;		//ResultSet master 객체를 생성하기 위한 Statement 객체
	private ResultSet master;		//ResultSet master 객체

	//-----SQL 변수 선언-----
	private String sql_totAvg;		//ResultSet totAvg 객체를 생성하기 위한 쿼리문 저장
	private String sql_detail;		//ResultSet detail 객체를 생성하기 위한 쿼리문 저장
	private String sql_master;		//ResultSet master 객체를 생성하기 위한 쿼리문 저장

	//-----쿼리 필드 변수 선언-----
	//ResultSet totAvg 객체에서 필드 값을 받는 쿼리 필드 변수
	private double totAvg_TOT_TOTNO;
	private double totAvg_TOT_SUBCNT;
	private double totAvg_TOT_AVLCOUNT;
	private double totAvg_TOT_SILCOUNT;
	private double totAvg_TOT_BUNCOUNT;
	private double totAvg_TOT_AVREPORT;
	private double totAvg_TOT_AVCOURSE;
	private double totAvg_TOT_MISCOUNT;
	private double totAvg_TOT_BONCOUNT;
	private double totAvg_TOT_ADDPOINT;
	private double totAvg_TOT_MAXPOINT;
	private double totAvg_TOT_MINPOINT;
	private double totAvg_TOT_OLDPOINT;

	//ResultSet detail 객체에서 필드 값을 받는 쿼리 필드 변수
	private String detail_GRCODENM;
	private double detail_TOTNO;
	private double detail_SUBCNT;
	private double detail_AVLCOUNT;
	private double detail_SILCOUNT;
	private double detail_BUNCOUNT;
	private double detail_AVREPORT;
	private double detail_AVCOURSE;
	private double detail_MISCOUNT;
	private double detail_BONCOUNT;
	private double detail_ADDPOINT;
	private double detail_MAXPOINT;
	private double detail_MINPOINT;
	private double detail_OLDPOINT;
	private double detail_SAVLCOUNT;
	private double detail_PACCEPT;
	private String detail_GUBUN;
	private String detail_GUBUNNM;
	private String detail_GRCODE;

	//ResultSet master 객체에서 필드 값을 받는 쿼리 필드 변수
	private String master_GUBUNNM;
	private String master_GUBUN;
	private double master_TOT_TOTNO;
	private double master_TOT_SUBCNT;
	private double master_학습평가;
	private double master_극기훈련;
	private double master_분임발표;
	private double master_과제연구;
	private double master_근태;
	private double master_역활극;
	private double master_봉사활동;
	private double master_가점;
	private double master_최고;
	private double master_최하;
	private double master_전년도평균;

	//파라미터 변수 선언
	String p_startyear_Param;

	//ReportHandler 생성자 함수
	ReportHandler(HttpServletRequest request,HttpServletResponse response,Object[] userObj){
		this.request=request;
		this.response=response;
		this.userObj=userObj;
	}

	//ReportHandler 서비스 함수
	void service(JspWriter out) throws Exception{
		try{    //try 구문
			this.out=out;
			nMaxPage=0;    //nMaxPage 초기화

			//스크립트 헤더 함수 호출
			getScriptHeader("A4", "2100x2970", "9", "HORIZONTAL");

			//파라미터 설정 함수 호출
			setParam();

			//고정 데이터 초기화 함수 호출
			initConstVarient();

			//Connection 및 Statement 객체 생성 함수 호출
			createConnAndStateObject();

			//쿼리문 초기화 함수 호출
			initSQLConst();

			//쉬트 함수 호출
			//SHEET=Sheet1   FRAME=0 함수 호출
			executeSheet10();

			//---------------스크립트 종료---------------
			out.print("--SCRIPT_END--\r");
		}catch(Exception e){    //catch 구문
			out.print(e);
			out.print("AI!REPORT JSP ERROR!!!!\r");
		}finally{    //finally 구문
			try{    //finally try 구문
				//DataSet Close
				if(master!=null) master.close();
				if(stat_master!=null) stat_master.close();
				if(stat_detail!=null) stat_detail.close();
				if(totAvg!=null) totAvg.close();
				if(stat_totAvg!=null) stat_totAvg.close();
				if(conn_DUNET!=null) conn_DUNET.close();
			}catch(Exception e){    //finally catch 구문
			}    //end finally try
		}    //end try
	}

	//-----쉬트 함수-----
	//-----SHEET=Sheet1   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet10( ) throws Exception{
		//쉬트 초기화 함수 호출
		initSheetVariant(45, 149, 802, 531, true);

		//시작 페이지 번호 출력
		out.print("-- " + nPageNum + " PAGE --\r");

		//밴드 함수 호출
		getScriptFromtitle(true, true);    //머리글 밴드 호출
		getScriptFromfoot(true, true);    //바닥글 밴드 호출
		getScriptFrommaster(true);    //반복 밴드 호출
		getScriptFromVoidBand102(true, true);    //Void 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기
	}

	//-----밴드 함수-----
	//----title HeaderBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : title
	//----밴드 종류 : 머리글 밴드
	//----bIsFrist : 쉬트 함수에서 최초로 호출될 때 true, 페이지 스킵 함수에서 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromtitle(boolean bIsFirst, boolean bIsPrint) throws Exception{
		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 함수 호출
			writeScripttitle();
		}   //end if(bIsPrint)
	}

	//----foot FooterBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : foot
	//----밴드 종류 : 바닥글 밴드
	//----bIsFrist : 쉬트 함수에서 최초로 호출될 때 true, 페이지 스킵 함수에서 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromfoot(boolean bIsFirst, boolean bIsPrint) throws Exception{
		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 함수 호출
			writeScriptfoot();
		}   //end if(bIsPrint)
	}

	//----header RepeatHeader Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : header
	//----밴드 종류 : 반복 헤더
	//----bIsFrist : 반복 밴드 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromheader(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=60;	//밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//DataSet 객체 생성
			//ResultSet totAvg 객체의 생성
			if(totAvg==null){
				totAvg = stat_totAvg.executeQuery(sql_totAvg);
			}else{
				totAvg.beforeFirst();
			}

			//데이터 fetch
			if(totAvg.next()){
				setFieldVariableFromtotAvg();	//ResultSet totAvg에서 필드 값 설정
			}else{
				setFieldInitFromtotAvg();	//ResultSet totAvg의 필드 값 초기화
			}

			//데이터 변수 초기화
			sheet10_C7=0;
			sheet10_D7=0;
			sheet10_E7=0;
			sheet10_F7=0;
			sheet10_G7=0;
			sheet10_H7=0;
			sheet10_I7=0;
			sheet10_J7=0;
			sheet10_K7=0;
			sheet10_L7=0;
			sheet10_M7=0;
			sheet10_N7=0;
			sheet10_O7=0;

			//데이터 변수 할당
			sheet10_C7=totAvg_TOT_TOTNO;
			sheet10_D7=totAvg_TOT_SUBCNT;
			sheet10_E7=totAvg_TOT_AVLCOUNT;
			sheet10_F7=totAvg_TOT_SILCOUNT;
			sheet10_G7=totAvg_TOT_BUNCOUNT;
			sheet10_H7=totAvg_TOT_AVREPORT;
			sheet10_I7=totAvg_TOT_AVCOURSE;
			sheet10_J7=totAvg_TOT_MISCOUNT;
			sheet10_K7=totAvg_TOT_BONCOUNT;
			sheet10_L7=totAvg_TOT_ADDPOINT;
			sheet10_M7=totAvg_TOT_MAXPOINT;
			sheet10_N7=totAvg_TOT_MINPOINT;
			sheet10_O7=totAvg_TOT_OLDPOINT;
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptheader();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----detail RepeatBand Start-----
	//-----소속 쉬트 : SHEET=Sheet1   FRAME=Frame0
	//-----밴드 이름 : detail
	//-----밴드 종류 : 반복 밴드
	//-----bIsPrint : 감추기 속성 설정 여부 true면 출력, false면 스크립트를 생성하지 않음
	private void getScriptFromdetail(boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;    //밴드 출력 높이
		boolean bIsFirst=true;

		//데이터 변수 초기화
		sheet10_B9="";
		sheet10_C9=0;
		sheet10_D9=0;
		sheet10_E9=0;
		sheet10_F9=0;
		sheet10_G9=0;
		sheet10_H9=0;
		sheet10_I9=0;
		sheet10_J9=0;
		sheet10_K9=0;
		sheet10_L9=0;
		sheet10_M9=0;
		sheet10_N9=0;
		sheet10_O9=0;

		//DataSet 객체 생성
		//ResultSet detail 객체의 생성
		initSQLdetailVarient();
		detail = stat_detail.executeQuery(sql_detail);

		while(detail.next()){   //자동으로 생성되는 반복 밴드의 루프문
			//데이터 fetch
			setFieldVariableFromdetail();	//RecordSet detail에서 필드 값 설정

			if(bIsFirst){   //밴드 호출 후 루프 내에서 한번 만 실행되는 코드
			}   //end if(bIsFirst)

			//데이터 변수 할당
			sheet10_B9=detail_GRCODENM;
			sheet10_C9=detail_TOTNO;
			sheet10_D9=detail_SUBCNT;
			sheet10_E9=detail_AVLCOUNT;
			sheet10_F9=detail_SILCOUNT;
			sheet10_G9=detail_BUNCOUNT;
			sheet10_H9=detail_AVREPORT;
			sheet10_I9=detail_AVCOURSE;
			sheet10_J9=detail_MISCOUNT;
			sheet10_K9=detail_BONCOUNT;
			sheet10_L9=detail_ADDPOINT;
			sheet10_M9=detail_MAXPOINT;
			sheet10_N9=detail_MINPOINT;
			sheet10_O9=detail_OLDPOINT;

			//AI 스크립트 출력
			if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
				if(isPageSkip(nYCurPos+nBandHeight)){   //스크립트 출력 영역 검사
					//페이지 스킵 함수 호출
					pageSkip(10);

					//반복 헤더 및 부모 반복단위 호출
					getScriptFromheader(false, true);	//반복 헤더 호출
				}   //end if(page skip test)

				//스크립트 출력 함수 호출
				writeScriptdetail();

				//다음 출력 좌표 설정
				nYCurPos=nYCurPos+nBandHeight;
			}   //end if(bIsPrint)

			//bIsFirst 및 출력 라인 설정
			bIsFirst=false;
		}   //while end

		//DataSet Close
		if(detail!=null) detail.close();
	}

	//-----master RepeatBand Start-----
	//-----소속 쉬트 : SHEET=Sheet1   FRAME=Frame0
	//-----밴드 이름 : master
	//-----밴드 종류 : 반복 밴드
	//-----bIsPrint : 감추기 속성 설정 여부 true면 출력, false면 스크립트를 생성하지 않음
	private void getScriptFrommaster(boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;    //밴드 출력 높이
		boolean bIsFirst=true;

		//데이터 변수 초기화
		sheet10_A8="";
		sheet10_C8=0;
		sheet10_D8=0;
		sheet10_E8=0;
		sheet10_F8=0;
		sheet10_G8=0;
		sheet10_H8=0;
		sheet10_I8=0;
		sheet10_J8=0;
		sheet10_K8=0;
		sheet10_L8=0;
		sheet10_M8=0;
		sheet10_N8=0;
		sheet10_O8=0;

		//DataSet 객체 생성
		//ResultSet master 객체의 생성
		if(master==null){
			master = stat_master.executeQuery(sql_master);
		}else{
			master.beforeFirst();
		}

		while(master.next()){   //자동으로 생성되는 반복 밴드의 루프문
			//데이터 fetch
			setFieldVariableFrommaster();	//RecordSet master에서 필드 값 설정

			if(bIsFirst){   //밴드 호출 후 루프 내에서 한번 만 실행되는 코드
				//반복 헤더 호출 및 조건 플래그 초기화
				getScriptFromheader(bIsFirst, true);	//반복 헤더 호출
			}   //end if(bIsFirst)

			//데이터 변수 할당
			sheet10_A8=master_GUBUNNM;
			sheet10_C8=master_TOT_TOTNO;
			sheet10_D8=master_TOT_SUBCNT;
			sheet10_E8=master_학습평가;
			sheet10_F8=master_극기훈련;
			sheet10_G8=master_분임발표;
			sheet10_H8=master_과제연구;
			sheet10_I8=master_근태;
			sheet10_J8=master_역활극;
			sheet10_K8=master_봉사활동;
			sheet10_L8=master_가점;
			sheet10_M8=master_최고;
			sheet10_N8=master_최하;
			sheet10_O8=master_전년도평균;

			//AI 스크립트 출력
			if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
				if(isPageSkip(nYCurPos+nBandHeight)){   //스크립트 출력 영역 검사
					//페이지 스킵 함수 호출
					pageSkip(10);

					//반복 헤더 및 부모 반복단위 호출
					getScriptFromheader(false, true);	//반복 헤더 호출
				}   //end if(page skip test)

				//스크립트 출력 함수 호출
				writeScriptmaster();

				//다음 출력 좌표 설정
				nYCurPos=nYCurPos+nBandHeight;
			}   //end if(bIsPrint)

			//루프 내부 자식 밴드 호출
			getScriptFromdetail(true);

			//bIsFirst 및 출력 라인 설정
			bIsFirst=false;
		}   //while end
	}

	//----VoidBand102 VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : VoidBand102
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFromVoidBand102(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=820;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//데이터 변수 초기화
			AI_CHART_OBJ6="";

			//데이터 변수 할당
			getChartDataAI_CHART_OBJ6( );
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptVoidBand102();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----스크립트 출력 함수-----
	//----title 스크립트 문 출력 함수----
	private void writeScripttitle( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT(45,41,757,0,20,0/,돋움체,RGB[0,0,0],BOLD, , ,NONE,30,1)");
		out.println(sheet10_A1+"\r");
		out.print("^PRINT(45,71,757,0,18,0/,돋움체,RGB[0,0,0],BOLD, , ,NONE,30,1)");
		out.println(sheet10_A2+"\r");
		out.print("^PRINT(45,111,757,0,16,0/,돋움체,RGB[0,0,0],BOLD, , ,NONE,38,1)");
		out.println(sheet10_A4+"\r");
	}

	//----foot 스크립트 문 출력 함수----
	private void writeScriptfoot( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT(45,531,757,1,11,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A10+"\r");
	}

	//----header 스크립트 문 출력 함수----
	private void writeScriptheader( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos)+",72,40,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,40,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",72,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,40,1)");
		out.println(sheet10_A5+"\r");
		out.println("^CELLBG("+(nXCurPos+72)+","+(nYCurPos)+",113,40,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",113,40,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",113,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",113,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",113,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+72)+","+(nYCurPos)+",113,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,40,1)");
		out.println(sheet10_B5+"\r");
		out.println("^CELLBG("+(nXCurPos+185)+","+(nYCurPos)+",47,40,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+185)+","+(nYCurPos)+",47,40,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+185)+","+(nYCurPos)+",47,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+185)+","+(nYCurPos)+",47,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+185)+","+(nYCurPos)+",47,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+185)+","+(nYCurPos)+",47,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,40,1)");
		out.println(sheet10_C5+"\r");
		out.println("^CELLBG("+(nXCurPos+232)+","+(nYCurPos)+",405,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+232)+","+(nYCurPos)+",405,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+232)+","+(nYCurPos)+",405,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+232)+","+(nYCurPos)+",405,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+232)+","+(nYCurPos)+",405,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+232)+","+(nYCurPos)+",405,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_D5+"\r");
		out.println("^CELLBG("+(nXCurPos+637)+","+(nYCurPos)+",40,40,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+637)+","+(nYCurPos)+",40,40,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+637)+","+(nYCurPos)+",40,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+637)+","+(nYCurPos)+",40,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+637)+","+(nYCurPos)+",40,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+637)+","+(nYCurPos)+",40,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,40,1)");
		out.println(sheet10_M5+"\r");
		out.println("^CELLBG("+(nXCurPos+677)+","+(nYCurPos)+",40,40,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+677)+","+(nYCurPos)+",40,40,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+677)+","+(nYCurPos)+",40,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+677)+","+(nYCurPos)+",40,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+677)+","+(nYCurPos)+",40,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+677)+","+(nYCurPos)+",40,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,40,1)");
		out.println(sheet10_N5+"\r");
		out.println("^CELLBG("+(nXCurPos+717)+","+(nYCurPos)+",40,40,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+717)+","+(nYCurPos)+",40,40,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+717)+","+(nYCurPos)+",40,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+717)+","+(nYCurPos)+",40,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+717)+","+(nYCurPos)+",40,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+717)+","+(nYCurPos)+",40,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,40,1)");
		out.println(sheet10_O5+"\r");
		out.println("^CELLBG("+(nXCurPos+232)+","+(nYCurPos+20)+",45,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+232)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+232)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+232)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+232)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+232)+","+(nYCurPos+20)+",45,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_D6+"\r");
		out.println("^CELLBG("+(nXCurPos+277)+","+(nYCurPos+20)+",45,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+277)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+277)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+277)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+277)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+277)+","+(nYCurPos+20)+",45,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E6+"\r");
		out.println("^CELLBG("+(nXCurPos+322)+","+(nYCurPos+20)+",45,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+322)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+322)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+322)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+322)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+322)+","+(nYCurPos+20)+",45,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F6+"\r");
		out.println("^CELLBG("+(nXCurPos+367)+","+(nYCurPos+20)+",45,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+367)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+367)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+367)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+367)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+367)+","+(nYCurPos+20)+",45,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_G6+"\r");
		out.println("^CELLBG("+(nXCurPos+412)+","+(nYCurPos+20)+",45,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+412)+","+(nYCurPos+20)+",45,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_H6+"\r");
		out.println("^CELLBG("+(nXCurPos+457)+","+(nYCurPos+20)+",45,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+457)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+457)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+457)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+457)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+457)+","+(nYCurPos+20)+",45,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_I6+"\r");
		out.println("^CELLBG("+(nXCurPos+502)+","+(nYCurPos+20)+",45,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+502)+","+(nYCurPos+20)+",45,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_J6+"\r");
		out.println("^CELLBG("+(nXCurPos+547)+","+(nYCurPos+20)+",45,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+547)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+547)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+547)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+547)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+547)+","+(nYCurPos+20)+",45,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_K6+"\r");
		out.println("^CELLBG("+(nXCurPos+592)+","+(nYCurPos+20)+",45,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+592)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+592)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+592)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+592)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+592)+","+(nYCurPos+20)+",45,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_L6+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+40)+",185,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",185,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",185,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",185,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",185,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+40)+",185,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A7+"\r");
		out.println("^CELLBG("+(nXCurPos+185)+","+(nYCurPos+40)+",47,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+185)+","+(nYCurPos+40)+",47,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+185)+","+(nYCurPos+40)+",47,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+185)+","+(nYCurPos+40)+",47,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+185)+","+(nYCurPos+40)+",47,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+185)+","+(nYCurPos+40)+",47,2,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_C7+"\r");
		out.println("^CELLBG("+(nXCurPos+232)+","+(nYCurPos+40)+",45,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+232)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+232)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+232)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+232)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+232)+","+(nYCurPos+40)+",45,2,10,1/0/3,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_D7+"\r");
		out.println("^CELLBG("+(nXCurPos+277)+","+(nYCurPos+40)+",45,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+277)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+277)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+277)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+277)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+277)+","+(nYCurPos+40)+",45,2,10,1/0/3,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E7+"\r");
		out.println("^CELLBG("+(nXCurPos+322)+","+(nYCurPos+40)+",45,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+322)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+322)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+322)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+322)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+322)+","+(nYCurPos+40)+",45,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F7+"\r");
		out.println("^CELLBG("+(nXCurPos+367)+","+(nYCurPos+40)+",45,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+367)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+367)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+367)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+367)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+367)+","+(nYCurPos+40)+",45,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_G7+"\r");
		out.println("^CELLBG("+(nXCurPos+412)+","+(nYCurPos+40)+",45,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+412)+","+(nYCurPos+40)+",45,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_H7+"\r");
		out.println("^CELLBG("+(nXCurPos+457)+","+(nYCurPos+40)+",45,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+457)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+457)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+457)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+457)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+457)+","+(nYCurPos+40)+",45,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_I7+"\r");
		out.println("^CELLBG("+(nXCurPos+502)+","+(nYCurPos+40)+",45,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+502)+","+(nYCurPos+40)+",45,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_J7+"\r");
		out.println("^CELLBG("+(nXCurPos+547)+","+(nYCurPos+40)+",45,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+547)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+547)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+547)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+547)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+547)+","+(nYCurPos+40)+",45,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_K7+"\r");
		out.println("^CELLBG("+(nXCurPos+592)+","+(nYCurPos+40)+",45,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+592)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+592)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+592)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+592)+","+(nYCurPos+40)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+592)+","+(nYCurPos+40)+",45,2,10,1/0/3,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_L7+"\r");
		out.println("^CELLBG("+(nXCurPos+637)+","+(nYCurPos+40)+",40,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+637)+","+(nYCurPos+40)+",40,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+637)+","+(nYCurPos+40)+",40,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+637)+","+(nYCurPos+40)+",40,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+637)+","+(nYCurPos+40)+",40,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+637)+","+(nYCurPos+40)+",40,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_M7+"\r");
		out.println("^CELLBG("+(nXCurPos+677)+","+(nYCurPos+40)+",40,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+677)+","+(nYCurPos+40)+",40,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+677)+","+(nYCurPos+40)+",40,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+677)+","+(nYCurPos+40)+",40,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+677)+","+(nYCurPos+40)+",40,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+677)+","+(nYCurPos+40)+",40,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_N7+"\r");
		out.println("^CELLBG("+(nXCurPos+717)+","+(nYCurPos+40)+",40,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+717)+","+(nYCurPos+40)+",40,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+717)+","+(nYCurPos+40)+",40,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+717)+","+(nYCurPos+40)+",40,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+717)+","+(nYCurPos+40)+",40,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+717)+","+(nYCurPos+40)+",40,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_O7+"\r");
	}

	//----detail 스크립트 문 출력 함수----
	private void writeScriptdetail( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,20,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",113,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",113,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",113,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",113,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+72)+","+(nYCurPos)+",113,0,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_B9+"\r");
		out.println("^CELLLINE("+(nXCurPos+185)+","+(nYCurPos)+",47,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+185)+","+(nYCurPos)+",47,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+185)+","+(nYCurPos)+",47,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+185)+","+(nYCurPos)+",47,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+185)+","+(nYCurPos)+",47,2,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_C9+"\r");
		out.println("^CELLLINE("+(nXCurPos+232)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+232)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+232)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+232)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+232)+","+(nYCurPos)+",45,2,10,1/0/3,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_D9+"\r");
		out.println("^CELLLINE("+(nXCurPos+277)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+277)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+277)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+277)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+277)+","+(nYCurPos)+",45,2,10,1/0/3,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E9+"\r");
		out.println("^CELLLINE("+(nXCurPos+322)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+322)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+322)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+322)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+322)+","+(nYCurPos)+",45,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F9+"\r");
		out.println("^CELLLINE("+(nXCurPos+367)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+367)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+367)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+367)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+367)+","+(nYCurPos)+",45,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_G9+"\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+412)+","+(nYCurPos)+",45,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_H9+"\r");
		out.println("^CELLLINE("+(nXCurPos+457)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+457)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+457)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+457)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+457)+","+(nYCurPos)+",45,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_I9+"\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+502)+","+(nYCurPos)+",45,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_J9+"\r");
		out.println("^CELLLINE("+(nXCurPos+547)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+547)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+547)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+547)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+547)+","+(nYCurPos)+",45,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_K9+"\r");
		out.println("^CELLLINE("+(nXCurPos+592)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+592)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+592)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+592)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+592)+","+(nYCurPos)+",45,2,10,1/0/3,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_L9+"\r");
		out.println("^CELLLINE("+(nXCurPos+637)+","+(nYCurPos)+",40,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+637)+","+(nYCurPos)+",40,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+637)+","+(nYCurPos)+",40,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+637)+","+(nYCurPos)+",40,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+637)+","+(nYCurPos)+",40,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_M9+"\r");
		out.println("^CELLLINE("+(nXCurPos+677)+","+(nYCurPos)+",40,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+677)+","+(nYCurPos)+",40,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+677)+","+(nYCurPos)+",40,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+677)+","+(nYCurPos)+",40,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+677)+","+(nYCurPos)+",40,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_N9+"\r");
		out.println("^CELLLINE("+(nXCurPos+717)+","+(nYCurPos)+",40,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+717)+","+(nYCurPos)+",40,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+717)+","+(nYCurPos)+",40,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+717)+","+(nYCurPos)+",40,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+717)+","+(nYCurPos)+",40,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_O9+"\r");
	}

	//----master 스크립트 문 출력 함수----
	private void writeScriptmaster( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos)+",72,20,1,RGB[234,232,227],RGB[234,232,227],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",72,0,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A8+"\r");
		out.println("^CELLBG("+(nXCurPos+72)+","+(nYCurPos)+",113,20,1,RGB[234,232,227],RGB[234,232,227],0)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",113,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",113,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",113,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",113,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+72)+","+(nYCurPos)+",113,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_B8+"\r");
		out.println("^CELLBG("+(nXCurPos+185)+","+(nYCurPos)+",47,20,1,RGB[234,232,227],RGB[234,232,227],0)\r");
		out.println("^CELLLINE("+(nXCurPos+185)+","+(nYCurPos)+",47,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+185)+","+(nYCurPos)+",47,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+185)+","+(nYCurPos)+",47,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+185)+","+(nYCurPos)+",47,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+185)+","+(nYCurPos)+",47,2,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_C8+"\r");
		out.println("^CELLBG("+(nXCurPos+232)+","+(nYCurPos)+",45,20,1,RGB[234,232,227],RGB[234,232,227],0)\r");
		out.println("^CELLLINE("+(nXCurPos+232)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+232)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+232)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+232)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+232)+","+(nYCurPos)+",45,2,10,1/0/3,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_D8+"\r");
		out.println("^CELLBG("+(nXCurPos+277)+","+(nYCurPos)+",45,20,1,RGB[234,232,227],RGB[234,232,227],0)\r");
		out.println("^CELLLINE("+(nXCurPos+277)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+277)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+277)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+277)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+277)+","+(nYCurPos)+",45,2,10,1/0/3,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E8+"\r");
		out.println("^CELLBG("+(nXCurPos+322)+","+(nYCurPos)+",45,20,1,RGB[234,232,227],RGB[234,232,227],0)\r");
		out.println("^CELLLINE("+(nXCurPos+322)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+322)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+322)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+322)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+322)+","+(nYCurPos)+",45,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F8+"\r");
		out.println("^CELLBG("+(nXCurPos+367)+","+(nYCurPos)+",45,20,1,RGB[234,232,227],RGB[234,232,227],0)\r");
		out.println("^CELLLINE("+(nXCurPos+367)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+367)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+367)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+367)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+367)+","+(nYCurPos)+",45,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_G8+"\r");
		out.println("^CELLBG("+(nXCurPos+412)+","+(nYCurPos)+",45,20,1,RGB[234,232,227],RGB[234,232,227],0)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+412)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+412)+","+(nYCurPos)+",45,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_H8+"\r");
		out.println("^CELLBG("+(nXCurPos+457)+","+(nYCurPos)+",45,20,1,RGB[234,232,227],RGB[234,232,227],0)\r");
		out.println("^CELLLINE("+(nXCurPos+457)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+457)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+457)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+457)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+457)+","+(nYCurPos)+",45,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_I8+"\r");
		out.println("^CELLBG("+(nXCurPos+502)+","+(nYCurPos)+",45,20,1,RGB[234,232,227],RGB[234,232,227],0)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+502)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+502)+","+(nYCurPos)+",45,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_J8+"\r");
		out.println("^CELLBG("+(nXCurPos+547)+","+(nYCurPos)+",45,20,1,RGB[234,232,227],RGB[234,232,227],0)\r");
		out.println("^CELLLINE("+(nXCurPos+547)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+547)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+547)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+547)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+547)+","+(nYCurPos)+",45,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_K8+"\r");
		out.println("^CELLBG("+(nXCurPos+592)+","+(nYCurPos)+",45,20,1,RGB[234,232,227],RGB[234,232,227],0)\r");
		out.println("^CELLLINE("+(nXCurPos+592)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+592)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+592)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+592)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+592)+","+(nYCurPos)+",45,2,10,1/0/3,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_L8+"\r");
		out.println("^CELLBG("+(nXCurPos+637)+","+(nYCurPos)+",40,20,1,RGB[234,232,227],RGB[234,232,227],0)\r");
		out.println("^CELLLINE("+(nXCurPos+637)+","+(nYCurPos)+",40,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+637)+","+(nYCurPos)+",40,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+637)+","+(nYCurPos)+",40,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+637)+","+(nYCurPos)+",40,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+637)+","+(nYCurPos)+",40,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_M8+"\r");
		out.println("^CELLBG("+(nXCurPos+677)+","+(nYCurPos)+",40,20,1,RGB[234,232,227],RGB[234,232,227],0)\r");
		out.println("^CELLLINE("+(nXCurPos+677)+","+(nYCurPos)+",40,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+677)+","+(nYCurPos)+",40,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+677)+","+(nYCurPos)+",40,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+677)+","+(nYCurPos)+",40,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+677)+","+(nYCurPos)+",40,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_N8+"\r");
		out.println("^CELLBG("+(nXCurPos+717)+","+(nYCurPos)+",40,20,1,RGB[234,232,227],RGB[234,232,227],0)\r");
		out.println("^CELLLINE("+(nXCurPos+717)+","+(nYCurPos)+",40,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+717)+","+(nYCurPos)+",40,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+717)+","+(nYCurPos)+",40,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+717)+","+(nYCurPos)+",40,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+717)+","+(nYCurPos)+",40,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_O8+"\r");
	}

	//----VoidBand102 스크립트 문 출력 함수----
	private void writeScriptVoidBand102( ) throws Exception{
		//스크립트문 생성
		out.println("^CHART(" + (nXCurPos+1) + "," + (nYCurPos+2) + ",755,197,report_10!000.cht)\r");
		if(!AI_CHART_OBJ6.equals(isEmpty)){
			out.print(AI_CHART_OBJ6);
			AI_CHART_OBJ6="";
		}
		out.print("--CHART_END--\r");
	}

	//파라미터 설정 함수
	private void setParam(){
		p_startyear_Param=toKor(GetB(request.getParameter("p_startyear")));
	}

	//-----Connection 및 Statement 객체 생성 함수-----
	private void createConnAndStateObject() throws Exception{
		//DUNET Connection 객체 생성
		Class.forName("oracle.jdbc.driver.OracleDriver").newInstance();
		conn_DUNET=DriverManager.getConnection("jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.12.203)(PORT=1521))(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.12.204)(PORT=1521))(FAILOVER=on)(LOAD_BALANCE=off))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=LOTI)))","inchlms","fhxl21");stat_totAvg=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_detail=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_master=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
	}

	//-----SQL문 변수 초기화 함수-----
	private void initSQLConst(){
		sql_totAvg = "SELECT sum(totno) as tot_totno ";
		sql_totAvg = sql_totAvg + "     , round(avg(subcnt),3) as tot_subcnt ";
		sql_totAvg = sql_totAvg + "     , round(avg(avlcount),3) as tot_avlcount ";
		sql_totAvg = sql_totAvg + "     , round(avg(silcount),2) as tot_silcount ";
		sql_totAvg = sql_totAvg + "     , round(avg(buncount),2) as tot_buncount ";
		sql_totAvg = sql_totAvg + "     , round(avg(avreport),2) as tot_avreport ";
		sql_totAvg = sql_totAvg + "     , round(avg(avcourse),2) as tot_avcourse ";
		sql_totAvg = sql_totAvg + "     , round(avg(miscount),2) as tot_miscount ";
		sql_totAvg = sql_totAvg + "     , round(avg(boncount),2) as tot_boncount ";
		sql_totAvg = sql_totAvg + "     , round(avg(addpoint),3) as tot_addpoint ";
		sql_totAvg = sql_totAvg + "     , max(maxpoint) as tot_maxpoint ";
		sql_totAvg = sql_totAvg + "     , min(minpoint) as tot_minpoint ";
		sql_totAvg = sql_totAvg + "     , round(avg(oldpoint),2) as tot_oldpoint ";
		sql_totAvg = sql_totAvg + "FROM ( ";
		sql_totAvg = sql_totAvg + "SELECT gubun ";
		sql_totAvg = sql_totAvg + "     , gubunnm ";
		sql_totAvg = sql_totAvg + "     , grcode ";
		sql_totAvg = sql_totAvg + "     , grcodenm ";
		sql_totAvg = sql_totAvg + "     , totno ";
		sql_totAvg = sql_totAvg + "     , (nvl(avlcount,0) + nvl(avreport,0) + nvl(avcourse,0) +  nvl(silcount, 0) + nvl(buncount, 0) + nvl(miscount, 0) + nvl(boncount, 0) + round(nvl(sumaddpoint,0)/totno,3)) subcnt ";
		sql_totAvg = sql_totAvg + "     , avlcount ";
		sql_totAvg = sql_totAvg + "     , silcount ";
		sql_totAvg = sql_totAvg + "     , buncount ";
		sql_totAvg = sql_totAvg + "     , avreport ";
		sql_totAvg = sql_totAvg + "     , avcourse ";
		sql_totAvg = sql_totAvg + "     , miscount ";
		sql_totAvg = sql_totAvg + "     , boncount ";
		sql_totAvg = sql_totAvg + "     , round(nvl(sumaddpoint,0)/totno,3) as addpoint ";
		sql_totAvg = sql_totAvg + "     , maxpoint ";
		sql_totAvg = sql_totAvg + "     , minpoint ";
		sql_totAvg = sql_totAvg + "     , (SELECT round(avg(paccept),2)   ";
		sql_totAvg = sql_totAvg + "          FROM tb_grresult  ";
		sql_totAvg = sql_totAvg + "          WHERE grcode=g.grcode  ";
		sql_totAvg = sql_totAvg + "	  AND grseq like to_char(to_number('" + p_startyear_Param + "')-1) || substr(g.grseq,5,2) ) as oldpoint ";
		sql_totAvg = sql_totAvg + "     , savlcount ";
		sql_totAvg = sql_totAvg + "     , paccept ";
		sql_totAvg = sql_totAvg + " FROM (SELECT (c.grtype || c.grsubcd) as gubun ";
		sql_totAvg = sql_totAvg + "            , (min(mc.mcode_name) || min(sc.scode_name) || '교육') as gubunnm ";
		sql_totAvg = sql_totAvg + "	    , b.grcode ";
		sql_totAvg = sql_totAvg + "	    , b.grseq ";
		sql_totAvg = sql_totAvg + "	    , min(c.grcodenm)||'('||substr(b.grseq,6,1)||')' grcodenm ";
		sql_totAvg = sql_totAvg + "	    , count(distinct b.userno) totno ";
		sql_totAvg = sql_totAvg + "	    , sum(avlcount) savlcount ";
		sql_totAvg = sql_totAvg + "	    , nvl(round(sum(decode(substr(d.subj,1,3),'SIL',0,'BUN',0,'MIS',0,'BON',0,'GUN',0,d.avlcount))/count(distinct b.userno),2),0) avlcount ";
		sql_totAvg = sql_totAvg + "	    , nvl(round(sum(decode(substr(d.subj,1,3),'SIL',0,'BUN',0,'MIS',0,'BON',0,'GUN',0,d.avreport))/count(distinct b.userno),2),0) avreport ";
		sql_totAvg = sql_totAvg + "	    , nvl(round(sum(decode(substr(d.subj,1,3),'SIL',0,'BUN',0,'MIS',0,'BON',0,d.avcourse))/count(distinct b.userno),2),0) avcourse ";
		sql_totAvg = sql_totAvg + "	    , nvl(round(sum(decode(substr(d.subj,1,3),'SIL',d.paccept,0))/count(distinct b.userno),2),0) silcount ";
		sql_totAvg = sql_totAvg + "	    , nvl(round(sum(decode(substr(d.subj,1,3),'BUN',d.paccept,0))/count(distinct b.userno),2),0) buncount ";
		sql_totAvg = sql_totAvg + "	    , nvl(round(sum(decode(substr(d.subj,1,3),'MIS',d.paccept,0))/count(distinct b.userno),2),0) miscount ";
		sql_totAvg = sql_totAvg + "	    , nvl(round(sum(decode(substr(d.subj,1,3),'BON',d.paccept,0))/count(distinct b.userno),2),0) boncount ";
		sql_totAvg = sql_totAvg + "            , (nvl(sum(b.paccept),0)/count(b.userno)) paccept, max(b.paccept) maxpoint, min(b.paccept) minpoint ";
		sql_totAvg = sql_totAvg + "	    , (SELECT sum(addpoint)  ";
		sql_totAvg = sql_totAvg + "	         FROM tb_grstumas ";
		sql_totAvg = sql_totAvg + "	       WHERE grcode=b.grcode  ";
		sql_totAvg = sql_totAvg + "	       AND grseq=b.grseq) as sumaddpoint  ";
		sql_totAvg = sql_totAvg + "         FROM tb_maincode mc, tb_subcode sc, tb_grresult b, tb_grcode c, tb_subjresult d  ";
		sql_totAvg = sql_totAvg + "	WHERE (mc.cd_gubun(+)='G'  ";
		sql_totAvg = sql_totAvg + "        AND c.grtype=mc.major_code(+))  ";
		sql_totAvg = sql_totAvg + "	AND c.grtype || c.grsubcd in ('101', '201')  ";
		sql_totAvg = sql_totAvg + "	AND (sc.cd_gubun(+)='G'  ";
		sql_totAvg = sql_totAvg + "        AND c.grtype=sc.major_code(+)  ";
		sql_totAvg = sql_totAvg + "	AND c.grsubcd=sc.minor_code(+)) ";
		sql_totAvg = sql_totAvg + "	AND  b.grcode=c.grcode  ";
		sql_totAvg = sql_totAvg + "	AND b.grcode=d.grcode  ";
		sql_totAvg = sql_totAvg + "        AND b.grseq=d.grseq  ";
		sql_totAvg = sql_totAvg + "	AND b.userno=d.userno  ";
		sql_totAvg = sql_totAvg + "	AND b.grseq like '" + p_startyear_Param + "'||'%' ";
		sql_totAvg = sql_totAvg + "GROUP BY (c.grtype || c.grsubcd),b.grcode,b.grseq ";
		sql_totAvg = sql_totAvg + ") g )";
		sql_master = "SELECT gubunnm ";
		sql_master = sql_master + "     , gubun ";
		sql_master = sql_master + "     , sum(totno) as tot_totno ";
		sql_master = sql_master + "     , round(avg(subcnt),3) as tot_subcnt ";
		sql_master = sql_master + "     , round(avg(avlcount),3) as 학습평가 ";
		sql_master = sql_master + "     , round(avg(silcount),2) as 극기훈련 ";
		sql_master = sql_master + "     , round(avg(buncount),2) as 분임발표 ";
		sql_master = sql_master + "     , round(avg(avreport),2) as 과제연구 ";
		sql_master = sql_master + "     , round(avg(avcourse),2) as 근태 ";
		sql_master = sql_master + "     , round(avg(miscount),2) as 역활극 ";
		sql_master = sql_master + "     , round(avg(boncount),2) as 봉사활동 ";
		sql_master = sql_master + "     , round(avg(addpoint),3) as 가점 ";
		sql_master = sql_master + "     , max(maxpoint) as 최고 ";
		sql_master = sql_master + "     , min(minpoint) as 최하 ";
		sql_master = sql_master + "     , round(avg(oldpoint),2) as 전년도평균 ";
		sql_master = sql_master + "FROM ( ";
		sql_master = sql_master + "SELECT gubun ";
		sql_master = sql_master + "     , gubunnm ";
		sql_master = sql_master + "     , grcode ";
		sql_master = sql_master + "     , grcodenm ";
		sql_master = sql_master + "     , totno ";
		sql_master = sql_master + "     , (nvl(avlcount,0) + nvl(avreport,0) + nvl(avcourse,0) +  nvl(silcount, 0) + nvl(buncount, 0) + nvl(miscount, 0) + nvl(boncount, 0) + round(nvl(sumaddpoint,0)/totno,3)) subcnt ";
		sql_master = sql_master + "     , avlcount ";
		sql_master = sql_master + "     , silcount ";
		sql_master = sql_master + "     , buncount ";
		sql_master = sql_master + "     , avreport ";
		sql_master = sql_master + "     , avcourse ";
		sql_master = sql_master + "     , miscount ";
		sql_master = sql_master + "     , boncount ";
		sql_master = sql_master + "     , round(nvl(sumaddpoint,0)/totno,3) as addpoint ";
		sql_master = sql_master + "     , maxpoint ";
		sql_master = sql_master + "     , minpoint ";
		sql_master = sql_master + "     , (SELECT round(avg(paccept),2)   ";
		sql_master = sql_master + "          FROM tb_grresult  ";
		sql_master = sql_master + "          WHERE grcode=g.grcode  ";
		sql_master = sql_master + "	  AND grseq like to_char(to_number('" + p_startyear_Param + "')-1) || substr(g.grseq,5,2) ) as oldpoint ";
		sql_master = sql_master + "     , savlcount ";
		sql_master = sql_master + "     , paccept ";
		sql_master = sql_master + " FROM (SELECT (c.grtype || c.grsubcd) as gubun ";
		sql_master = sql_master + "            , (min(mc.mcode_name) || min(sc.scode_name) || '교육') as gubunnm ";
		sql_master = sql_master + "	    , b.grcode ";
		sql_master = sql_master + "	    , b.grseq ";
		sql_master = sql_master + "	    , min(c.grcodenm)||'('||substr(b.grseq,6,1)||')' grcodenm ";
		sql_master = sql_master + "	    , count(distinct b.userno) totno ";
		sql_master = sql_master + "	    , sum(avlcount) savlcount ";
		sql_master = sql_master + "	    , nvl(round(sum(decode(substr(d.subj,1,3),'SIL',0,'BUN',0,'MIS',0,'BON',0,'GUN',0,d.avlcount))/count(distinct b.userno),2),0) avlcount ";
		sql_master = sql_master + "	    , nvl(round(sum(decode(substr(d.subj,1,3),'SIL',0,'BUN',0,'MIS',0,'BON',0,'GUN',0,d.avreport))/count(distinct b.userno),2),0) avreport ";
		sql_master = sql_master + "	    , nvl(round(sum(decode(substr(d.subj,1,3),'SIL',0,'BUN',0,'MIS',0,'BON',0,d.avcourse))/count(distinct b.userno),2),0) avcourse ";
		sql_master = sql_master + "	    , nvl(round(sum(decode(substr(d.subj,1,3),'SIL',d.paccept,0))/count(distinct b.userno),2),0) silcount ";
		sql_master = sql_master + "	    , nvl(round(sum(decode(substr(d.subj,1,3),'BUN',d.paccept,0))/count(distinct b.userno),2),0) buncount ";
		sql_master = sql_master + "	    , nvl(round(sum(decode(substr(d.subj,1,3),'MIS',d.paccept,0))/count(distinct b.userno),2),0) miscount ";
		sql_master = sql_master + "	    , nvl(round(sum(decode(substr(d.subj,1,3),'BON',d.paccept,0))/count(distinct b.userno),2),0) boncount ";
		sql_master = sql_master + "            , (nvl(sum(b.paccept),0)/count(b.userno)) paccept, max(b.paccept) maxpoint, min(b.paccept) minpoint ";
		sql_master = sql_master + "	    , (SELECT sum(addpoint)  ";
		sql_master = sql_master + "	         FROM tb_grstumas ";
		sql_master = sql_master + "	       WHERE grcode=b.grcode  ";
		sql_master = sql_master + "	       AND grseq=b.grseq) as sumaddpoint  ";
		sql_master = sql_master + "         FROM tb_maincode mc, tb_subcode sc, tb_grresult b, tb_grcode c, tb_subjresult d  ";
		sql_master = sql_master + "	WHERE (mc.cd_gubun(+)='G'  ";
		sql_master = sql_master + "        AND c.grtype=mc.major_code(+))  ";
		sql_master = sql_master + "	AND c.grtype || c.grsubcd in ('101', '201')  ";
		sql_master = sql_master + "	AND (sc.cd_gubun(+)='G'  ";
		sql_master = sql_master + "        AND c.grtype=sc.major_code(+)  ";
		sql_master = sql_master + "	AND c.grsubcd=sc.minor_code(+)) ";
		sql_master = sql_master + "	AND  b.grcode=c.grcode  ";
		sql_master = sql_master + "	AND b.grcode=d.grcode  ";
		sql_master = sql_master + "        AND b.grseq=d.grseq  ";
		sql_master = sql_master + "	AND b.userno=d.userno  ";
		sql_master = sql_master + "	AND b.grseq like '" + p_startyear_Param + "'||'%' ";
		sql_master = sql_master + "GROUP BY (c.grtype || c.grsubcd),b.grcode,b.grseq ";
		sql_master = sql_master + ") g ) GROUP BY gubunnm, gubun";
	}

	private void initSQLdetailVarient(){
		sql_detail = "SELECT grcodenm ";
		sql_detail = sql_detail + "     , totno ";
		sql_detail = sql_detail + "     , (nvl(avlcount,0) + nvl(avreport,0) + nvl(avcourse,0) +  nvl(silcount, 0) + nvl(buncount, 0) + nvl(miscount, 0) + nvl(boncount, 0) + round(nvl(sumaddpoint,0)/totno,3)) subcnt ";
		sql_detail = sql_detail + "     , avlcount ";
		sql_detail = sql_detail + "     , silcount ";
		sql_detail = sql_detail + "     , buncount ";
		sql_detail = sql_detail + "     , avreport ";
		sql_detail = sql_detail + "     , avcourse ";
		sql_detail = sql_detail + "     , miscount ";
		sql_detail = sql_detail + "     , boncount ";
		sql_detail = sql_detail + "     , round(nvl(sumaddpoint,0)/totno,3) as addpoint ";
		sql_detail = sql_detail + "     , maxpoint ";
		sql_detail = sql_detail + "     , minpoint ";
		sql_detail = sql_detail + "     , (SELECT round(avg(paccept),2)   ";
		sql_detail = sql_detail + "          FROM tb_grresult  ";
		sql_detail = sql_detail + "          WHERE grcode=g.grcode  ";
		sql_detail = sql_detail + "	  AND grseq like to_char(to_number('" + p_startyear_Param + "')-1) || substr(g.grseq,5,2) ) as oldpoint ";
		sql_detail = sql_detail + "     , savlcount ";
		sql_detail = sql_detail + "     , paccept ";
		sql_detail = sql_detail + "     , gubun ";
		sql_detail = sql_detail + "     , gubunnm ";
		sql_detail = sql_detail + "     , grcode ";
		sql_detail = sql_detail + " FROM (SELECT (c.grtype || c.grsubcd) as gubun ";
		sql_detail = sql_detail + "            , (min(mc.mcode_name) || min(sc.scode_name) || '교육') as gubunnm ";
		sql_detail = sql_detail + "	    , b.grcode ";
		sql_detail = sql_detail + "	    , b.grseq ";
		sql_detail = sql_detail + "	    , min(c.grcodenm)||'('||substr(b.grseq,6,1)||')' grcodenm ";
		sql_detail = sql_detail + "	    , count(distinct b.userno) totno ";
		sql_detail = sql_detail + "	    , sum(avlcount) savlcount ";
		sql_detail = sql_detail + "	    , nvl(round(sum(decode(substr(d.subj,1,3),'SIL',0,'BUN',0,'MIS',0,'BON',0,'GUN',0,d.avlcount))/count(distinct b.userno),2),0) avlcount ";
		sql_detail = sql_detail + "	    , nvl(round(sum(decode(substr(d.subj,1,3),'SIL',0,'BUN',0,'MIS',0,'BON',0,'GUN',0,d.avreport))/count(distinct b.userno),2),0) avreport ";
		sql_detail = sql_detail + "	    , nvl(round(sum(decode(substr(d.subj,1,3),'SIL',0,'BUN',0,'MIS',0,'BON',0,d.avcourse))/count(distinct b.userno),2),0) avcourse ";
		sql_detail = sql_detail + "	    , nvl(round(sum(decode(substr(d.subj,1,3),'SIL',d.paccept,0))/count(distinct b.userno),2),0) silcount ";
		sql_detail = sql_detail + "	    , nvl(round(sum(decode(substr(d.subj,1,3),'BUN',d.paccept,0))/count(distinct b.userno),2),0) buncount ";
		sql_detail = sql_detail + "	    , nvl(round(sum(decode(substr(d.subj,1,3),'MIS',d.paccept,0))/count(distinct b.userno),2),0) miscount ";
		sql_detail = sql_detail + "	    , nvl(round(sum(decode(substr(d.subj,1,3),'BON',d.paccept,0))/count(distinct b.userno),2),0) boncount ";
		sql_detail = sql_detail + "            , (nvl(sum(b.paccept),0)/count(b.userno)) paccept, max(b.paccept) maxpoint, min(b.paccept) minpoint ";
		sql_detail = sql_detail + "	    , (SELECT sum(addpoint)  ";
		sql_detail = sql_detail + "	         FROM tb_grstumas ";
		sql_detail = sql_detail + "	       WHERE grcode=b.grcode  ";
		sql_detail = sql_detail + "	       AND grseq=b.grseq) as sumaddpoint  ";
		sql_detail = sql_detail + "         FROM tb_maincode mc, tb_subcode sc, tb_grresult b, tb_grcode c, tb_subjresult d  ";
		sql_detail = sql_detail + "	WHERE (mc.cd_gubun(+)='G'  ";
		sql_detail = sql_detail + "        AND c.grtype=mc.major_code(+))  ";
		sql_detail = sql_detail + "	AND c.grtype || c.grsubcd in ('101', '201')  ";
		sql_detail = sql_detail + "	AND (sc.cd_gubun(+)='G'  ";
		sql_detail = sql_detail + "        AND c.grtype=sc.major_code(+)  ";
		sql_detail = sql_detail + "	AND c.grsubcd=sc.minor_code(+)) ";
		sql_detail = sql_detail + "	AND  b.grcode=c.grcode  ";
		sql_detail = sql_detail + "	AND b.grcode=d.grcode  ";
		sql_detail = sql_detail + "        AND b.grseq=d.grseq  ";
		sql_detail = sql_detail + "	AND b.userno=d.userno  ";
		sql_detail = sql_detail + "	AND b.grseq like '" + p_startyear_Param + "'||'%' ";
		sql_detail = sql_detail + "	AND (c.grtype || c.grsubcd) = '" + master_GUBUN + "' ";
		sql_detail = sql_detail + "GROUP BY (c.grtype || c.grsubcd),b.grcode,b.grseq ";
		sql_detail = sql_detail + ") g";
	}

	//-----ResultSet 객체에서 필드 값 설정 함수-----
	//ResultSet totAvg 객체에서 필드 값 설정 함수
	private void setFieldVariableFromtotAvg() throws Exception{
		totAvg_TOT_TOTNO=totAvg.getDouble(1);
		totAvg_TOT_SUBCNT=totAvg.getDouble(2);
		totAvg_TOT_AVLCOUNT=totAvg.getDouble(3);
		totAvg_TOT_SILCOUNT=totAvg.getDouble(4);
		totAvg_TOT_BUNCOUNT=totAvg.getDouble(5);
		totAvg_TOT_AVREPORT=totAvg.getDouble(6);
		totAvg_TOT_AVCOURSE=totAvg.getDouble(7);
		totAvg_TOT_MISCOUNT=totAvg.getDouble(8);
		totAvg_TOT_BONCOUNT=totAvg.getDouble(9);
		totAvg_TOT_ADDPOINT=totAvg.getDouble(10);
		totAvg_TOT_MAXPOINT=totAvg.getDouble(11);
		totAvg_TOT_MINPOINT=totAvg.getDouble(12);
		totAvg_TOT_OLDPOINT=totAvg.getDouble(13);
	}

	//ResultSet totAvg 객체의 필드 값 초기화 함수
	private void setFieldInitFromtotAvg(){
		totAvg_TOT_TOTNO=0;
		totAvg_TOT_SUBCNT=0;
		totAvg_TOT_AVLCOUNT=0;
		totAvg_TOT_SILCOUNT=0;
		totAvg_TOT_BUNCOUNT=0;
		totAvg_TOT_AVREPORT=0;
		totAvg_TOT_AVCOURSE=0;
		totAvg_TOT_MISCOUNT=0;
		totAvg_TOT_BONCOUNT=0;
		totAvg_TOT_ADDPOINT=0;
		totAvg_TOT_MAXPOINT=0;
		totAvg_TOT_MINPOINT=0;
		totAvg_TOT_OLDPOINT=0;
	}

	//ResultSet detail 객체에서 필드 값 설정 함수
	private void setFieldVariableFromdetail() throws Exception{
		detail_GRCODENM=GetB(detail.getString(1));
		detail_TOTNO=detail.getDouble(2);
		detail_SUBCNT=detail.getDouble(3);
		detail_AVLCOUNT=detail.getDouble(4);
		detail_SILCOUNT=detail.getDouble(5);
		detail_BUNCOUNT=detail.getDouble(6);
		detail_AVREPORT=detail.getDouble(7);
		detail_AVCOURSE=detail.getDouble(8);
		detail_MISCOUNT=detail.getDouble(9);
		detail_BONCOUNT=detail.getDouble(10);
		detail_ADDPOINT=detail.getDouble(11);
		detail_MAXPOINT=detail.getDouble(12);
		detail_MINPOINT=detail.getDouble(13);
		detail_OLDPOINT=detail.getDouble(14);
		detail_SAVLCOUNT=detail.getDouble(15);
		detail_PACCEPT=detail.getDouble(16);
		detail_GUBUN=GetB(detail.getString(17));
		detail_GUBUNNM=GetB(detail.getString(18));
		detail_GRCODE=GetB(detail.getString(19));
	}

	//ResultSet detail 객체의 필드 값 초기화 함수
	private void setFieldInitFromdetail(){
		detail_GRCODENM="";
		detail_TOTNO=0;
		detail_SUBCNT=0;
		detail_AVLCOUNT=0;
		detail_SILCOUNT=0;
		detail_BUNCOUNT=0;
		detail_AVREPORT=0;
		detail_AVCOURSE=0;
		detail_MISCOUNT=0;
		detail_BONCOUNT=0;
		detail_ADDPOINT=0;
		detail_MAXPOINT=0;
		detail_MINPOINT=0;
		detail_OLDPOINT=0;
		detail_SAVLCOUNT=0;
		detail_PACCEPT=0;
		detail_GUBUN="";
		detail_GUBUNNM="";
		detail_GRCODE="";
	}

	//ResultSet master 객체에서 필드 값 설정 함수
	private void setFieldVariableFrommaster() throws Exception{
		master_GUBUNNM=GetB(master.getString(1));
		master_GUBUN=GetB(master.getString(2));
		master_TOT_TOTNO=master.getDouble(3);
		master_TOT_SUBCNT=master.getDouble(4);
		master_학습평가=master.getDouble(5);
		master_극기훈련=master.getDouble(6);
		master_분임발표=master.getDouble(7);
		master_과제연구=master.getDouble(8);
		master_근태=master.getDouble(9);
		master_역활극=master.getDouble(10);
		master_봉사활동=master.getDouble(11);
		master_가점=master.getDouble(12);
		master_최고=master.getDouble(13);
		master_최하=master.getDouble(14);
		master_전년도평균=master.getDouble(15);
	}

	//ResultSet master 객체의 필드 값 초기화 함수
	private void setFieldInitFrommaster(){
		master_GUBUNNM="";
		master_GUBUN="";
		master_TOT_TOTNO=0;
		master_TOT_SUBCNT=0;
		master_학습평가=0;
		master_극기훈련=0;
		master_분임발표=0;
		master_과제연구=0;
		master_근태=0;
		master_역활극=0;
		master_봉사활동=0;
		master_가점=0;
		master_최고=0;
		master_최하=0;
		master_전년도평균=0;
	}

	//-----고정 데이터 초기화 함수-----
	private void initConstVarient(){
		sheet10_A1="7. 교육훈련성과 측정분석";
		sheet10_A2="가. 교육훈련성적";
		sheet10_A4=" (1) 평균성적";
		sheet10_A10="#PAGE / #TOTALPAGE";
		sheet10_A5="구분";
		sheet10_B5="과   정   명";
		sheet10_C5="교육인원(명)";
		sheet10_D5="평     균     성     적";
		sheet10_M5="최고";
		sheet10_N5="최하";
		sheet10_O5="전년도평균";
		sheet10_D6="계";
		sheet10_E6="학습평가";
		sheet10_F6="극기훈련";
		sheet10_G6="분임발표";
		sheet10_H6="과제연구";
		sheet10_I6="근태";
		sheet10_J6="역활극";
		sheet10_K6="봉사활동";
		sheet10_L6="가점";
		sheet10_A7="합          계";
		sheet10_B8="소     계";
	}

	//-----페이지 스킵 관련 함수-----
	//페이지 스킵시 호출되는 함수로서 페이지 번호를 증가시키고 페이지 지시문 출력 그리고 Y좌표 초기화
	//매개변수에 따라 해당 쉬트의 배경 이미지, 머리글 밴드, 바닥글 밴드 함수 호출
	private void pageSkip(int nIndex) throws Exception{
		nXCurPos=nXStartPos;
		nYCurPos=nYStartPos;
		nPageNum=nPageNum+1;
		out.print("-- " + nPageNum + " PAGE --\r");

		switch(nIndex){
			case 10:		//SHEET=Sheet=1   FRAME=0에서 페이지 스킵시
			getScriptFromtitle(false, true);		//머리글 밴드 호출
			getScriptFromfoot(false, true);		//바닥글 밴드 호출
			break;
		}
	}

	//페이지 스킵이 필요한지 검사하는 함수
	private boolean isPageSkip(int nTestPos){
		if(nTestPos>nYEndPos){
			return true;
		}else{
			return false;
		}
	}

	//----AI_CHART_OBJ6 챠트 데이터 함수----
	private void getChartDataAI_CHART_OBJ6( ) throws Exception{
		//지역 변수 선언 및 초기화
		String chartProp="";   //챠트 프로퍼티 스크립트

		//DataSet 객체 생성
		//ResultSet master 객체의 생성
		if(master==null){
			master = stat_master.executeQuery(sql_master);
		}else{
			master.beforeFirst();
		}
		if(!master.isBeforeFirst()){		//생성된 ResultSet에 레코드가 없으면
			return;
		}

		//계열(Series) 필드 설정
		AI_CHART_OBJ6="\t";
		AI_CHART_OBJ6=AI_CHART_OBJ6 + "학습평가\t";
		AI_CHART_OBJ6=AI_CHART_OBJ6 + "극기훈련\t";
		AI_CHART_OBJ6=AI_CHART_OBJ6 + "분임발표\t";
		AI_CHART_OBJ6=AI_CHART_OBJ6 + "과제연구\t";
		AI_CHART_OBJ6=AI_CHART_OBJ6 + "근태\t";
		AI_CHART_OBJ6=AI_CHART_OBJ6 + "역활극\t";
		AI_CHART_OBJ6=AI_CHART_OBJ6 + "봉사활동\t";
		AI_CHART_OBJ6=AI_CHART_OBJ6 + "가점\t";
		AI_CHART_OBJ6=AI_CHART_OBJ6 + "최고\t";
		AI_CHART_OBJ6=AI_CHART_OBJ6 + "최하\t";
		AI_CHART_OBJ6=AI_CHART_OBJ6 + "전년도평균\r\n";

		while(master.next()){   //데이터 루프문
			//데이터 fetch
			setFieldVariableFrommaster();   //RecordSet master에서 필드 값 설정

			//X축 레이블 필드 설정
			AI_CHART_OBJ6=AI_CHART_OBJ6 + master_GUBUNNM + "\t";

			//데이터 설정
			AI_CHART_OBJ6=AI_CHART_OBJ6 + master_학습평가 + "\t";
			AI_CHART_OBJ6=AI_CHART_OBJ6 + master_극기훈련 + "\t";
			AI_CHART_OBJ6=AI_CHART_OBJ6 + master_분임발표 + "\t";
			AI_CHART_OBJ6=AI_CHART_OBJ6 + master_과제연구 + "\t";
			AI_CHART_OBJ6=AI_CHART_OBJ6 + master_근태 + "\t";
			AI_CHART_OBJ6=AI_CHART_OBJ6 + master_역활극 + "\t";
			AI_CHART_OBJ6=AI_CHART_OBJ6 + master_봉사활동 + "\t";
			AI_CHART_OBJ6=AI_CHART_OBJ6 + master_가점 + "\t";
			AI_CHART_OBJ6=AI_CHART_OBJ6 + master_최고 + "\t";
			AI_CHART_OBJ6=AI_CHART_OBJ6 + master_최하 + "\t";
			AI_CHART_OBJ6=AI_CHART_OBJ6 + master_전년도평균 + "\r\n";
		}   //while end

		//챠트 프로퍼티 스크립트
		chartProp=chartProp + "SeriesToXLabel=TRUE\r\n";
		if(!chartProp.equals(isEmpty)){
			AI_CHART_OBJ6=AI_CHART_OBJ6 + "--PROPERTY\r\n";
			AI_CHART_OBJ6=AI_CHART_OBJ6 + chartProp;
		}
	}

	//-----공통 함수 선언-----
	private void getScriptHeader(String paper, String size, String value, String orient) throws Exception{
		out.print("--SCRIPT_START31--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void getSheetPaperInfo(String paper, String size, String value, String orient) throws Exception{
		out.print("--PAPER_INFO--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void initSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bFirstFrame){
		if(bFirstFrame){
			nStartPage=nMaxPage+1;
			nYLastPos=0;
		}
		nPageNum=nStartPage;
		nYStartPos=constStartY;
		nYEndPos=constEndY;
		nYCurPos=nYStartPos;
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
	}

	private void initChildSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bIsMultiFrame, boolean bIsFirstFrame){
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
		nYStartPos=constStartY;
		nYEndPos=constEndY;

		if(bIsMultiFrame){
			if(bIsFirstFrame){
				nStartPage=nPageNum;
				nYSavePos=nYCurPos;
				nYLastPos=0;
			}else{
				nPageNum=nStartPage;
				nYCurPos=nYSavePos;
			}
		}else{
			nStartPage=nPageNum;
		}
	}

	//Empty Row만으로 구성되어 출력 위치를 조정하기 위한 VoidBand 함수
	//nRangePos - VoidBand의 출력 영역
	//nIndex - PageSkip 함수 호출시 전달할 쉬트 인덱스
	private boolean voidBandNoneData(int nRangePos, int nIndex) throws Exception{
		int nTestPos;
		nTestPos=nYCurPos+nRangePos;
		if(isPageSkip(nTestPos)){
			pageSkip(nIndex);
			return true;
		}else{
			nYCurPos=nYCurPos+nRangePos;
			return false;
		}
	}

	private String Get0(String str){
		if(str==null){
			return "0";
		}else{
			if(str.equals("")){
				return "0";
			}else{
				return str;
			}
		}
	}

	private String GetB(String str){
		if(str==null){
			return "";
		}else{
			return str;
		}
	}

	private double SUM(double accVal, double tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(double accVal, long tmpVal){
		return(accVal+(double)tmpVal);
	}

	private long SUM(long accVal, long tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(long accVal, double tmpVal){
		return((double)accVal+tmpVal);
	}

	private long COUNT(long accuCNT){
		return ++accuCNT;
	}

	private long MIN(long maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(long maxV, double maxTempV){
		if((double)maxV<=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, double maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}
	private long MAX(long maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(long maxV, double maxTempV){
		if((double)maxV>=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, double maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}

	private double AVG(double sumVal, long cntVal){
		return(sumVal/cntVal);
	}

	private double AVG(long sumVal, long cntVal){
		return((double)sumVal/(double)cntVal);
	}

	private String aiReplace(String strAll, String strSrc, String strDest) {
		while(strAll.indexOf(strSrc) != -1) {
			strAll = strAll.substring(0, strAll.indexOf(strSrc)) + strDest + strAll.substring(strAll.indexOf(strSrc) + strSrc.length(), strAll.length());
		}
		return strAll;
	}

	private String toDate() {
		SimpleDateFormat dateFormat=new SimpleDateFormat("'#SERVERDATE#'yyyy/MM/dd/HH/mm/ss");
		java.util.Date currentDate = new java.util.Date();
		return dateFormat.format(currentDate);
	}

	final String toKor (String en){
		if(en==null){
			return "";
		}
		try{
			return new String(en.getBytes("8859_1"), "KSC5601");
		}catch(Exception e){return en;}
	}
}
%>
