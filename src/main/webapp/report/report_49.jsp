<%
/* ### Generated by AIDesigner 3.7.1.22 ### */
%>

<%@ page language="java" import="java.sql.*,java.io.*,java.text.*" %>
<%@ page contentType="text/plain; charset=euc-kr" %>
<%@ page import="oracle.sql.*,oracle.jdbc.*" %>

<%
Object[] userObj = null;
ReportHandler handler = new ReportHandler(request,response,userObj);
handler.service(out);
%>

<%!
class ReportHandler{
	//공통 변수 선언
	private Object[] userObj = null;
	private int nStartPage;		//각 쉬트별 시작 페이지 저장
	private int nMaxPage;		//한 쉬트가 실행된 후 생성된 최대 페이지 번호 저장
	private int nPageNum;		//현재 페이지 번호
	private int nYStartPos;		//쉬트에서 Y 시작 좌표
	private int nYEndPos;		//쉬트에서 Y 끝 좌표
	private int nYCurPos;		//현재 Y 좌표
	private int nYSavePos;		//연결된 멀티 프레임 쉬트에서 시작 Y 좌표 저장
	private int nYLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 Y 좌표 저장
	private int nXStartPos;		//쉬트에서 X 시작 좌표
	private int nXEndPos;		//쉬트에서 X 끝 좌표
	private int nXCurPos;		//현재 X 좌표
	private int nXSavePos;		//연결된 멀티 프레임 쉬트에서 시작 X 좌표 저장
	private int  nXLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 X 좌표 저장
	private boolean bIsBeforePageSkip;		//조건 밴드에서 페이지 넘기기 여부 판단
	private int nLoopRef;		//절대 양식에서 루프 참조 변수
	private String isEmpty="";		//빈 문자열 비교에 사용

	private HttpServletRequest request;
	private HttpServletResponse response;
	private JspWriter out;

	//-----데이터 변수 선언-----
	int[] nAutoHeight_edutr=new int[9];
	String sheet10_A1;
	String sheet10_D1;
	String sheet10_E1;
	String sheet10_F1;
	String sheet10_A2;
	String sheet10_B2;
	String sheet10_C2;
	String sheet10_A3;
	double sheet10_B3;
	String sheet10_A4;
	double sheet10_B4;
	String sheet10_C4;
	String sheet10_A5;
	double sheet10_B5;
	String sheet10_C5;
	String sheet10_A6;
	double sheet10_B6;
	String sheet10_C6;
	String sheet10_A7;
	double sheet10_B7;
	String sheet10_C7;
	String sheet10_A8;
	double sheet10_B8;
	String sheet10_C8;
	String sheet10_A9;

	//-----Connection, Statement, ResultSet 객체 선언-----
	private Connection conn_DUNET;		//DSN DUNET Connection 객체
	private CallableStatement cs_WRTOOL_EDUTR_CUR_edutr;	//ResultSet WRTOOL_EDUTR_CUR_edutr 객체를 생성하기 위한 CallableStatement 객체
	private ResultSet WRTOOL_EDUTR_CUR_edutr;		//ResultSet WRTOOL_EDUTR_CUR_edutr 객체

	//-----쿼리 필드 변수 선언-----
	//ResultSet WRTOOL_EDUTR_CUR_edutr 객체에서 필드 값을 받는 쿼리 필드 변수
	private String WRTOOL_EDUTR_CUR_edutr_GR_YEAR;
	private String WRTOOL_EDUTR_CUR_edutr_GRCODENIKNM;
	private String WRTOOL_EDUTR_CUR_edutr_GR_SEQ;
	private double WRTOOL_EDUTR_CUR_edutr_SUM_WEIGHT;
	private double WRTOOL_EDUTR_CUR_edutr_EXAM_WEIGHT;
	private double WRTOOL_EDUTR_CUR_edutr_BUNIM_WEIGHT;
	private double WRTOOL_EDUTR_CUR_edutr_REP_WEIGHT;
	private double WRTOOL_EDUTR_CUR_edutr_GUN_WEIGHT;
	private double WRTOOL_EDUTR_CUR_edutr_STEP_WEIGHT;
	private double WRTOOL_EDUTR_CUR_edutr_QUIZ_WEIGHT;
	private String WRTOOL_EDUTR_CUR_edutr_EXAM_MENT;
	private String WRTOOL_EDUTR_CUR_edutr_REP_MENT;
	private String WRTOOL_EDUTR_CUR_edutr_GUN_MENT;
	private String WRTOOL_EDUTR_CUR_edutr_BUNIM_MENT;
	private String WRTOOL_EDUTR_CUR_edutr_STEP_MENT;
	private String WRTOOL_EDUTR_CUR_edutr_QUIZ_MENT;

	//파라미터 변수 선언
	String p_grcode_Param;
	String p_grseq_Param;

	//ReportHandler 생성자 함수
	ReportHandler(HttpServletRequest request,HttpServletResponse response,Object[] userObj){
		this.request=request;
		this.response=response;
		this.userObj=userObj;
	}

	//ReportHandler 서비스 함수
	void service(JspWriter out) throws Exception{
		try{    //try 구문
			this.out=out;
			nMaxPage=0;    //nMaxPage 초기화

			//스크립트 헤더 함수 호출
			getScriptHeader("A4", "2100x2970", "9", "VERTICAL");

			//파라미터 설정 함수 호출
			setParam();

			//고정 데이터 초기화 함수 호출
			initConstVarient();

			//Connection 및 Statement 객체 생성 함수 호출
			createConnAndStateObject();

			//쿼리문 초기화 함수 호출
			initSQLConst();

			//쉬트 함수 호출
			//SHEET=Sheet1   FRAME=0 함수 호출
			executeSheet10();

			//---------------스크립트 종료---------------
			out.print("--SCRIPT_END--\r");
		}catch(Exception e){    //catch 구문
			out.print(e);
			out.print("AI!REPORT JSP ERROR!!!!\r");
		}finally{    //finally 구문
			try{    //finally try 구문
				//DataSet Close
				if(WRTOOL_EDUTR_CUR_edutr!=null) WRTOOL_EDUTR_CUR_edutr.close();
				if(cs_WRTOOL_EDUTR_CUR_edutr!=null) cs_WRTOOL_EDUTR_CUR_edutr.close();
				if(conn_DUNET!=null) conn_DUNET.close();
			}catch(Exception e){    //finally catch 구문
			}    //end finally try
		}    //end try
	}

	//-----쉬트 함수-----
	//-----SHEET=Sheet1   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet10( ) throws Exception{
		//쉬트 초기화 함수 호출
		initSheetVariant(41, 41, 546, 801, true);

		//시작 페이지 번호 출력
		out.print("-- " + nPageNum + " PAGE --\r");

		//밴드 함수 호출
		getScriptFromedutr(true, true);    //Void 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기
	}

	//-----밴드 함수-----
	//----edutr VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : edutr
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFromedutr(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=727;    //밴드 출력 높이
		//폰트명 : 굴림체
		//폰트 사이즈 : 11
		//각 문자별 폭을 할당할 배열 선언
		int[] charWidth = {6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,12};

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//DataSet 객체 생성
			//ResultSet WRTOOL_EDUTR_CUR_edutr 객체의 생성
			if(WRTOOL_EDUTR_CUR_edutr==null){
				WRTOOL_EDUTR_CUR_edutr = cs_WRTOOL_EDUTR_CUR_edutr.executeQuery();
				WRTOOL_EDUTR_CUR_edutr=(ResultSet)cs_WRTOOL_EDUTR_CUR_edutr.getObject(3);
			}else{
				WRTOOL_EDUTR_CUR_edutr.beforeFirst();
			}

			//데이터 fetch
			if(WRTOOL_EDUTR_CUR_edutr.next()){
				setFieldVariableFromWRTOOL_EDUTR_CUR_edutr();	//ResultSet WRTOOL_EDUTR_CUR_edutr에서 필드 값 설정
			}else{
				setFieldInitFromWRTOOL_EDUTR_CUR_edutr();	//ResultSet WRTOOL_EDUTR_CUR_edutr의 필드 값 초기화
			}

			//데이터 변수 초기화
			sheet10_A1="";
			sheet10_D1="";
			sheet10_E1="";
			sheet10_F1="";
			sheet10_B3=0;
			sheet10_B4=0;
			sheet10_C4="";
			sheet10_B5=0;
			sheet10_C5="";
			sheet10_B6=0;
			sheet10_C6="";
			sheet10_B7=0;
			sheet10_C7="";
			sheet10_B8=0;
			sheet10_C8="";

			//데이터 변수 할당
			sheet10_A1= WRTOOL_EDUTR_CUR_edutr_GR_YEAR + ". " + WRTOOL_EDUTR_CUR_edutr_GRCODENIKNM + " " + WRTOOL_EDUTR_CUR_edutr_GR_SEQ + "기 평가배점내역";
			sheet10_D1=WRTOOL_EDUTR_CUR_edutr_GR_YEAR;
			sheet10_E1=WRTOOL_EDUTR_CUR_edutr_GRCODENIKNM;
			sheet10_F1=WRTOOL_EDUTR_CUR_edutr_GR_SEQ;
			sheet10_B3=WRTOOL_EDUTR_CUR_edutr_SUM_WEIGHT;
			sheet10_B4=WRTOOL_EDUTR_CUR_edutr_EXAM_WEIGHT;
			sheet10_C4=WRTOOL_EDUTR_CUR_edutr_EXAM_MENT;
			sheet10_B5=WRTOOL_EDUTR_CUR_edutr_REP_WEIGHT;
			sheet10_C5=WRTOOL_EDUTR_CUR_edutr_REP_MENT;
			sheet10_B6=WRTOOL_EDUTR_CUR_edutr_BUNIM_WEIGHT;
			sheet10_C6=WRTOOL_EDUTR_CUR_edutr_BUNIM_MENT;
			sheet10_B7=WRTOOL_EDUTR_CUR_edutr_STEP_WEIGHT;
			sheet10_C7=WRTOOL_EDUTR_CUR_edutr_STEP_MENT;
			sheet10_B8=WRTOOL_EDUTR_CUR_edutr_QUIZ_WEIGHT;
			sheet10_C8=WRTOOL_EDUTR_CUR_edutr_QUIZ_MENT;

			sheet10_C4 = sheet10_C4.replaceAll("<br>","\r");
			sheet10_C5 = sheet10_C5.replaceAll("<br>","\r");
			sheet10_C6 = sheet10_C6.replaceAll("<br>","\r");
			sheet10_C7 = sheet10_C7.replaceAll("<br>","\r");
			sheet10_C8 = sheet10_C8.replaceAll("<br>","\r");

			//Auto Size Code
			nAutoHeight_edutr[0]=0;
			nAutoHeight_edutr[1]=0;
			nAutoHeight_edutr[2]=0;
			nAutoHeight_edutr[3]=0;
			nAutoHeight_edutr[4]=0;
			nAutoHeight_edutr[5]=0;
			nAutoHeight_edutr[6]=0;
			nAutoHeight_edutr[7]=0;
			nAutoHeight_edutr[8]=0;
			nAutoHeight_edutr[3]=getPrintHeight(sheet10_C4, charWidth, 11, 353, 267, nAutoHeight_edutr[3]);
			nAutoHeight_edutr[4]=getPrintHeight(sheet10_C5, charWidth, 11, 353, 267, nAutoHeight_edutr[4]);
			nAutoHeight_edutr[5]=getPrintHeight(sheet10_C6, charWidth, 11, 353, 20, nAutoHeight_edutr[5]);
			nAutoHeight_edutr[6]=getPrintHeight(sheet10_C7, charWidth, 11, 353, 45, nAutoHeight_edutr[6]);
			nAutoHeight_edutr[7]=getPrintHeight(sheet10_C8, charWidth, 11, 353, 20, nAutoHeight_edutr[7]);
			nAutoHeight_edutr[0]=nAutoHeight_edutr[0]+48;
			nAutoHeight_edutr[1]=nAutoHeight_edutr[0]+nAutoHeight_edutr[1]+20;
			nAutoHeight_edutr[2]=nAutoHeight_edutr[1]+nAutoHeight_edutr[2]+20;
			nAutoHeight_edutr[3]=nAutoHeight_edutr[2]+nAutoHeight_edutr[3]+267;
			nAutoHeight_edutr[4]=nAutoHeight_edutr[3]+nAutoHeight_edutr[4]+267;
			nAutoHeight_edutr[5]=nAutoHeight_edutr[4]+nAutoHeight_edutr[5]+20;
			nAutoHeight_edutr[6]=nAutoHeight_edutr[5]+nAutoHeight_edutr[6]+45;
			nAutoHeight_edutr[7]=nAutoHeight_edutr[6]+nAutoHeight_edutr[7]+20;
			nAutoHeight_edutr[8]=nAutoHeight_edutr[7]+nAutoHeight_edutr[8]+20;
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			nBandHeight=nAutoHeight_edutr[8];
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptedutr();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----스크립트 출력 함수-----
	//----edutr 스크립트 문 출력 함수----
	private void writeScriptedutr( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",504,0,12,0/,굴림체,RGB[0,0,0],BOLD, , ,NONE,"+(nAutoHeight_edutr[0])+",1)");
		out.println(sheet10_A1+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[0])+",66,"+(nAutoHeight_edutr[1]-nAutoHeight_edutr[0])+",1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[0])+",66,"+(nAutoHeight_edutr[1]-nAutoHeight_edutr[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[0])+",66,"+(nAutoHeight_edutr[1]-nAutoHeight_edutr[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[0])+",66,"+(nAutoHeight_edutr[1]-nAutoHeight_edutr[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[0])+",66,"+(nAutoHeight_edutr[1]-nAutoHeight_edutr[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[0])+",66,1,11,0/,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_edutr[1]-nAutoHeight_edutr[0])+",1)");
		out.println(sheet10_A2+"\r");
		out.println("^CELLBG("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[0])+",85,"+(nAutoHeight_edutr[1]-nAutoHeight_edutr[0])+",1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[0])+",85,"+(nAutoHeight_edutr[1]-nAutoHeight_edutr[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[0])+",85,"+(nAutoHeight_edutr[1]-nAutoHeight_edutr[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[0])+",85,"+(nAutoHeight_edutr[1]-nAutoHeight_edutr[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[0])+",85,"+(nAutoHeight_edutr[1]-nAutoHeight_edutr[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[0])+",85,1,11,0/,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_edutr[1]-nAutoHeight_edutr[0])+",1)");
		out.println(sheet10_B2+"\r");
		out.println("^CELLBG("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[0])+",353,"+(nAutoHeight_edutr[1]-nAutoHeight_edutr[0])+",1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[0])+",353,"+(nAutoHeight_edutr[1]-nAutoHeight_edutr[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[0])+",353,"+(nAutoHeight_edutr[1]-nAutoHeight_edutr[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[0])+",353,"+(nAutoHeight_edutr[1]-nAutoHeight_edutr[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[0])+",353,"+(nAutoHeight_edutr[1]-nAutoHeight_edutr[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[0])+",353,1,11,0/,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_edutr[1]-nAutoHeight_edutr[0])+",1)");
		out.println(sheet10_C2+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[1])+",66,"+(nAutoHeight_edutr[2]-nAutoHeight_edutr[1])+",1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[1])+",66,"+(nAutoHeight_edutr[2]-nAutoHeight_edutr[1])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[1])+",66,"+(nAutoHeight_edutr[2]-nAutoHeight_edutr[1])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[1])+",66,"+(nAutoHeight_edutr[2]-nAutoHeight_edutr[1])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[1])+",66,"+(nAutoHeight_edutr[2]-nAutoHeight_edutr[1])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[1])+",66,1,11,0/,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_edutr[2]-nAutoHeight_edutr[1])+",1)");
		out.println(sheet10_A3+"\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[1])+",85,"+(nAutoHeight_edutr[2]-nAutoHeight_edutr[1])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[1])+",85,"+(nAutoHeight_edutr[2]-nAutoHeight_edutr[1])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[1])+",85,"+(nAutoHeight_edutr[2]-nAutoHeight_edutr[1])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[1])+",85,"+(nAutoHeight_edutr[2]-nAutoHeight_edutr[1])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[1])+",85,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_edutr[2]-nAutoHeight_edutr[1])+",1)");
		out.println(sheet10_B3+"\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[1])+",353,"+(nAutoHeight_edutr[2]-nAutoHeight_edutr[1])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[1])+",353,"+(nAutoHeight_edutr[2]-nAutoHeight_edutr[1])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[1])+",353,"+(nAutoHeight_edutr[2]-nAutoHeight_edutr[1])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[1])+",353,"+(nAutoHeight_edutr[2]-nAutoHeight_edutr[1])+",0,RGB[0,0,0],3)\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[2])+",66,"+(nAutoHeight_edutr[3]-nAutoHeight_edutr[2])+",1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[2])+",66,"+(nAutoHeight_edutr[3]-nAutoHeight_edutr[2])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[2])+",66,"+(nAutoHeight_edutr[3]-nAutoHeight_edutr[2])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[2])+",66,"+(nAutoHeight_edutr[3]-nAutoHeight_edutr[2])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[2])+",66,"+(nAutoHeight_edutr[3]-nAutoHeight_edutr[2])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[2])+",66,0,11,0/,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_edutr[3]-nAutoHeight_edutr[2])+",1)");
		out.println(sheet10_A4+"\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[2])+",85,"+(nAutoHeight_edutr[3]-nAutoHeight_edutr[2])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[2])+",85,"+(nAutoHeight_edutr[3]-nAutoHeight_edutr[2])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[2])+",85,"+(nAutoHeight_edutr[3]-nAutoHeight_edutr[2])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[2])+",85,"+(nAutoHeight_edutr[3]-nAutoHeight_edutr[2])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[2])+",85,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_edutr[3]-nAutoHeight_edutr[2])+",1)");
		out.println(sheet10_B4+"\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[2])+",353,"+(nAutoHeight_edutr[3]-nAutoHeight_edutr[2])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[2])+",353,"+(nAutoHeight_edutr[3]-nAutoHeight_edutr[2])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[2])+",353,"+(nAutoHeight_edutr[3]-nAutoHeight_edutr[2])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[2])+",353,"+(nAutoHeight_edutr[3]-nAutoHeight_edutr[2])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[2])+",353,0,11,0/,굴림체,RGB[0,0,0], , , ,XL,"+(nAutoHeight_edutr[3]-nAutoHeight_edutr[2])+",1)");
		out.println(sheet10_C4+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[3])+",66,"+(nAutoHeight_edutr[4]-nAutoHeight_edutr[3])+",1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[3])+",66,"+(nAutoHeight_edutr[4]-nAutoHeight_edutr[3])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[3])+",66,"+(nAutoHeight_edutr[4]-nAutoHeight_edutr[3])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[3])+",66,"+(nAutoHeight_edutr[4]-nAutoHeight_edutr[3])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[3])+",66,"+(nAutoHeight_edutr[4]-nAutoHeight_edutr[3])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[3])+",66,0,11,0/,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_edutr[4]-nAutoHeight_edutr[3])+",1)");
		out.println(sheet10_A5+"\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[3])+",85,"+(nAutoHeight_edutr[4]-nAutoHeight_edutr[3])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[3])+",85,"+(nAutoHeight_edutr[4]-nAutoHeight_edutr[3])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[3])+",85,"+(nAutoHeight_edutr[4]-nAutoHeight_edutr[3])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[3])+",85,"+(nAutoHeight_edutr[4]-nAutoHeight_edutr[3])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[3])+",85,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_edutr[4]-nAutoHeight_edutr[3])+",1)");
		out.println(sheet10_B5+"\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[3])+",353,"+(nAutoHeight_edutr[4]-nAutoHeight_edutr[3])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[3])+",353,"+(nAutoHeight_edutr[4]-nAutoHeight_edutr[3])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[3])+",353,"+(nAutoHeight_edutr[4]-nAutoHeight_edutr[3])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[3])+",353,"+(nAutoHeight_edutr[4]-nAutoHeight_edutr[3])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[3])+",353,0,11,0/,굴림체,RGB[0,0,0], , , ,XL,"+(nAutoHeight_edutr[4]-nAutoHeight_edutr[3])+",1)");
		out.println(sheet10_C5+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[4])+",66,"+(nAutoHeight_edutr[5]-nAutoHeight_edutr[4])+",1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[4])+",66,"+(nAutoHeight_edutr[5]-nAutoHeight_edutr[4])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[4])+",66,"+(nAutoHeight_edutr[5]-nAutoHeight_edutr[4])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[4])+",66,"+(nAutoHeight_edutr[5]-nAutoHeight_edutr[4])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[4])+",66,"+(nAutoHeight_edutr[5]-nAutoHeight_edutr[4])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[4])+",66,0,11,0/,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_edutr[5]-nAutoHeight_edutr[4])+",1)");
		out.println(sheet10_A6+"\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[4])+",85,"+(nAutoHeight_edutr[5]-nAutoHeight_edutr[4])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[4])+",85,"+(nAutoHeight_edutr[5]-nAutoHeight_edutr[4])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[4])+",85,"+(nAutoHeight_edutr[5]-nAutoHeight_edutr[4])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[4])+",85,"+(nAutoHeight_edutr[5]-nAutoHeight_edutr[4])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[4])+",85,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_edutr[5]-nAutoHeight_edutr[4])+",1)");
		out.println(sheet10_B6+"\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[4])+",353,"+(nAutoHeight_edutr[5]-nAutoHeight_edutr[4])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[4])+",353,"+(nAutoHeight_edutr[5]-nAutoHeight_edutr[4])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[4])+",353,"+(nAutoHeight_edutr[5]-nAutoHeight_edutr[4])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[4])+",353,"+(nAutoHeight_edutr[5]-nAutoHeight_edutr[4])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[4])+",353,0,11,0/,굴림체,RGB[0,0,0], , , ,XL,"+(nAutoHeight_edutr[5]-nAutoHeight_edutr[4])+",1)");
		out.println(sheet10_C6+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[5])+",66,"+(nAutoHeight_edutr[6]-nAutoHeight_edutr[5])+",1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[5])+",66,"+(nAutoHeight_edutr[6]-nAutoHeight_edutr[5])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[5])+",66,"+(nAutoHeight_edutr[6]-nAutoHeight_edutr[5])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[5])+",66,"+(nAutoHeight_edutr[6]-nAutoHeight_edutr[5])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[5])+",66,"+(nAutoHeight_edutr[6]-nAutoHeight_edutr[5])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[5])+",66,0,11,0/,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_edutr[6]-nAutoHeight_edutr[5])+",1)");
		out.println(sheet10_A7+"\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[5])+",85,"+(nAutoHeight_edutr[6]-nAutoHeight_edutr[5])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[5])+",85,"+(nAutoHeight_edutr[6]-nAutoHeight_edutr[5])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[5])+",85,"+(nAutoHeight_edutr[6]-nAutoHeight_edutr[5])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[5])+",85,"+(nAutoHeight_edutr[6]-nAutoHeight_edutr[5])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[5])+",85,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_edutr[6]-nAutoHeight_edutr[5])+",1)");
		out.println(sheet10_B7+"\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[5])+",353,"+(nAutoHeight_edutr[6]-nAutoHeight_edutr[5])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[5])+",353,"+(nAutoHeight_edutr[6]-nAutoHeight_edutr[5])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[5])+",353,"+(nAutoHeight_edutr[6]-nAutoHeight_edutr[5])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[5])+",353,"+(nAutoHeight_edutr[6]-nAutoHeight_edutr[5])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[5])+",353,0,11,0/,굴림체,RGB[0,0,0], , , ,XL,"+(nAutoHeight_edutr[6]-nAutoHeight_edutr[5])+",1)");
		out.println(sheet10_C7+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[6])+",66,"+(nAutoHeight_edutr[7]-nAutoHeight_edutr[6])+",1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[6])+",66,"+(nAutoHeight_edutr[7]-nAutoHeight_edutr[6])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[6])+",66,"+(nAutoHeight_edutr[7]-nAutoHeight_edutr[6])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[6])+",66,"+(nAutoHeight_edutr[7]-nAutoHeight_edutr[6])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[6])+",66,"+(nAutoHeight_edutr[7]-nAutoHeight_edutr[6])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[6])+",66,0,11,0/,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_edutr[7]-nAutoHeight_edutr[6])+",1)");
		out.println(sheet10_A8+"\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[6])+",85,"+(nAutoHeight_edutr[7]-nAutoHeight_edutr[6])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[6])+",85,"+(nAutoHeight_edutr[7]-nAutoHeight_edutr[6])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[6])+",85,"+(nAutoHeight_edutr[7]-nAutoHeight_edutr[6])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[6])+",85,"+(nAutoHeight_edutr[7]-nAutoHeight_edutr[6])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+66)+","+(nYCurPos+nAutoHeight_edutr[6])+",85,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_edutr[7]-nAutoHeight_edutr[6])+",1)");
		out.println(sheet10_B8+"\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[6])+",353,"+(nAutoHeight_edutr[7]-nAutoHeight_edutr[6])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[6])+",353,"+(nAutoHeight_edutr[7]-nAutoHeight_edutr[6])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[6])+",353,"+(nAutoHeight_edutr[7]-nAutoHeight_edutr[6])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[6])+",353,"+(nAutoHeight_edutr[7]-nAutoHeight_edutr[6])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+151)+","+(nYCurPos+nAutoHeight_edutr[6])+",353,0,11,0/,굴림체,RGB[0,0,0], , , ,XL,"+(nAutoHeight_edutr[7]-nAutoHeight_edutr[6])+",1)");
		out.println(sheet10_C8+"\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+nAutoHeight_edutr[7])+",504,0,11,0/,굴림체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_edutr[8]-nAutoHeight_edutr[7])+",1)");
		out.println(sheet10_A9+"\r");
	}

	//파라미터 설정 함수
	private void setParam(){
		p_grcode_Param=GetB(request.getParameter("p_grcode"));
		p_grseq_Param=GetB(request.getParameter("p_grseq"));
	}

	//-----Connection 및 Statement 객체 생성 함수-----
	private void createConnAndStateObject() throws Exception{
		//DUNET Connection 객체 생성
		Class.forName("oracle.jdbc.driver.OracleDriver").newInstance();
		conn_DUNET=DriverManager.getConnection("jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.12.203)(PORT=1521))(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.12.204)(PORT=1521))(FAILOVER=on)(LOAD_BALANCE=off))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=LOTI)))","inchlms","fhxl21");cs_WRTOOL_EDUTR_CUR_edutr=conn_DUNET.prepareCall("{call WRTOOL.EDUTR_CUR(?, ?, ?)}");
		cs_WRTOOL_EDUTR_CUR_edutr.setString(1, p_grcode_Param);
		cs_WRTOOL_EDUTR_CUR_edutr.setString(2, p_grseq_Param);
		cs_WRTOOL_EDUTR_CUR_edutr.registerOutParameter(3, OracleTypes.CURSOR);
	}

	//-----SQL문 변수 초기화 함수-----
	private void initSQLConst(){
	}

	//-----ResultSet 객체에서 필드 값 설정 함수-----
	//ResultSet WRTOOL_EDUTR_CUR_edutr 객체에서 필드 값 설정 함수
	private void setFieldVariableFromWRTOOL_EDUTR_CUR_edutr() throws Exception{
		WRTOOL_EDUTR_CUR_edutr_GR_YEAR=GetB(WRTOOL_EDUTR_CUR_edutr.getString(1));
		WRTOOL_EDUTR_CUR_edutr_GRCODENIKNM=GetB(WRTOOL_EDUTR_CUR_edutr.getString(2));
		WRTOOL_EDUTR_CUR_edutr_GR_SEQ=GetB(WRTOOL_EDUTR_CUR_edutr.getString(3));
		WRTOOL_EDUTR_CUR_edutr_SUM_WEIGHT=WRTOOL_EDUTR_CUR_edutr.getDouble(4);
		WRTOOL_EDUTR_CUR_edutr_EXAM_WEIGHT=WRTOOL_EDUTR_CUR_edutr.getDouble(5);
		WRTOOL_EDUTR_CUR_edutr_BUNIM_WEIGHT=WRTOOL_EDUTR_CUR_edutr.getDouble(6);
		WRTOOL_EDUTR_CUR_edutr_REP_WEIGHT=WRTOOL_EDUTR_CUR_edutr.getDouble(7);
		WRTOOL_EDUTR_CUR_edutr_GUN_WEIGHT=WRTOOL_EDUTR_CUR_edutr.getDouble(8);
		WRTOOL_EDUTR_CUR_edutr_STEP_WEIGHT=WRTOOL_EDUTR_CUR_edutr.getDouble(9);
		WRTOOL_EDUTR_CUR_edutr_QUIZ_WEIGHT=WRTOOL_EDUTR_CUR_edutr.getDouble(10);
		WRTOOL_EDUTR_CUR_edutr_EXAM_MENT=GetB(WRTOOL_EDUTR_CUR_edutr.getString(11));
		WRTOOL_EDUTR_CUR_edutr_REP_MENT=GetB(WRTOOL_EDUTR_CUR_edutr.getString(12));
		WRTOOL_EDUTR_CUR_edutr_GUN_MENT=GetB(WRTOOL_EDUTR_CUR_edutr.getString(13));
		WRTOOL_EDUTR_CUR_edutr_BUNIM_MENT=GetB(WRTOOL_EDUTR_CUR_edutr.getString(14));
		WRTOOL_EDUTR_CUR_edutr_STEP_MENT=GetB(WRTOOL_EDUTR_CUR_edutr.getString(15));
		WRTOOL_EDUTR_CUR_edutr_QUIZ_MENT=GetB(WRTOOL_EDUTR_CUR_edutr.getString(16));
	}

	//ResultSet WRTOOL_EDUTR_CUR_edutr 객체의 필드 값 초기화 함수
	private void setFieldInitFromWRTOOL_EDUTR_CUR_edutr(){
		WRTOOL_EDUTR_CUR_edutr_GR_YEAR="";
		WRTOOL_EDUTR_CUR_edutr_GRCODENIKNM="";
		WRTOOL_EDUTR_CUR_edutr_GR_SEQ="";
		WRTOOL_EDUTR_CUR_edutr_SUM_WEIGHT=0;
		WRTOOL_EDUTR_CUR_edutr_EXAM_WEIGHT=0;
		WRTOOL_EDUTR_CUR_edutr_BUNIM_WEIGHT=0;
		WRTOOL_EDUTR_CUR_edutr_REP_WEIGHT=0;
		WRTOOL_EDUTR_CUR_edutr_GUN_WEIGHT=0;
		WRTOOL_EDUTR_CUR_edutr_STEP_WEIGHT=0;
		WRTOOL_EDUTR_CUR_edutr_QUIZ_WEIGHT=0;
		WRTOOL_EDUTR_CUR_edutr_EXAM_MENT="";
		WRTOOL_EDUTR_CUR_edutr_REP_MENT="";
		WRTOOL_EDUTR_CUR_edutr_GUN_MENT="";
		WRTOOL_EDUTR_CUR_edutr_BUNIM_MENT="";
		WRTOOL_EDUTR_CUR_edutr_STEP_MENT="";
		WRTOOL_EDUTR_CUR_edutr_QUIZ_MENT="";
	}

	//-----고정 데이터 초기화 함수-----
	private void initConstVarient(){
		sheet10_A2="구분";
		sheet10_B2="배점";
		sheet10_C2="평가내역";
		sheet10_A3="계";
		sheet10_A4="필답평가";
		sheet10_A5="과졔평가";
		sheet10_A6="근태평가";
		sheet10_A7="진표율";
		sheet10_A8="차시평가";
		sheet10_A9="※필답평가시 컴퓨터용 사인펜 사용";
	}

	//-----페이지 스킵 관련 함수-----
	//페이지 스킵시 호출되는 함수로서 페이지 번호를 증가시키고 페이지 지시문 출력 그리고 Y좌표 초기화
	//매개변수에 따라 해당 쉬트의 배경 이미지, 머리글 밴드, 바닥글 밴드 함수 호출
	private void pageSkip(int nIndex) throws Exception{
		nXCurPos=nXStartPos;
		nYCurPos=nYStartPos;
		nPageNum=nPageNum+1;
		out.print("-- " + nPageNum + " PAGE --\r");

		switch(nIndex){
			case 10:		//SHEET=Sheet=1   FRAME=0에서 페이지 스킵시
			break;
		}
	}

	//페이지 스킵이 필요한지 검사하는 함수
	private boolean isPageSkip(int nTestPos){
		if(nTestPos>nYEndPos){
			return true;
		}else{
			return false;
		}
	}

	//-----공통 함수 선언-----
	private void getScriptHeader(String paper, String size, String value, String orient) throws Exception{
		out.print("--SCRIPT_START31--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void getSheetPaperInfo(String paper, String size, String value, String orient) throws Exception{
		out.print("--PAPER_INFO--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void initSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bFirstFrame){
		if(bFirstFrame){
			nStartPage=nMaxPage+1;
			nYLastPos=0;
		}
		nPageNum=nStartPage;
		nYStartPos=constStartY;
		nYEndPos=constEndY;
		nYCurPos=nYStartPos;
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
	}

	private void initChildSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bIsMultiFrame, boolean bIsFirstFrame){
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
		nYStartPos=constStartY;
		nYEndPos=constEndY;

		if(bIsMultiFrame){
			if(bIsFirstFrame){
				nStartPage=nPageNum;
				nYSavePos=nYCurPos;
				nYLastPos=0;
			}else{
				nPageNum=nStartPage;
				nYCurPos=nYSavePos;
			}
		}else{
			nStartPage=nPageNum;
		}
	}

	//Empty Row만으로 구성되어 출력 위치를 조정하기 위한 VoidBand 함수
	//nRangePos - VoidBand의 출력 영역
	//nIndex - PageSkip 함수 호출시 전달할 쉬트 인덱스
	private boolean voidBandNoneData(int nRangePos, int nIndex) throws Exception{
		int nTestPos;
		nTestPos=nYCurPos+nRangePos;
		if(isPageSkip(nTestPos)){
			pageSkip(nIndex);
			return true;
		}else{
			nYCurPos=nYCurPos+nRangePos;
			return false;
		}
	}

	private String Get0(String str){
		if(str==null){
			return "0";
		}else{
			if(str.equals("")){
				return "0";
			}else{
				return str;
			}
		}
	}

	private String GetB(String str){
		if(str==null){
			return "";
		}else{
			return str;
		}
	}

	private double SUM(double accVal, double tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(double accVal, long tmpVal){
		return(accVal+(double)tmpVal);
	}

	private long SUM(long accVal, long tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(long accVal, double tmpVal){
		return((double)accVal+tmpVal);
	}

	private long COUNT(long accuCNT){
		return ++accuCNT;
	}

	private long MIN(long maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(long maxV, double maxTempV){
		if((double)maxV<=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, double maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}
	private long MAX(long maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(long maxV, double maxTempV){
		if((double)maxV>=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, double maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}

	private double AVG(double sumVal, long cntVal){
		return(sumVal/cntVal);
	}

	private double AVG(long sumVal, long cntVal){
		return((double)sumVal/(double)cntVal);
	}

	private String aiReplace(String strAll, String strSrc, String strDest) {
		while(strAll.indexOf(strSrc) != -1) {
			strAll = strAll.substring(0, strAll.indexOf(strSrc)) + strDest + strAll.substring(strAll.indexOf(strSrc) + strSrc.length(), strAll.length());
		}
		return strAll;
	}

	private String toDate() {
		SimpleDateFormat dateFormat=new SimpleDateFormat("'#SERVERDATE#'yyyy/MM/dd/HH/mm/ss");
		java.util.Date currentDate = new java.util.Date();
		return dateFormat.format(currentDate);
	}

	final String toKor (String en){
		if(en==null){
			return "";
		}
		try{
			return new String(en.getBytes("8859_1"), "KSC5601");
		}catch(Exception e){return en;}
	}
	//문자의 폭을 조사하여 데이터의 출력 높이를 자동적으로 조정하는 함수
	private int getPrintHeight(String data, int[] charWidth, int fontSize, int cellWidth, int cellHeight, int nMaxHeight){
		int ch;
		int len = 95;
		int width = 0;
		int asciiWidth = 0;
		int linePitch = (int)(fontSize*1.4);
		int height = linePitch;
		int size = data.length();
		cellWidth = cellWidth-4;
		for (int i = 0; i < size; i++) {
			ch = data.charAt(i);

			if(ch<32 && !(ch==10 || ch==20 || ch==13)){
				continue;
			}

			if(ch>0x7F){
				width += asciiWidth;

				if (width > cellWidth) {
					width = asciiWidth;
					height += linePitch;
				}
				asciiWidth = 0;

				width += charWidth[len];
				if (width > cellWidth) {
					width = charWidth[len];
					height += linePitch;
				}
			} else if (ch==10 || ch==20) {
				width = 0;
				asciiWidth = 0;
				height += linePitch;
			} else if (ch==13) {
				width = 0;
				asciiWidth = 0;
				height += linePitch;
				if ((i != size-1) && (10 == (int)data.charAt(i+1))) {
					i++;
				}
			} else {
				if ((ch>64 && ch<91) || (ch>96 && ch<123)) {
					asciiWidth += charWidth[ch-32];
					if (i==size-1){
						width = width + asciiWidth;
						if (width>cellWidth){
							height += linePitch;
						}
					}
				} else {
					width += asciiWidth;

					if (width > cellWidth) {
						width = asciiWidth;
						height += linePitch;
					}

					asciiWidth = 0;

					width += charWidth[ch-32];
					if (width > cellWidth) {
						width = charWidth[ch-32];
						height += linePitch;
					}
				}
			}
		}

		if (height>cellHeight) {
			height=height-cellHeight;
		}else{
			height=0;
		}

		height = (int)MAX((long)height,(long)nMaxHeight);
		return height;
	}
}
%>
