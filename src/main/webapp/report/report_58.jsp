<%
/* ### Generated by AIDesigner 3.7.1.23 ### */
%>

<%@ page language="java" import="java.sql.*,java.io.*,java.text.*" %>
<%@ page contentType="text/plain; charset=euc-kr" %>

<%
Object[] userObj = null;
ReportHandler handler = new ReportHandler(request,response,userObj);
handler.service(out);
%>

<%!
class ReportHandler{
	//공통 변수 선언
	private Object[] userObj = null;
	private int nStartPage;		//각 쉬트별 시작 페이지 저장
	private int nMaxPage;		//한 쉬트가 실행된 후 생성된 최대 페이지 번호 저장
	private int nPageNum;		//현재 페이지 번호
	private int nYStartPos;		//쉬트에서 Y 시작 좌표
	private int nYEndPos;		//쉬트에서 Y 끝 좌표
	private int nYCurPos;		//현재 Y 좌표
	private int nYSavePos;		//연결된 멀티 프레임 쉬트에서 시작 Y 좌표 저장
	private int nYLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 Y 좌표 저장
	private int nXStartPos;		//쉬트에서 X 시작 좌표
	private int nXEndPos;		//쉬트에서 X 끝 좌표
	private int nXCurPos;		//현재 X 좌표
	private int nXSavePos;		//연결된 멀티 프레임 쉬트에서 시작 X 좌표 저장
	private int  nXLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 X 좌표 저장
	private boolean bIsBeforePageSkip;		//조건 밴드에서 페이지 넘기기 여부 판단
	private int nLoopRef;		//절대 양식에서 루프 참조 변수
	private String isEmpty="";		//빈 문자열 비교에 사용

	private HttpServletRequest request;
	private HttpServletResponse response;
	private JspWriter out;

	//-----데이터 변수 선언-----
	String sheet10_A1;
	String sheet10_A7;
	int[] nAutoHeight_loop=new int[2];
	String sheet10_A4;
	String sheet10_B4;
	String sheet10_C4;
	String sheet10_D4;
	String sheet10_E4;
	String sheet10_F4;
	String sheet10_G4;
	String sheet10_A5;
	double sheet10_B5;
	double sheet10_C5;
	double sheet10_D5;
	double sheet10_E5;
	double sheet10_F5;
	double sheet10_G5;
	double sheet10_B6;
	double sheet10_C6;
	double sheet10_D6;
	double sheet10_E6;
	double sheet10_F6;
	double sheet10_G6;
	String AI_CHART_OBJ1;

	//-----Connection, Statement, ResultSet 객체 선언-----
	private Connection conn_DUNET;		//DSN DUNET Connection 객체
	private java.sql.Statement stat_Query;		//ResultSet Query 객체를 생성하기 위한 Statement 객체
	private ResultSet Query;		//ResultSet Query 객체

	//-----SQL 변수 선언-----
	private String sql_Query;		//ResultSet Query 객체를 생성하기 위한 쿼리문 저장

	//-----쿼리 필드 변수 선언-----
	//ResultSet Query 객체에서 필드 값을 받는 쿼리 필드 변수
	private String Query_GUBUNNM;
	private double Query_LOW60CNT;
	private double Query_LOW70CNT;
	private double Query_LOW80CNT;
	private double Query_LOW90CNT;
	private double Query_HIGH90CNT;
	private double Query_SUMCNT;
	private double Query_AVGPT;
	private double Query_LOW60PER;
	private double Query_LOW70PER;
	private double Query_LOW80PER;
	private double Query_LOW90PER;
	private double Query_HIGH90PER;

	//파라미터 변수 선언
	String p_grcode_Param;
	String p_grseq_Param;
	String p_title_Param;
	String p_selsubj_cnt_Param;
	String p_exampoint_Param;
	String p_spreportpoint_Param;
	String p_coreportpoint_Param;
	String p_selsubj_Param;
	String p_gunpoint_Param;
	String p_steppoint_Param;
	String p_quizpoint_Param;

	//ReportHandler 생성자 함수
	ReportHandler(HttpServletRequest request,HttpServletResponse response,Object[] userObj){
		this.request=request;
		this.response=response;
		this.userObj=userObj;
	}

	//ReportHandler 서비스 함수
	void service(JspWriter out) throws Exception{
		try{    //try 구문
			this.out=out;
			nMaxPage=0;    //nMaxPage 초기화

			//스크립트 헤더 함수 호출
			getScriptHeader("A4", "2100x2970", "9", "HORIZONTAL");

			//파라미터 설정 함수 호출
			setParam();

			//고정 데이터 초기화 함수 호출
			initConstVarient();

			//Connection 및 Statement 객체 생성 함수 호출
			createConnAndStateObject();

			//쿼리문 초기화 함수 호출
			initSQLConst();

			//쉬트 함수 호출
			//SHEET=Sheet1   FRAME=0 함수 호출
			executeSheet10();

			//---------------스크립트 종료---------------
			out.print("--SCRIPT_END--\r");
		}catch(Exception e){    //catch 구문
			out.print(e);
			out.print("AI!REPORT JSP ERROR!!!!\r");
		}finally{    //finally 구문
			try{    //finally try 구문
				//DataSet Close
				if(Query!=null) Query.close();
				if(stat_Query!=null) stat_Query.close();
				if(conn_DUNET!=null) conn_DUNET.close();
			}catch(Exception e){    //finally catch 구문
			}    //end finally try
		}    //end try
	}

	//-----쉬트 함수-----
	//-----SHEET=Sheet1   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet10( ) throws Exception{
		//쉬트 초기화 함수 호출
		initSheetVariant(27, 101, 812, 534, true);

		//시작 페이지 번호 출력
		out.print("-- " + nPageNum + " PAGE --\r");

		//밴드 함수 호출
		getScriptFromtitle(true, true);    //머리글 밴드 호출
		getScriptFromfoot(true, true);    //바닥글 밴드 호출
		getScriptFromloop(true);    //반복 밴드 호출
		getScriptFromVoidBand101(true, true);    //Void 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기
	}

	//-----밴드 함수-----
	//----title HeaderBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : title
	//----밴드 종류 : 머리글 밴드
	//----bIsFrist : 쉬트 함수에서 최초로 호출될 때 true, 페이지 스킵 함수에서 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromtitle(boolean bIsFirst, boolean bIsPrint) throws Exception{
		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 함수 호출
			writeScripttitle();
		}   //end if(bIsPrint)
	}

	//----foot FooterBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : foot
	//----밴드 종류 : 바닥글 밴드
	//----bIsFrist : 쉬트 함수에서 최초로 호출될 때 true, 페이지 스킵 함수에서 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromfoot(boolean bIsFirst, boolean bIsPrint) throws Exception{
		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 함수 호출
			writeScriptfoot();
		}   //end if(bIsPrint)
	}

	//----header RepeatHeader Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : header
	//----밴드 종류 : 반복 헤더
	//----bIsFrist : 반복 밴드 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromheader(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;	//밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptheader();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----loop RepeatBand Start-----
	//-----소속 쉬트 : SHEET=Sheet1   FRAME=Frame0
	//-----밴드 이름 : loop
	//-----밴드 종류 : 반복 밴드
	//-----bIsPrint : 감추기 속성 설정 여부 true면 출력, false면 스크립트를 생성하지 않음
	private void getScriptFromloop(boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=40;    //밴드 출력 높이
		boolean bIsFirst=true;
		//폰트명 : 돋움체
		//폰트 사이즈 : 10
		//각 문자별 폭을 할당할 배열 선언
		int[] charWidth = {5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,10};

		//데이터 변수 초기화
		sheet10_A5="";
		sheet10_B5=0;
		sheet10_C5=0;
		sheet10_D5=0;
		sheet10_E5=0;
		sheet10_F5=0;
		sheet10_G5=0;
		sheet10_B6=0;
		sheet10_C6=0;
		sheet10_D6=0;
		sheet10_E6=0;
		sheet10_F6=0;
		sheet10_G6=0;

		//DataSet 객체 생성
		//ResultSet Query 객체의 생성
		if(Query==null){
			Query = stat_Query.executeQuery(sql_Query);
		}else{
			Query.beforeFirst();
		}

		while(Query.next()){   //자동으로 생성되는 반복 밴드의 루프문
			//데이터 fetch
			setFieldVariableFromQuery();	//RecordSet Query에서 필드 값 설정

			if(bIsFirst){   //밴드 호출 후 루프 내에서 한번 만 실행되는 코드
				//반복 헤더 호출 및 조건 플래그 초기화
				getScriptFromheader(bIsFirst, true);	//반복 헤더 호출
			}   //end if(bIsFirst)

			//데이터 변수 할당
			sheet10_A5=Query_GUBUNNM;
			sheet10_B5=Query_LOW60CNT;
			sheet10_C5=Query_LOW70CNT;
			sheet10_D5=Query_LOW80CNT;
			sheet10_E5=Query_LOW90CNT;
			sheet10_F5=Query_HIGH90CNT;
			sheet10_G5=Query_SUMCNT;
			sheet10_B6=Query_LOW60PER;
			sheet10_C6=Query_LOW70PER;
			sheet10_D6=Query_LOW80PER;
			sheet10_E6=Query_LOW90PER;
			sheet10_F6=Query_HIGH90PER;
			sheet10_G6=Query_AVGPT;

			//Auto Size Code
			int nHeightTmp;
			nAutoHeight_loop[0]=0;
			nAutoHeight_loop[1]=0;
			nHeightTmp=getPrintHeight(sheet10_A5, charWidth, 10, 136, 40, nAutoHeight_loop[0]);
			nAutoHeight_loop[0]=(int)MAX((long)nAutoHeight_loop[0], (long)(nHeightTmp/2));
			nHeightTmp=nHeightTmp-nAutoHeight_loop[0];
			nAutoHeight_loop[1]=(int)MAX((long)nAutoHeight_loop[1], (long)nHeightTmp);
			nAutoHeight_loop[0]=nAutoHeight_loop[0]+20;
			nAutoHeight_loop[1]=nAutoHeight_loop[0]+nAutoHeight_loop[1]+20;
			nBandHeight=nAutoHeight_loop[1];   //밴드 출력 높이 설정

			//AI 스크립트 출력
			if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
				if(isPageSkip(nYCurPos+nBandHeight)){   //스크립트 출력 영역 검사
					//페이지 스킵 함수 호출
					pageSkip(10);

					//반복 헤더 및 부모 반복단위 호출
					getScriptFromheader(false, true);	//반복 헤더 호출
				}   //end if(page skip test)

				//스크립트 출력 함수 호출
				writeScriptloop();

				//다음 출력 좌표 설정
				nYCurPos=nYCurPos+nBandHeight;
			}   //end if(bIsPrint)

			//bIsFirst 및 출력 라인 설정
			bIsFirst=false;
		}   //while end
	}

	//----VoidBand101 VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : VoidBand101
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFromVoidBand101(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=880;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//데이터 변수 초기화
			AI_CHART_OBJ1="";

			//데이터 변수 할당
			getChartDataAI_CHART_OBJ1( );
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptVoidBand101();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----스크립트 출력 함수-----
	//----title 스크립트 문 출력 함수----
	private void writeScripttitle( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT(27,38,784,1,16,0/,돋움체,RGB[0,0,0],BOLD, , ,NONE,38,1)");
		out.println(sheet10_A1+"\r");
	}

	//----foot 스크립트 문 출력 함수----
	private void writeScriptfoot( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT(27,534,784,1,11,0/,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A7+"\r");
	}

	//----header 스크립트 문 출력 함수----
	private void writeScriptheader( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos)+",136,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",136,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",136,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",136,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",136,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",136,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A4+"\r");
		out.println("^CELLBG("+(nXCurPos+136)+","+(nYCurPos)+",108,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+136)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+136)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+136)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+136)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+136)+","+(nYCurPos)+",108,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_B4+"\r");
		out.println("^CELLBG("+(nXCurPos+244)+","+(nYCurPos)+",108,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+244)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+244)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+244)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+244)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+244)+","+(nYCurPos)+",108,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_C4+"\r");
		out.println("^CELLBG("+(nXCurPos+352)+","+(nYCurPos)+",108,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+352)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+352)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+352)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+352)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+352)+","+(nYCurPos)+",108,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_D4+"\r");
		out.println("^CELLBG("+(nXCurPos+460)+","+(nYCurPos)+",108,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+460)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+460)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+460)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+460)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+460)+","+(nYCurPos)+",108,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E4+"\r");
		out.println("^CELLBG("+(nXCurPos+568)+","+(nYCurPos)+",108,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+568)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+568)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+568)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+568)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+568)+","+(nYCurPos)+",108,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F4+"\r");
		out.println("^CELLBG("+(nXCurPos+676)+","+(nYCurPos)+",108,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+676)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+676)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+676)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+676)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+676)+","+(nYCurPos)+",108,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_G4+"\r");
	}

	//----loop 스크립트 문 출력 함수----
	private void writeScriptloop( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",136,"+(nAutoHeight_loop[1])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",136,"+(nAutoHeight_loop[1])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",136,"+(nAutoHeight_loop[1])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",136,"+(nAutoHeight_loop[1])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",136,0,10,0/,돋움체,RGB[0,0,0], , , ,XL,"+(nAutoHeight_loop[1])+",1)");
		out.println(sheet10_A5+"\r");
		out.println("^CELLLINE("+(nXCurPos+136)+","+(nYCurPos)+",108,"+(nAutoHeight_loop[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+136)+","+(nYCurPos)+",108,"+(nAutoHeight_loop[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+136)+","+(nYCurPos)+",108,"+(nAutoHeight_loop[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+136)+","+(nYCurPos)+",108,"+(nAutoHeight_loop[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+136)+","+(nYCurPos)+",108,2,10,5/### \"명\"*,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_loop[0])+",1)");
		out.println(sheet10_B5+"\r");
		out.println("^CELLLINE("+(nXCurPos+244)+","+(nYCurPos)+",108,"+(nAutoHeight_loop[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+244)+","+(nYCurPos)+",108,"+(nAutoHeight_loop[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+244)+","+(nYCurPos)+",108,"+(nAutoHeight_loop[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+244)+","+(nYCurPos)+",108,"+(nAutoHeight_loop[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+244)+","+(nYCurPos)+",108,2,10,5/### \"명\"*,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_loop[0])+",1)");
		out.println(sheet10_C5+"\r");
		out.println("^CELLLINE("+(nXCurPos+352)+","+(nYCurPos)+",108,"+(nAutoHeight_loop[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+352)+","+(nYCurPos)+",108,"+(nAutoHeight_loop[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+352)+","+(nYCurPos)+",108,"+(nAutoHeight_loop[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+352)+","+(nYCurPos)+",108,"+(nAutoHeight_loop[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+352)+","+(nYCurPos)+",108,2,10,5/### \"명\"*,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_loop[0])+",1)");
		out.println(sheet10_D5+"\r");
		out.println("^CELLLINE("+(nXCurPos+460)+","+(nYCurPos)+",108,"+(nAutoHeight_loop[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+460)+","+(nYCurPos)+",108,"+(nAutoHeight_loop[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+460)+","+(nYCurPos)+",108,"+(nAutoHeight_loop[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+460)+","+(nYCurPos)+",108,"+(nAutoHeight_loop[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+460)+","+(nYCurPos)+",108,2,10,5/### \"명\"*,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_loop[0])+",1)");
		out.println(sheet10_E5+"\r");
		out.println("^CELLLINE("+(nXCurPos+568)+","+(nYCurPos)+",108,"+(nAutoHeight_loop[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+568)+","+(nYCurPos)+",108,"+(nAutoHeight_loop[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+568)+","+(nYCurPos)+",108,"+(nAutoHeight_loop[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+568)+","+(nYCurPos)+",108,"+(nAutoHeight_loop[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+568)+","+(nYCurPos)+",108,2,10,5/### \"명\"*,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_loop[0])+",1)");
		out.println(sheet10_F5+"\r");
		out.println("^CELLLINE("+(nXCurPos+676)+","+(nYCurPos)+",108,"+(nAutoHeight_loop[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+676)+","+(nYCurPos)+",108,"+(nAutoHeight_loop[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+676)+","+(nYCurPos)+",108,"+(nAutoHeight_loop[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+676)+","+(nYCurPos)+",108,"+(nAutoHeight_loop[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+676)+","+(nYCurPos)+",108,2,10,5/### \"명\"*,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_loop[0])+",1)");
		out.println(sheet10_G5+"\r");
		out.println("^CELLLINE("+(nXCurPos+136)+","+(nYCurPos+nAutoHeight_loop[0])+",108,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+136)+","+(nYCurPos+nAutoHeight_loop[0])+",108,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+136)+","+(nYCurPos+nAutoHeight_loop[0])+",108,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+136)+","+(nYCurPos+nAutoHeight_loop[0])+",108,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+136)+","+(nYCurPos+nAutoHeight_loop[0])+",108,2,10,5/##0.00 \"%\"*,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",1)");
		out.println(sheet10_B6+"\r");
		out.println("^CELLLINE("+(nXCurPos+244)+","+(nYCurPos+nAutoHeight_loop[0])+",108,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+244)+","+(nYCurPos+nAutoHeight_loop[0])+",108,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+244)+","+(nYCurPos+nAutoHeight_loop[0])+",108,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+244)+","+(nYCurPos+nAutoHeight_loop[0])+",108,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+244)+","+(nYCurPos+nAutoHeight_loop[0])+",108,2,10,5/##0.00 \"%\"*,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",1)");
		out.println(sheet10_C6+"\r");
		out.println("^CELLLINE("+(nXCurPos+352)+","+(nYCurPos+nAutoHeight_loop[0])+",108,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+352)+","+(nYCurPos+nAutoHeight_loop[0])+",108,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+352)+","+(nYCurPos+nAutoHeight_loop[0])+",108,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+352)+","+(nYCurPos+nAutoHeight_loop[0])+",108,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+352)+","+(nYCurPos+nAutoHeight_loop[0])+",108,2,10,5/##0.00 \"%\"*,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",1)");
		out.println(sheet10_D6+"\r");
		out.println("^CELLLINE("+(nXCurPos+460)+","+(nYCurPos+nAutoHeight_loop[0])+",108,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+460)+","+(nYCurPos+nAutoHeight_loop[0])+",108,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+460)+","+(nYCurPos+nAutoHeight_loop[0])+",108,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+460)+","+(nYCurPos+nAutoHeight_loop[0])+",108,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+460)+","+(nYCurPos+nAutoHeight_loop[0])+",108,2,10,5/##0.00 \"%\"*,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",1)");
		out.println(sheet10_E6+"\r");
		out.println("^CELLLINE("+(nXCurPos+568)+","+(nYCurPos+nAutoHeight_loop[0])+",108,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+568)+","+(nYCurPos+nAutoHeight_loop[0])+",108,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+568)+","+(nYCurPos+nAutoHeight_loop[0])+",108,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+568)+","+(nYCurPos+nAutoHeight_loop[0])+",108,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+568)+","+(nYCurPos+nAutoHeight_loop[0])+",108,2,10,5/##0.00 \"%\"*,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",1)");
		out.println(sheet10_F6+"\r");
		out.println("^CELLLINE("+(nXCurPos+676)+","+(nYCurPos+nAutoHeight_loop[0])+",108,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+676)+","+(nYCurPos+nAutoHeight_loop[0])+",108,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+676)+","+(nYCurPos+nAutoHeight_loop[0])+",108,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+676)+","+(nYCurPos+nAutoHeight_loop[0])+",108,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+676)+","+(nYCurPos+nAutoHeight_loop[0])+",108,2,10,5/##0.00 \"%\"*,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_loop[1]-nAutoHeight_loop[0])+",1)");
		out.println(sheet10_G6+"\r");
	}

	//----VoidBand101 스크립트 문 출력 함수----
	private void writeScriptVoidBand101( ) throws Exception{
		//스크립트문 생성
		out.println("^CHART(" + (nXCurPos+3) + "," + (nYCurPos+24) + ",779,190,report_58!000.cht)\r");
		if(!AI_CHART_OBJ1.equals(isEmpty)){
			out.print(AI_CHART_OBJ1);
			AI_CHART_OBJ1="";
		}
		out.print("--CHART_END--\r");
	}

	//파라미터 설정 함수
	private void setParam(){
		p_grcode_Param=toKor(GetB(request.getParameter("p_grcode")));
		p_grseq_Param=toKor(GetB(request.getParameter("p_grseq")));
		p_title_Param=toKor(GetB(request.getParameter("p_title")));
		p_selsubj_cnt_Param=toKor(GetB(request.getParameter("p_selsubj_cnt")));
		p_exampoint_Param=toKor(GetB(request.getParameter("p_exampoint")));
		p_spreportpoint_Param=toKor(GetB(request.getParameter("p_spreportpoint")));
		p_coreportpoint_Param=toKor(GetB(request.getParameter("p_coreportpoint")));
		p_selsubj_Param=toKor(GetB(request.getParameter("p_selsubj")));
		p_gunpoint_Param=toKor(GetB(request.getParameter("p_gunpoint")));
		p_steppoint_Param=toKor(GetB(request.getParameter("p_steppoint")));
		p_quizpoint_Param=toKor(GetB(request.getParameter("p_quizpoint")));
	}

	//-----Connection 및 Statement 객체 생성 함수-----
	private void createConnAndStateObject() throws Exception{
		//DUNET Connection 객체 생성
		Class.forName("oracle.jdbc.driver.OracleDriver").newInstance();
		conn_DUNET=DriverManager.getConnection("jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.12.203)(PORT=1521))(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.12.204)(PORT=1521))(FAILOVER=on)(LOAD_BALANCE=off))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=LOTI)))","inchlms","fhxl21");stat_Query=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
	}

	//-----SQL문 변수 초기화 함수-----
	private void initSQLConst(){
		sql_Query = "select gubunnm, low60cnt, low70cnt, low80cnt, low90cnt, high90cnt, sumcnt, avgpt , ";
		sql_Query = sql_Query + "	decode(nvl(sumcnt,0), 0, 0, round( 100*nvl(low60cnt,0)/sumcnt, 2) ) as low60per, ";
		sql_Query = sql_Query + "	decode(nvl(sumcnt,0), 0, 0, round( 100*nvl(low70cnt,0)/sumcnt, 2) ) as low70per, ";
		sql_Query = sql_Query + "	decode(nvl(sumcnt,0), 0, 0, round( 100*nvl(low80cnt,0)/sumcnt, 2) ) as low80per, ";
		sql_Query = sql_Query + "	decode(nvl(sumcnt,0), 0, 0, round( 100*nvl(low90cnt,0)/sumcnt, 2) ) as low90per, ";
		sql_Query = sql_Query + "	decode(nvl(sumcnt,0), 0, 0, round( 100*nvl(high90cnt,0)/sumcnt, 2) ) as high90per ";
		sql_Query = sql_Query + "from ( ";
		sql_Query = sql_Query + "      select 1 gubun, '총점' gubunnm, 100 cal_pt, sum(case when paccept < 60 then 1 else 0 end) low60cnt,  ";
		sql_Query = sql_Query + "      sum(case when paccept >=60 and paccept < 70 then 1 else 0 end) low70cnt,  ";
		sql_Query = sql_Query + "      sum(case when paccept >=70 and paccept < 80 then 1 else 0 end) low80cnt,  ";
		sql_Query = sql_Query + "      sum(case when paccept >=80 and paccept < 90 then 1 else 0 end) low90cnt,  ";
		sql_Query = sql_Query + "      sum(case when paccept >= 90 then 1 else 0 end) high90cnt, count(*) sumcnt ";
		sql_Query = sql_Query + "      , round(avg(paccept),2) avgpt  ";
		sql_Query = sql_Query + "      from tb_grresult gr , (select userno, grcode, grseq, count(*) selsubj_cnt from tb_stu_lec where '" + p_selsubj_Param + "' like '%' || subj || '%' group by userno, grcode, grseq) st ";
		sql_Query = sql_Query + "      where  ";
		sql_Query = sql_Query + "         gr.grcode=st.grcode(+) and gr.grseq=st.grseq(+) and gr.userno=st.userno(+) and gr.grcode='" + p_grcode_Param + "' and gr.grseq='" + p_grseq_Param + "'  ";
		sql_Query = sql_Query + "         and decode(" + p_selsubj_cnt_Param + ", 0, 1, st.selsubj_cnt, 1, 0)=1 ";
		sql_Query = sql_Query + " ";
		sql_Query = sql_Query + "      union all ";
		sql_Query = sql_Query + " ";
		sql_Query = sql_Query + "      select 2 gubun, '필답평가' gubunnm, " + p_exampoint_Param + " cal_pt, ";
		sql_Query = sql_Query + "      sum(case when " + p_exampoint_Param + " > 0 and (100*avlcount/" + p_exampoint_Param + ") < 60 then 1 else 0 end) low60cnt,  ";
		sql_Query = sql_Query + "      sum(case when " + p_exampoint_Param + " > 0 and (100*avlcount/" + p_exampoint_Param + ") >=60 and (100*avlcount/" + p_exampoint_Param + ") < 70 then 1 else 0 end) low70cnt,  ";
		sql_Query = sql_Query + "      sum(case when " + p_exampoint_Param + " > 0 and (100*avlcount/" + p_exampoint_Param + ") >=70 and (100*avlcount/" + p_exampoint_Param + ") < 80 then 1 else 0 end) low80cnt,  ";
		sql_Query = sql_Query + "      sum(case when " + p_exampoint_Param + " > 0 and (100*avlcount/" + p_exampoint_Param + ") >=80 and (100*avlcount/" + p_exampoint_Param + ") < 90 then 1 else 0 end) low90cnt,  ";
		sql_Query = sql_Query + "      sum(case when " + p_exampoint_Param + " > 0 and (100*avlcount/" + p_exampoint_Param + ") >= 90 then 1 else 0 end) high90cnt, count(*) sumcnt  ";
		sql_Query = sql_Query + "      ,round(avg(avlcount),2) avgpt ";
		sql_Query = sql_Query + "      from ( ";
		sql_Query = sql_Query + "           select sr.userno, sum(sr.avlcount) avlcount  ";
		sql_Query = sql_Query + "           from tb_subjresult sr ,  (select userno, grcode, grseq, count(*) selsubj_cnt from tb_stu_lec where '" + p_selsubj_Param + "' like '%' || subj || '%' group by userno, grcode, grseq) st ";
		sql_Query = sql_Query + "           where sr.grcode=st.grcode(+) and sr.grseq=st.grseq(+) and sr.userno=st.userno(+) ";
		sql_Query = sql_Query + "                    and sr.grcode='" + p_grcode_Param + "' and sr.grseq='" + p_grseq_Param + "' and decode(" + p_selsubj_cnt_Param + ", 0, 1, st.selsubj_cnt, 1, 0)=1 ";
		sql_Query = sql_Query + "      group by sr.userno )  ";
		sql_Query = sql_Query + " ";
		sql_Query = sql_Query + "      union all ";
		sql_Query = sql_Query + " ";
		sql_Query = sql_Query + "      select 3 gubun, '과제물과목과제평가' gubunnm,  " + p_spreportpoint_Param + " cal_pt, ";
		sql_Query = sql_Query + "               sum(case when " + p_spreportpoint_Param + " > 0 and (100*avreport/" + p_spreportpoint_Param + ") < 60 then 1 else 0 end) low60cnt,  ";
		sql_Query = sql_Query + "              sum(case when " + p_spreportpoint_Param + " > 0 and (100*avreport/" + p_spreportpoint_Param + ") >=60 and (100*avreport/" + p_spreportpoint_Param + ") < 70 then 1 else 0 end) low70cnt,  ";
		sql_Query = sql_Query + "              sum(case when " + p_spreportpoint_Param + " > 0 and (100*avreport/" + p_spreportpoint_Param + ") >=70 and (100*avreport/" + p_spreportpoint_Param + ") < 80 then 1 else 0 end) low80cnt,  ";
		sql_Query = sql_Query + "              sum(case when " + p_spreportpoint_Param + " > 0 and (100*avreport/" + p_spreportpoint_Param + ") >=80 and (100*avreport/" + p_spreportpoint_Param + ") < 90 then 1 else 0 end) low90cnt,  ";
		sql_Query = sql_Query + "              sum(case when " + p_spreportpoint_Param + " > 0 and (100*avreport/" + p_spreportpoint_Param + ") >= 90 then 1 else 0 end) high90cnt, count(*) sumcnt  ";
		sql_Query = sql_Query + "              ,round(avg(avreport),2) avgpt ";
		sql_Query = sql_Query + "      from ( ";
		sql_Query = sql_Query + "           select sr.userno, sum(sr.avreport) avreport  ";
		sql_Query = sql_Query + "          from tb_subjresult sr ,(select userno, grcode, grseq, count(*) selsubj_cnt from tb_stu_lec where '" + p_selsubj_Param + "' like '%' || subj || '%' group by userno, grcode, grseq) st ";
		sql_Query = sql_Query + "          where sr.subj = 'SUB1000025' and sr.grcode=st.grcode(+) and sr.grseq=st.grseq(+) and sr.userno=st.userno(+) ";
		sql_Query = sql_Query + "                   and sr.grcode='" + p_grcode_Param + "' and sr.grseq='" + p_grseq_Param + "' and decode(" + p_selsubj_cnt_Param + ", 0, 1, st.selsubj_cnt, 1, 0)=1 group by sr.userno )  ";
		sql_Query = sql_Query + " ";
		sql_Query = sql_Query + "      union all ";
		sql_Query = sql_Query + " ";
		sql_Query = sql_Query + "      select 4 gubun, '일반과목과제물평가' gubunnm,  " + p_coreportpoint_Param + " cal_pt, ";
		sql_Query = sql_Query + "         sum(case when " + p_coreportpoint_Param + " > 0 and (100*avreport/" + p_coreportpoint_Param + ") < 60 then 1 else 0 end) low60cnt,  ";
		sql_Query = sql_Query + "         sum(case when " + p_coreportpoint_Param + " > 0 and (100*avreport/" + p_coreportpoint_Param + ") >=60 and (100*avreport/" + p_coreportpoint_Param + ") < 70 then 1 else 0 end) low70cnt,  ";
		sql_Query = sql_Query + "         sum(case when " + p_coreportpoint_Param + " > 0 and (100*avreport/" + p_coreportpoint_Param + ") >=70 and (100*avreport/" + p_coreportpoint_Param + ") < 80 then 1 else 0 end) low80cnt,  ";
		sql_Query = sql_Query + "         sum(case when " + p_coreportpoint_Param + " > 0 and (100*avreport/" + p_coreportpoint_Param + ") >=80 and (100*avreport/" + p_coreportpoint_Param + ") < 90 then 1 else 0 end) low90cnt,  ";
		sql_Query = sql_Query + "         sum(case when " + p_coreportpoint_Param + " > 0 and (100*avreport/" + p_coreportpoint_Param + ") >= 90 then 1 else 0 end) high90cnt, count(*) sumcnt  ";
		sql_Query = sql_Query + "         ,round(avg(avreport),2) avgpt ";
		sql_Query = sql_Query + "     from ( ";
		sql_Query = sql_Query + "        select sr.userno, sum(sr.avreport) avreport  ";
		sql_Query = sql_Query + "        from tb_subjresult sr, (select userno, grcode, grseq, count(*) selsubj_cnt from tb_stu_lec where '" + p_selsubj_Param + "' like '%' || subj || '%' group by userno, grcode, grseq) st ";
		sql_Query = sql_Query + "        where sr.subj <> 'SUB1000025' and sr.grcode=st.grcode(+) and sr.grseq=st.grseq(+) and sr.userno=st.userno(+) ";
		sql_Query = sql_Query + "                 and sr.grcode='" + p_grcode_Param + "' and sr.grseq='" + p_grseq_Param + "' and decode(" + p_selsubj_cnt_Param + ", 0, 1, st.selsubj_cnt, 1, 0)=1 group by sr.userno )  ";
		sql_Query = sql_Query + "		 ";
		sql_Query = sql_Query + "      union all ";
		sql_Query = sql_Query + "           ";
		sql_Query = sql_Query + "      select 5 gubun, '근태평가' gubunnm, " + p_gunpoint_Param + " cal_pt, ";
		sql_Query = sql_Query + "      sum(case when " + p_gunpoint_Param + " > 0 and (100*avcourse/" + p_gunpoint_Param + ") < 60 then 1 else 0 end) low60cnt,  ";
		sql_Query = sql_Query + "      sum(case when " + p_gunpoint_Param + " > 0 and (100*avcourse/" + p_gunpoint_Param + ") >=60 and (100*avcourse/" + p_gunpoint_Param + ") < 70 then 1 else 0 end) low70cnt,  ";
		sql_Query = sql_Query + "      sum(case when " + p_gunpoint_Param + " > 0 and (100*avcourse/" + p_gunpoint_Param + ") >=70 and (100*avcourse/" + p_gunpoint_Param + ") < 80 then 1 else 0 end) low80cnt,  ";
		sql_Query = sql_Query + "      sum(case when " + p_gunpoint_Param + " > 0 and (100*avcourse/" + p_gunpoint_Param + ") >=80 and (100*avcourse/" + p_gunpoint_Param + ") < 90 then 1 else 0 end) low90cnt,  ";
		sql_Query = sql_Query + "      sum(case when " + p_gunpoint_Param + " > 0 and (100*avcourse/" + p_gunpoint_Param + ") >= 90 then 1 else 0 end) high90cnt, count(*) sumcnt  ";
		sql_Query = sql_Query + "      ,round(avg(avcourse),2) avgpt ";
		sql_Query = sql_Query + "      from ( ";
		sql_Query = sql_Query + "         select sr.userno, sum(sr.avcourse) avcourse  ";
		sql_Query = sql_Query + "         from tb_subjresult sr, (select userno, grcode, grseq, count(*) selsubj_cnt from tb_stu_lec where '" + p_selsubj_Param + "' like '%' || subj || '%' group by userno, grcode, grseq) st ";
		sql_Query = sql_Query + "         where sr.subj = 'GUN0000001' and sr.grcode=st.grcode(+) and sr.grseq=st.grseq(+) and sr.userno=st.userno(+) ";
		sql_Query = sql_Query + "                   and sr.grcode='" + p_grcode_Param + "' and sr.grseq='" + p_grseq_Param + "' and decode(" + p_selsubj_cnt_Param + ", 0, 1, st.selsubj_cnt, 1, 0)=1 group by sr.userno )  ";
		sql_Query = sql_Query + " ";
		sql_Query = sql_Query + "     union all ";
		sql_Query = sql_Query + " ";
		sql_Query = sql_Query + "      select 6 gubun,  '진도율평가' gubunnm, " + p_steppoint_Param + " cal_pt, ";
		sql_Query = sql_Query + "      sum(case when " + p_steppoint_Param + " > 0 and (100*avcourse/" + p_steppoint_Param + ") < 60 then 1 else 0 end) low60cnt,  ";
		sql_Query = sql_Query + "      sum(case when " + p_steppoint_Param + " > 0 and (100*avcourse/" + p_steppoint_Param + ") >=60 and (100*avcourse/" + p_steppoint_Param + ") < 70 then 1 else 0 end) low70cnt,  ";
		sql_Query = sql_Query + "      sum(case when " + p_steppoint_Param + " > 0 and (100*avcourse/" + p_steppoint_Param + ") >=70 and (100*avcourse/" + p_steppoint_Param + ") < 80 then 1 else 0 end) low80cnt,  ";
		sql_Query = sql_Query + "      sum(case when " + p_steppoint_Param + " > 0 and (100*avcourse/" + p_steppoint_Param + ") >=80 and (100*avcourse/" + p_steppoint_Param + ") < 90 then 1 else 0 end) low90cnt,  ";
		sql_Query = sql_Query + "      sum(case when " + p_steppoint_Param + " > 0 and (100*avcourse/" + p_steppoint_Param + ") >= 90 then 1 else 0 end) high90cnt, count(*) sumcnt  ";
		sql_Query = sql_Query + "      ,round(avg(avcourse),2) avgpt ";
		sql_Query = sql_Query + "      from ( ";
		sql_Query = sql_Query + "         select sr.userno, sum(sr.avcourse) avcourse  ";
		sql_Query = sql_Query + "         from tb_subjresult sr ,  (select userno, grcode, grseq, count(*) selsubj_cnt from tb_stu_lec where '" + p_selsubj_Param + "' like '%' || subj || '%' group by userno, grcode, grseq) st ";
		sql_Query = sql_Query + "         where sr.subj <> 'GUN0000001' and sr.grcode=st.grcode(+) and sr.grseq=st.grseq(+) and sr.userno=st.userno(+) ";
		sql_Query = sql_Query + "                  and sr.grcode='" + p_grcode_Param + "' and sr.grseq='" + p_grseq_Param + "' and decode(" + p_selsubj_cnt_Param + ", 0, 1, st.selsubj_cnt, 1, 0)=1 group by sr.userno )  ";
		sql_Query = sql_Query + " ";
		sql_Query = sql_Query + "     union all ";
		sql_Query = sql_Query + " ";
		sql_Query = sql_Query + "     select 7 gubun,  '차시평가' gubunnm, " + p_quizpoint_Param + " cal_pt, ";
		sql_Query = sql_Query + "     sum(case when " + p_quizpoint_Param + " > 0 and (100*avquiz/" + p_quizpoint_Param + ") < 60 then 1 else 0 end) low60cnt,  ";
		sql_Query = sql_Query + "     sum(case when " + p_quizpoint_Param + " > 0 and (100*avquiz/" + p_quizpoint_Param + ") >=60 and (100*avquiz/" + p_quizpoint_Param + ") < 70 then 1 else 0 end) low70cnt,  ";
		sql_Query = sql_Query + "     sum(case when " + p_quizpoint_Param + " > 0 and (100*avquiz/" + p_quizpoint_Param + ") >=70 and (100*avquiz/" + p_quizpoint_Param + ") < 80 then 1 else 0 end) low80cnt,  ";
		sql_Query = sql_Query + "     sum(case when " + p_quizpoint_Param + " > 0 and (100*avquiz/" + p_quizpoint_Param + ") >=80 and (100*avquiz/" + p_quizpoint_Param + ") < 90 then 1 else 0 end) low90cnt,  ";
		sql_Query = sql_Query + "     sum(case when " + p_quizpoint_Param + " > 0 and (100*avquiz/" + p_quizpoint_Param + ") >= 90 then 1 else 0 end) high90cnt, count(*) sumcnt  ";
		sql_Query = sql_Query + "     ,round(avg(avquiz),2) avgpt ";
		sql_Query = sql_Query + "     from ( ";
		sql_Query = sql_Query + "          select sr.userno, sum(sr.avquiz) avquiz  ";
		sql_Query = sql_Query + "          from tb_subjresult sr ,  (select userno, grcode, grseq, count(*) selsubj_cnt from tb_stu_lec where '" + p_selsubj_Param + "' like '%' || subj || '%' group by userno, grcode, grseq) st ";
		sql_Query = sql_Query + "          where sr.grcode=st.grcode(+) and sr.grseq=st.grseq(+) and sr.userno=st.userno(+) and sr.grcode='" + p_grcode_Param + "' and sr.grseq='" + p_grseq_Param + "'  ";
		sql_Query = sql_Query + "                   and decode(" + p_selsubj_cnt_Param + ", 0, 1, st.selsubj_cnt, 1, 0)=1 group by sr.userno )  ";
		sql_Query = sql_Query + "		 ";
		sql_Query = sql_Query + "     union all  ";
		sql_Query = sql_Query + "     select 9 gubun, min(lecnm) gubunnm, min(totpoint) cal_pt, ";
		sql_Query = sql_Query + "              sum(case when (100*paccept/totpoint) < 60 then 1 else 0 end) low60cnt,  ";
		sql_Query = sql_Query + "              sum(case when (100*paccept/totpoint) >=60 and (100*paccept/totpoint) < 70 then 1 else 0 end) low70cnt,  ";
		sql_Query = sql_Query + "              sum(case when (100*paccept/totpoint) >=70 and (100*paccept/totpoint) < 80 then 1 else 0 end) low80cnt,  ";
		sql_Query = sql_Query + "              sum(case when (100*paccept/totpoint) >=80 and (100*paccept/totpoint) < 90 then 1 else 0 end) low90cnt,  ";
		sql_Query = sql_Query + "              sum(case when (100*paccept/totpoint) >= 90 then 1 else 0 end) high90cnt, count(*) sumcnt  ";
		sql_Query = sql_Query + "              ,round(avg(paccept),2) avgpt ";
		sql_Query = sql_Query + "     from ( ";
		sql_Query = sql_Query + "          select sr.subj, min(sj.lecnm) lecnm, sr.userno, sum(sr.paccept) paccept, min(sj.totpoint) totpoint from tb_subjresult sr, tb_subjseq sj, tb_subj sb, (select userno, grcode, grseq, count(*) selsubj_cnt from tb_stu_lec where '" + p_selsubj_Param + "' like '%' || subj || '%' group by userno, grcode, grseq) st  ";
		sql_Query = sql_Query + "          where sr.subj=sb.subj and sr.grcode=sj.grcode and sr.grseq=sj.grseq and sr.subj=sj.subj  ";
		sql_Query = sql_Query + "                  and sr.grcode='" + p_grcode_Param + "' and sr.grseq='" + p_grseq_Param + "' and sr.subj not in ('GUN0000001','SUB1000025')  ";
		sql_Query = sql_Query + "                  and sr.grcode=st.grcode(+) and sr.grseq=st.grseq(+) and sr.userno=st.userno(+) and decode(" + p_selsubj_cnt_Param + ", 0, 1, st.selsubj_cnt, 1, 0)=1 ";
		sql_Query = sql_Query + "                  and sb.subjtype='S' and sj.totpoint > 0 group by sr.subj, sr.userno )  ";
		sql_Query = sql_Query + "     group by subj)  ";
		sql_Query = sql_Query + " ";
		sql_Query = sql_Query + "where cal_pt > 0 ";
		sql_Query = sql_Query + "order by gubun, gubunnm";
	}

	//-----ResultSet 객체에서 필드 값 설정 함수-----
	//ResultSet Query 객체에서 필드 값 설정 함수
	private void setFieldVariableFromQuery() throws Exception{
		Query_GUBUNNM=GetB(Query.getString(1));
		Query_LOW60CNT=Query.getDouble(2);
		Query_LOW70CNT=Query.getDouble(3);
		Query_LOW80CNT=Query.getDouble(4);
		Query_LOW90CNT=Query.getDouble(5);
		Query_HIGH90CNT=Query.getDouble(6);
		Query_SUMCNT=Query.getDouble(7);
		Query_AVGPT=Query.getDouble(8);
		Query_LOW60PER=Query.getDouble(9);
		Query_LOW70PER=Query.getDouble(10);
		Query_LOW80PER=Query.getDouble(11);
		Query_LOW90PER=Query.getDouble(12);
		Query_HIGH90PER=Query.getDouble(13);
	}

	//ResultSet Query 객체의 필드 값 초기화 함수
	private void setFieldInitFromQuery(){
		Query_GUBUNNM="";
		Query_LOW60CNT=0;
		Query_LOW70CNT=0;
		Query_LOW80CNT=0;
		Query_LOW90CNT=0;
		Query_HIGH90CNT=0;
		Query_SUMCNT=0;
		Query_AVGPT=0;
		Query_LOW60PER=0;
		Query_LOW70PER=0;
		Query_LOW80PER=0;
		Query_LOW90PER=0;
		Query_HIGH90PER=0;
	}

	//-----고정 데이터 초기화 함수-----
	private void initConstVarient(){
		sheet10_A1="점 수 별 - 성 적 분 포 도";
		sheet10_A7="#PAGE / #TOTALPAGE";
		sheet10_A4="구분";
		sheet10_B4="60% 미만";
		sheet10_C4="70% 미만";
		sheet10_D4="80% 미만";
		sheet10_E4="90% 미만";
		sheet10_F4="90% 이상";
		sheet10_G4="총계";
	}

	//-----페이지 스킵 관련 함수-----
	//페이지 스킵시 호출되는 함수로서 페이지 번호를 증가시키고 페이지 지시문 출력 그리고 Y좌표 초기화
	//매개변수에 따라 해당 쉬트의 배경 이미지, 머리글 밴드, 바닥글 밴드 함수 호출
	private void pageSkip(int nIndex) throws Exception{
		nXCurPos=nXStartPos;
		nYCurPos=nYStartPos;
		nPageNum=nPageNum+1;
		out.print("-- " + nPageNum + " PAGE --\r");

		switch(nIndex){
			case 10:		//SHEET=Sheet=1   FRAME=0에서 페이지 스킵시
			getScriptFromtitle(false, true);		//머리글 밴드 호출
			getScriptFromfoot(false, true);		//바닥글 밴드 호출
			break;
		}
	}

	//페이지 스킵이 필요한지 검사하는 함수
	private boolean isPageSkip(int nTestPos){
		if(nTestPos>nYEndPos){
			return true;
		}else{
			return false;
		}
	}

	//----AI_CHART_OBJ1 챠트 데이터 함수----
	private void getChartDataAI_CHART_OBJ1( ) throws Exception{
		//DataSet 객체 생성
		//ResultSet Query 객체의 생성
		if(Query==null){
			Query = stat_Query.executeQuery(sql_Query);
		}else{
			Query.beforeFirst();
		}
		if(!Query.isBeforeFirst()){		//생성된 ResultSet에 레코드가 없으면
			return;
		}

		//계열(Series) 필드 설정
		AI_CHART_OBJ1="\t";
		AI_CHART_OBJ1=AI_CHART_OBJ1 + "AVGPT\r\n";

		while(Query.next()){   //데이터 루프문
			//데이터 fetch
			setFieldVariableFromQuery();   //RecordSet Query에서 필드 값 설정

			//X축 레이블 필드 설정
			AI_CHART_OBJ1=AI_CHART_OBJ1 + Query_GUBUNNM + "\t";

			//데이터 설정
			AI_CHART_OBJ1=AI_CHART_OBJ1 + Query_AVGPT + "\r\n";
		}   //while end
	}

	//-----공통 함수 선언-----
	private void getScriptHeader(String paper, String size, String value, String orient) throws Exception{
		out.print("--SCRIPT_START31--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void getSheetPaperInfo(String paper, String size, String value, String orient) throws Exception{
		out.print("--PAPER_INFO--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void initSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bFirstFrame){
		if(bFirstFrame){
			nStartPage=nMaxPage+1;
			nYLastPos=0;
		}
		nPageNum=nStartPage;
		nYStartPos=constStartY;
		nYEndPos=constEndY;
		nYCurPos=nYStartPos;
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
	}

	private void initChildSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bIsMultiFrame, boolean bIsFirstFrame){
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
		nYStartPos=constStartY;
		nYEndPos=constEndY;

		if(bIsMultiFrame){
			if(bIsFirstFrame){
				nStartPage=nPageNum;
				nYSavePos=nYCurPos;
				nYLastPos=0;
			}else{
				nPageNum=nStartPage;
				nYCurPos=nYSavePos;
			}
		}else{
			nStartPage=nPageNum;
		}
	}

	//Empty Row만으로 구성되어 출력 위치를 조정하기 위한 VoidBand 함수
	//nRangePos - VoidBand의 출력 영역
	//nIndex - PageSkip 함수 호출시 전달할 쉬트 인덱스
	private boolean voidBandNoneData(int nRangePos, int nIndex) throws Exception{
		int nTestPos;
		nTestPos=nYCurPos+nRangePos;
		if(isPageSkip(nTestPos)){
			pageSkip(nIndex);
			return true;
		}else{
			nYCurPos=nYCurPos+nRangePos;
			return false;
		}
	}

	private String Get0(String str){
		if(str==null){
			return "0";
		}else{
			if(str.equals("")){
				return "0";
			}else{
				return str;
			}
		}
	}

	private String GetB(String str){
		if(str==null){
			return "";
		}else{
			return str;
		}
	}

	private double SUM(double accVal, double tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(double accVal, long tmpVal){
		return(accVal+(double)tmpVal);
	}

	private long SUM(long accVal, long tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(long accVal, double tmpVal){
		return((double)accVal+tmpVal);
	}

	private long COUNT(long accuCNT){
		return ++accuCNT;
	}

	private long MIN(long maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(long maxV, double maxTempV){
		if((double)maxV<=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, double maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}
	private long MAX(long maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(long maxV, double maxTempV){
		if((double)maxV>=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, double maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}

	private double AVG(double sumVal, long cntVal){
		return(sumVal/cntVal);
	}

	private double AVG(long sumVal, long cntVal){
		return((double)sumVal/(double)cntVal);
	}

	private String aiReplace(String strAll, String strSrc, String strDest) {
		while(strAll.indexOf(strSrc) != -1) {
			strAll = strAll.substring(0, strAll.indexOf(strSrc)) + strDest + strAll.substring(strAll.indexOf(strSrc) + strSrc.length(), strAll.length());
		}
		return strAll;
	}

	private String toDate() {
		SimpleDateFormat dateFormat=new SimpleDateFormat("'#SERVERDATE#'yyyy/MM/dd/HH/mm/ss");
		java.util.Date currentDate = new java.util.Date();
		return dateFormat.format(currentDate);
	}

	final String toKor (String en){
		if(en==null){
			return "";
		}
		try{
			return new String(en.getBytes("8859_1"), "KSC5601");
		}catch(Exception e){return en;}
	}
	//문자의 폭을 조사하여 데이터의 출력 높이를 자동적으로 조정하는 함수
	private int getPrintHeight(String data, int[] charWidth, int fontSize, int cellWidth, int cellHeight, int nMaxHeight){
		int ch;
		int len = 95;
		int width = 0;
		int asciiWidth = 0;
		int linePitch = (int)(fontSize*1.4);
		int height = linePitch;
		int size = data.length();
		cellWidth = cellWidth-4;
		for (int i = 0; i < size; i++) {
			ch = data.charAt(i);

			if(ch<32 && !(ch==10 || ch==20 || ch==13)){
				continue;
			}

			if(ch>0x7F){
				width += asciiWidth;

				if (width > cellWidth) {
					width = asciiWidth;
					height += linePitch;
				}
				asciiWidth = 0;

				width += charWidth[len];
				if (width > cellWidth) {
					width = charWidth[len];
					height += linePitch;
				}
			} else if (ch==10 || ch==20) {
				width = 0;
				asciiWidth = 0;
				height += linePitch;
			} else if (ch==13) {
				width = 0;
				asciiWidth = 0;
				height += linePitch;
				if ((i != size-1) && (10 == (int)data.charAt(i+1))) {
					i++;
				}
			} else {
				if ((ch>64 && ch<91) || (ch>96 && ch<123)) {
					asciiWidth += charWidth[ch-32];
					if (i==size-1){
						width = width + asciiWidth;
						if (width>cellWidth){
							height += linePitch;
						}
					}
				} else {
					width += asciiWidth;

					if (width > cellWidth) {
						width = asciiWidth;
						height += linePitch;
					}

					asciiWidth = 0;

					width += charWidth[ch-32];
					if (width > cellWidth) {
						width = charWidth[ch-32];
						height += linePitch;
					}
				}
			}
		}

		if (height>cellHeight) {
			height=height-cellHeight;
		}else{
			height=0;
		}

		height = (int)MAX((long)height,(long)nMaxHeight);
		return height;
	}
}
%>
