<%
/* ### Generated by AIDesigner 3.7.1.23 ### */
%>

<%@ page language="java" import="java.sql.*,java.io.*,java.text.*" %>
<%@ page contentType="text/plain; charset=euc-kr" %>

<%
Object[] userObj = null;
ReportHandler handler = new ReportHandler(request,response,userObj);
handler.service(out);
%>

<%!
class ReportHandler{
	//공통 변수 선언
	private Object[] userObj = null;
	private int nStartPage;		//각 쉬트별 시작 페이지 저장
	private int nMaxPage;		//한 쉬트가 실행된 후 생성된 최대 페이지 번호 저장
	private int nPageNum;		//현재 페이지 번호
	private int nYStartPos;		//쉬트에서 Y 시작 좌표
	private int nYEndPos;		//쉬트에서 Y 끝 좌표
	private int nYCurPos;		//현재 Y 좌표
	private int nYSavePos;		//연결된 멀티 프레임 쉬트에서 시작 Y 좌표 저장
	private int nYLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 Y 좌표 저장
	private int nXStartPos;		//쉬트에서 X 시작 좌표
	private int nXEndPos;		//쉬트에서 X 끝 좌표
	private int nXCurPos;		//현재 X 좌표
	private int nXSavePos;		//연결된 멀티 프레임 쉬트에서 시작 X 좌표 저장
	private int  nXLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 X 좌표 저장
	private boolean bIsBeforePageSkip;		//조건 밴드에서 페이지 넘기기 여부 판단
	private int nLoopRef;		//절대 양식에서 루프 참조 변수
	private String isEmpty="";		//빈 문자열 비교에 사용

	private HttpServletRequest request;
	private HttpServletResponse response;
	private JspWriter out;

	//-----데이터 변수 선언-----
	String sheet10_A1;
	String sheet10_A2;
	String sheet10_A4;
	String sheet10_A10;
	String sheet10_A5;
	String sheet10_B5;
	String sheet10_C5;
	String sheet10_D5;
	String sheet10_E5;
	String sheet10_J5;
	String sheet10_K5;
	String sheet10_L5;
	String sheet10_E6;
	String sheet10_F6;
	String sheet10_G6;
	String sheet10_H6;
	String sheet10_I6;
	String sheet10_A7;
	double sheet10_C7;
	double sheet10_D7;
	double sheet10_E7;
	double sheet10_F7;
	double sheet10_G7;
	double sheet10_H7;
	double sheet10_I7;
	double sheet10_J7;
	double sheet10_K7;
	double sheet10_L7;
	String sheet10_A8;
	String sheet10_B8;
	double sheet10_C8;
	double sheet10_D8;
	double sheet10_E8;
	double sheet10_F8;
	double sheet10_G8;
	double sheet10_H8;
	double sheet10_I8;
	double sheet10_J8;
	double sheet10_K8;
	double sheet10_L8;
	String sheet10_B9;
	double sheet10_C9;
	double sheet10_D9;
	double sheet10_E9;
	double sheet10_F9;
	double sheet10_G9;
	double sheet10_H9;
	double sheet10_I9;
	double sheet10_J9;
	double sheet10_K9;
	double sheet10_L9;
	String AI_CHART_OBJ4;

	//-----Connection, Statement, ResultSet 객체 선언-----
	private Connection conn_DUNET;		//DSN DUNET Connection 객체
	private java.sql.Statement stat_totSum;		//ResultSet totSum 객체를 생성하기 위한 Statement 객체
	private ResultSet totSum;		//ResultSet totSum 객체
	private java.sql.Statement stat_detail;		//ResultSet detail 객체를 생성하기 위한 Statement 객체
	private ResultSet detail;		//ResultSet detail 객체
	private java.sql.Statement stat_master;		//ResultSet master 객체를 생성하기 위한 Statement 객체
	private ResultSet master;		//ResultSet master 객체

	//-----SQL 변수 선언-----
	private String sql_totSum;		//ResultSet totSum 객체를 생성하기 위한 쿼리문 저장
	private String sql_detail;		//ResultSet detail 객체를 생성하기 위한 쿼리문 저장
	private String sql_master;		//ResultSet master 객체를 생성하기 위한 쿼리문 저장

	//-----쿼리 필드 변수 선언-----
	//ResultSet totSum 객체에서 필드 값을 받는 쿼리 필드 변수
	private double totSum_TOT_TOTNO;
	private double totSum_TOT_PACCEPT;
	private double totSum_TOT_TOTCOUNT1;
	private double totSum_TOT_TOTCOUNT2;
	private double totSum_TOT_TOTCOUNT3;
	private double totSum_TOT_TOTCOUNT4;
	private double totSum_TOT_TOTCOUNT5;
	private double totSum_TOT_MAXPOINT;
	private double totSum_TOT_MINPOINT;
	private double totSum_TOT_OLDPOINT;

	//ResultSet detail 객체에서 필드 값을 받는 쿼리 필드 변수
	private String detail_GRCODENM;
	private double detail_TOTNO;
	private double detail_PACCEPT;
	private double detail_TOTCOUNT1;
	private double detail_TOTCOUNT2;
	private double detail_TOTCOUNT3;
	private double detail_TOTCOUNT4;
	private double detail_TOTCOUNT5;
	private double detail_최고;
	private double detail_최저;
	private double detail_전년도평균;
	private String detail_GUBUN;
	private String detail_GUBUNNM;
	private String detail_GRCODE;
	private String detail_GRSEQ;

	//ResultSet master 객체에서 필드 값을 받는 쿼리 필드 변수
	private String master_GUBUNNM;
	private String master_GUBUN;
	private double master_TOT_TOTNO;
	private double master_TOT_PACCEPT;
	private double master_TOT_TOTCOUNT1;
	private double master_TOT_TOTCOUNT2;
	private double master_TOT_TOTCOUNT3;
	private double master_TOT_TOTCOUNT4;
	private double master_TOT_TOTCOUNT5;
	private double master_최고;
	private double master_최저;
	private double master_전년도평균;

	//파라미터 변수 선언
	String p_startyear_Param;

	//ReportHandler 생성자 함수
	ReportHandler(HttpServletRequest request,HttpServletResponse response,Object[] userObj){
		this.request=request;
		this.response=response;
		this.userObj=userObj;
	}

	//ReportHandler 서비스 함수
	void service(JspWriter out) throws Exception{
		try{    //try 구문
			this.out=out;
			nMaxPage=0;    //nMaxPage 초기화

			//스크립트 헤더 함수 호출
			getScriptHeader("A4", "2100x2970", "9", "HORIZONTAL");

			//파라미터 설정 함수 호출
			setParam();

			//고정 데이터 초기화 함수 호출
			initConstVarient();

			//Connection 및 Statement 객체 생성 함수 호출
			createConnAndStateObject();

			//쿼리문 초기화 함수 호출
			initSQLConst();

			//쉬트 함수 호출
			//SHEET=Sheet1   FRAME=0 함수 호출
			executeSheet10();

			//---------------스크립트 종료---------------
			out.print("--SCRIPT_END--\r");
		}catch(Exception e){    //catch 구문
			out.print(e);
			out.print("AI!REPORT JSP ERROR!!!!\r");
		}finally{    //finally 구문
			try{    //finally try 구문
				//DataSet Close
				if(master!=null) master.close();
				if(stat_master!=null) stat_master.close();
				if(stat_detail!=null) stat_detail.close();
				if(totSum!=null) totSum.close();
				if(stat_totSum!=null) stat_totSum.close();
				if(conn_DUNET!=null) conn_DUNET.close();
			}catch(Exception e){    //finally catch 구문
			}    //end finally try
		}    //end try
	}

	//-----쉬트 함수-----
	//-----SHEET=Sheet1   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet10( ) throws Exception{
		//쉬트 초기화 함수 호출
		initSheetVariant(45, 149, 802, 531, true);

		//시작 페이지 번호 출력
		out.print("-- " + nPageNum + " PAGE --\r");

		//밴드 함수 호출
		getScriptFromtitle(true, true);    //머리글 밴드 호출
		getScriptFromfoot(true, true);    //바닥글 밴드 호출
		getScriptFrommaster(true);    //반복 밴드 호출
		getScriptFromVoidBand102(true, true);    //Void 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기
	}

	//-----밴드 함수-----
	//----title HeaderBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : title
	//----밴드 종류 : 머리글 밴드
	//----bIsFrist : 쉬트 함수에서 최초로 호출될 때 true, 페이지 스킵 함수에서 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromtitle(boolean bIsFirst, boolean bIsPrint) throws Exception{
		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 함수 호출
			writeScripttitle();
		}   //end if(bIsPrint)
	}

	//----foot FooterBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : foot
	//----밴드 종류 : 바닥글 밴드
	//----bIsFrist : 쉬트 함수에서 최초로 호출될 때 true, 페이지 스킵 함수에서 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromfoot(boolean bIsFirst, boolean bIsPrint) throws Exception{
		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 함수 호출
			writeScriptfoot();
		}   //end if(bIsPrint)
	}

	//----header RepeatHeader Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : header
	//----밴드 종류 : 반복 헤더
	//----bIsFrist : 반복 밴드 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromheader(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=60;	//밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//DataSet 객체 생성
			//ResultSet totSum 객체의 생성
			if(totSum==null){
				totSum = stat_totSum.executeQuery(sql_totSum);
			}else{
				totSum.beforeFirst();
			}

			//데이터 fetch
			if(totSum.next()){
				setFieldVariableFromtotSum();	//ResultSet totSum에서 필드 값 설정
			}else{
				setFieldInitFromtotSum();	//ResultSet totSum의 필드 값 초기화
			}

			//데이터 변수 초기화
			sheet10_C7=0;
			sheet10_D7=0;
			sheet10_E7=0;
			sheet10_F7=0;
			sheet10_G7=0;
			sheet10_H7=0;
			sheet10_I7=0;
			sheet10_J7=0;
			sheet10_K7=0;
			sheet10_L7=0;

			//데이터 변수 할당
			sheet10_C7=totSum_TOT_TOTNO;
			sheet10_D7=totSum_TOT_PACCEPT;
			sheet10_E7=totSum_TOT_TOTCOUNT1;
			sheet10_F7=totSum_TOT_TOTCOUNT2;
			sheet10_G7=totSum_TOT_TOTCOUNT3;
			sheet10_H7=totSum_TOT_TOTCOUNT4;
			sheet10_I7=totSum_TOT_TOTCOUNT5;
			sheet10_J7=totSum_TOT_MAXPOINT;
			sheet10_K7=totSum_TOT_MINPOINT;
			sheet10_L7=totSum_TOT_OLDPOINT;
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptheader();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----detail RepeatBand Start-----
	//-----소속 쉬트 : SHEET=Sheet1   FRAME=Frame0
	//-----밴드 이름 : detail
	//-----밴드 종류 : 반복 밴드
	//-----bIsPrint : 감추기 속성 설정 여부 true면 출력, false면 스크립트를 생성하지 않음
	private void getScriptFromdetail(boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;    //밴드 출력 높이
		boolean bIsFirst=true;

		//데이터 변수 초기화
		sheet10_B9="";
		sheet10_C9=0;
		sheet10_D9=0;
		sheet10_E9=0;
		sheet10_F9=0;
		sheet10_G9=0;
		sheet10_H9=0;
		sheet10_I9=0;
		sheet10_J9=0;
		sheet10_K9=0;
		sheet10_L9=0;

		//DataSet 객체 생성
		//ResultSet detail 객체의 생성
		initSQLdetailVarient();
		detail = stat_detail.executeQuery(sql_detail);

		while(detail.next()){   //자동으로 생성되는 반복 밴드의 루프문
			//데이터 fetch
			setFieldVariableFromdetail();	//RecordSet detail에서 필드 값 설정

			if(bIsFirst){   //밴드 호출 후 루프 내에서 한번 만 실행되는 코드
			}   //end if(bIsFirst)

			//데이터 변수 할당
			sheet10_B9=detail_GRCODENM;
			sheet10_C9=detail_TOTNO;
			sheet10_D9=detail_PACCEPT;
			sheet10_E9=detail_TOTCOUNT1;
			sheet10_F9=detail_TOTCOUNT2;
			sheet10_G9=detail_TOTCOUNT3;
			sheet10_H9=detail_TOTCOUNT4;
			sheet10_I9=detail_TOTCOUNT5;
			sheet10_J9=detail_최고;
			sheet10_K9=detail_최저;
			sheet10_L9=detail_전년도평균;

			//AI 스크립트 출력
			if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
				if(isPageSkip(nYCurPos+nBandHeight)){   //스크립트 출력 영역 검사
					//페이지 스킵 함수 호출
					pageSkip(10);

					//반복 헤더 및 부모 반복단위 호출
					getScriptFromheader(false, true);	//반복 헤더 호출
					writeScriptmaster();

					nYCurPos=nYCurPos+20;
				}   //end if(page skip test)

				//스크립트 출력 함수 호출
				writeScriptdetail();

				//다음 출력 좌표 설정
				nYCurPos=nYCurPos+nBandHeight;
			}   //end if(bIsPrint)

			//bIsFirst 및 출력 라인 설정
			bIsFirst=false;
		}   //while end

		//DataSet Close
		if(detail!=null) detail.close();
	}

	//-----master RepeatBand Start-----
	//-----소속 쉬트 : SHEET=Sheet1   FRAME=Frame0
	//-----밴드 이름 : master
	//-----밴드 종류 : 반복 밴드
	//-----bIsPrint : 감추기 속성 설정 여부 true면 출력, false면 스크립트를 생성하지 않음
	private void getScriptFrommaster(boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;    //밴드 출력 높이
		boolean bIsFirst=true;

		//데이터 변수 초기화
		sheet10_A8="";
		sheet10_C8=0;
		sheet10_D8=0;
		sheet10_E8=0;
		sheet10_F8=0;
		sheet10_G8=0;
		sheet10_H8=0;
		sheet10_I8=0;
		sheet10_J8=0;
		sheet10_K8=0;
		sheet10_L8=0;

		//DataSet 객체 생성
		//ResultSet master 객체의 생성
		if(master==null){
			master = stat_master.executeQuery(sql_master);
		}else{
			master.beforeFirst();
		}

		while(master.next()){   //자동으로 생성되는 반복 밴드의 루프문
			//데이터 fetch
			setFieldVariableFrommaster();	//RecordSet master에서 필드 값 설정

			if(bIsFirst){   //밴드 호출 후 루프 내에서 한번 만 실행되는 코드
				//반복 헤더 호출 및 조건 플래그 초기화
				getScriptFromheader(bIsFirst, true);	//반복 헤더 호출
			}   //end if(bIsFirst)

			//데이터 변수 할당
			sheet10_A8=master_GUBUNNM;
			sheet10_C8=master_TOT_TOTNO;
			sheet10_D8=master_TOT_PACCEPT;
			sheet10_E8=master_TOT_TOTCOUNT1;
			sheet10_F8=master_TOT_TOTCOUNT2;
			sheet10_G8=master_TOT_TOTCOUNT3;
			sheet10_H8=master_TOT_TOTCOUNT4;
			sheet10_I8=master_TOT_TOTCOUNT5;
			sheet10_J8=master_최고;
			sheet10_K8=master_최저;
			sheet10_L8=master_전년도평균;

			//AI 스크립트 출력
			if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
				if(isPageSkip(nYCurPos+nBandHeight)){   //스크립트 출력 영역 검사
					//페이지 스킵 함수 호출
					pageSkip(10);

					//반복 헤더 및 부모 반복단위 호출
					getScriptFromheader(false, true);	//반복 헤더 호출
				}   //end if(page skip test)

				//스크립트 출력 함수 호출
				writeScriptmaster();

				//다음 출력 좌표 설정
				nYCurPos=nYCurPos+nBandHeight;
			}   //end if(bIsPrint)

			//루프 내부 자식 밴드 호출
			getScriptFromdetail(true);

			//bIsFirst 및 출력 라인 설정
			bIsFirst=false;
		}   //while end
	}

	//----VoidBand102 VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : VoidBand102
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFromVoidBand102(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=840;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//데이터 변수 초기화
			AI_CHART_OBJ4="";

			//데이터 변수 할당
			getChartDataAI_CHART_OBJ4( );
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptVoidBand102();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----스크립트 출력 함수-----
	//----title 스크립트 문 출력 함수----
	private void writeScripttitle( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT(45,41,757,0,20,0/,굴림체,RGB[0,0,0],BOLD, , ,NONE,30,1)");
		out.println(sheet10_A1+"\r");
		out.print("^PRINT(45,71,757,0,18,0/,굴림체,RGB[0,0,0],BOLD, , ,NONE,30,1)");
		out.println(sheet10_A2+"\r");
		out.print("^PRINT(45,111,757,0,16,0/,돋움체,RGB[0,0,0],BOLD, , ,NONE,38,1)");
		out.println(sheet10_A4+"\r");
	}

	//----foot 스크립트 문 출력 함수----
	private void writeScriptfoot( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT(45,531,757,1,11,0/,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A10+"\r");
	}

	//----header 스크립트 문 출력 함수----
	private void writeScriptheader( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos)+",72,40,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,40,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",72,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,40,1)");
		out.println(sheet10_A5+"\r");
		out.println("^CELLBG("+(nXCurPos+72)+","+(nYCurPos)+",114,40,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",114,40,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",114,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",114,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",114,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+72)+","+(nYCurPos)+",114,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,40,1)");
		out.println(sheet10_B5+"\r");
		out.println("^CELLBG("+(nXCurPos+186)+","+(nYCurPos)+",56,40,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+186)+","+(nYCurPos)+",56,40,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+186)+","+(nYCurPos)+",56,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+186)+","+(nYCurPos)+",56,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+186)+","+(nYCurPos)+",56,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+186)+","+(nYCurPos)+",56,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,40,1)");
		out.println(sheet10_C5+"\r");
		out.println("^CELLBG("+(nXCurPos+242)+","+(nYCurPos)+",56,40,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+242)+","+(nYCurPos)+",56,40,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+242)+","+(nYCurPos)+",56,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+242)+","+(nYCurPos)+",56,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+242)+","+(nYCurPos)+",56,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+242)+","+(nYCurPos)+",56,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,40,1)");
		out.println(sheet10_D5+"\r");
		out.println("^CELLBG("+(nXCurPos+298)+","+(nYCurPos)+",280,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+298)+","+(nYCurPos)+",280,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+298)+","+(nYCurPos)+",280,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+298)+","+(nYCurPos)+",280,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+298)+","+(nYCurPos)+",280,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+298)+","+(nYCurPos)+",280,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E5+"\r");
		out.println("^CELLBG("+(nXCurPos+578)+","+(nYCurPos)+",56,40,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+578)+","+(nYCurPos)+",56,40,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+578)+","+(nYCurPos)+",56,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+578)+","+(nYCurPos)+",56,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+578)+","+(nYCurPos)+",56,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+578)+","+(nYCurPos)+",56,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,40,1)");
		out.println(sheet10_J5+"\r");
		out.println("^CELLBG("+(nXCurPos+634)+","+(nYCurPos)+",56,40,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+634)+","+(nYCurPos)+",56,40,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+634)+","+(nYCurPos)+",56,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+634)+","+(nYCurPos)+",56,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+634)+","+(nYCurPos)+",56,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+634)+","+(nYCurPos)+",56,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,40,1)");
		out.println(sheet10_K5+"\r");
		out.println("^CELLBG("+(nXCurPos+690)+","+(nYCurPos)+",67,40,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+690)+","+(nYCurPos)+",67,40,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+690)+","+(nYCurPos)+",67,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+690)+","+(nYCurPos)+",67,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+690)+","+(nYCurPos)+",67,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+690)+","+(nYCurPos)+",67,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,40,1)");
		out.println(sheet10_L5+"\r");
		out.println("^CELLBG("+(nXCurPos+298)+","+(nYCurPos+20)+",56,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+298)+","+(nYCurPos+20)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+298)+","+(nYCurPos+20)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+298)+","+(nYCurPos+20)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+298)+","+(nYCurPos+20)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+298)+","+(nYCurPos+20)+",56,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E6+"\r");
		out.println("^CELLBG("+(nXCurPos+354)+","+(nYCurPos+20)+",56,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos+20)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos+20)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos+20)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos+20)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+354)+","+(nYCurPos+20)+",56,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F6+"\r");
		out.println("^CELLBG("+(nXCurPos+410)+","+(nYCurPos+20)+",56,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+410)+","+(nYCurPos+20)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+410)+","+(nYCurPos+20)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+410)+","+(nYCurPos+20)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+410)+","+(nYCurPos+20)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+410)+","+(nYCurPos+20)+",56,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_G6+"\r");
		out.println("^CELLBG("+(nXCurPos+466)+","+(nYCurPos+20)+",56,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+466)+","+(nYCurPos+20)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+466)+","+(nYCurPos+20)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+466)+","+(nYCurPos+20)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+466)+","+(nYCurPos+20)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+466)+","+(nYCurPos+20)+",56,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_H6+"\r");
		out.println("^CELLBG("+(nXCurPos+522)+","+(nYCurPos+20)+",56,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+522)+","+(nYCurPos+20)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+522)+","+(nYCurPos+20)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+522)+","+(nYCurPos+20)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+522)+","+(nYCurPos+20)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+522)+","+(nYCurPos+20)+",56,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_I6+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+40)+",186,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",186,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",186,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",186,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+40)+",186,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+40)+",186,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A7+"\r");
		out.println("^CELLBG("+(nXCurPos+186)+","+(nYCurPos+40)+",56,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+186)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+186)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+186)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+186)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+186)+","+(nYCurPos+40)+",56,2,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_C7+"\r");
		out.println("^CELLBG("+(nXCurPos+242)+","+(nYCurPos+40)+",56,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+242)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+242)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+242)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+242)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+242)+","+(nYCurPos+40)+",56,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_D7+"\r");
		out.println("^CELLBG("+(nXCurPos+298)+","+(nYCurPos+40)+",56,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+298)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+298)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+298)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+298)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+298)+","+(nYCurPos+40)+",56,2,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E7+"\r");
		out.println("^CELLBG("+(nXCurPos+354)+","+(nYCurPos+40)+",56,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+354)+","+(nYCurPos+40)+",56,2,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F7+"\r");
		out.println("^CELLBG("+(nXCurPos+410)+","+(nYCurPos+40)+",56,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+410)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+410)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+410)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+410)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+410)+","+(nYCurPos+40)+",56,2,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_G7+"\r");
		out.println("^CELLBG("+(nXCurPos+466)+","+(nYCurPos+40)+",56,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+466)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+466)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+466)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+466)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+466)+","+(nYCurPos+40)+",56,2,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_H7+"\r");
		out.println("^CELLBG("+(nXCurPos+522)+","+(nYCurPos+40)+",56,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+522)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+522)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+522)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+522)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+522)+","+(nYCurPos+40)+",56,2,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_I7+"\r");
		out.println("^CELLBG("+(nXCurPos+578)+","+(nYCurPos+40)+",56,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+578)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+578)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+578)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+578)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+578)+","+(nYCurPos+40)+",56,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_J7+"\r");
		out.println("^CELLBG("+(nXCurPos+634)+","+(nYCurPos+40)+",56,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+634)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+634)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+634)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+634)+","+(nYCurPos+40)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+634)+","+(nYCurPos+40)+",56,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_K7+"\r");
		out.println("^CELLBG("+(nXCurPos+690)+","+(nYCurPos+40)+",67,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+690)+","+(nYCurPos+40)+",67,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+690)+","+(nYCurPos+40)+",67,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+690)+","+(nYCurPos+40)+",67,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+690)+","+(nYCurPos+40)+",67,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+690)+","+(nYCurPos+40)+",67,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_L7+"\r");
	}

	//----detail 스크립트 문 출력 함수----
	private void writeScriptdetail( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,20,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",114,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",114,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",114,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",114,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+72)+","+(nYCurPos)+",114,0,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_B9+"\r");
		out.println("^CELLLINE("+(nXCurPos+186)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+186)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+186)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+186)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+186)+","+(nYCurPos)+",56,2,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_C9+"\r");
		out.println("^CELLLINE("+(nXCurPos+242)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+242)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+242)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+242)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+242)+","+(nYCurPos)+",56,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_D9+"\r");
		out.println("^CELLLINE("+(nXCurPos+298)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+298)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+298)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+298)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+298)+","+(nYCurPos)+",56,2,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E9+"\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+354)+","+(nYCurPos)+",56,2,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F9+"\r");
		out.println("^CELLLINE("+(nXCurPos+410)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+410)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+410)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+410)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+410)+","+(nYCurPos)+",56,2,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_G9+"\r");
		out.println("^CELLLINE("+(nXCurPos+466)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+466)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+466)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+466)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+466)+","+(nYCurPos)+",56,2,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_H9+"\r");
		out.println("^CELLLINE("+(nXCurPos+522)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+522)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+522)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+522)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+522)+","+(nYCurPos)+",56,2,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_I9+"\r");
		out.println("^CELLLINE("+(nXCurPos+578)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+578)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+578)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+578)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+578)+","+(nYCurPos)+",56,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_J9+"\r");
		out.println("^CELLLINE("+(nXCurPos+634)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+634)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+634)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+634)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+634)+","+(nYCurPos)+",56,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_K9+"\r");
		out.println("^CELLLINE("+(nXCurPos+690)+","+(nYCurPos)+",67,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+690)+","+(nYCurPos)+",67,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+690)+","+(nYCurPos)+",67,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+690)+","+(nYCurPos)+",67,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+690)+","+(nYCurPos)+",67,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_L9+"\r");
	}

	//----master 스크립트 문 출력 함수----
	private void writeScriptmaster( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos)+",72,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",72,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A8+"\r");
		out.println("^CELLBG("+(nXCurPos+72)+","+(nYCurPos)+",114,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",114,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",114,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",114,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",114,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+72)+","+(nYCurPos)+",114,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_B8+"\r");
		out.println("^CELLBG("+(nXCurPos+186)+","+(nYCurPos)+",56,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+186)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+186)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+186)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+186)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+186)+","+(nYCurPos)+",56,2,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_C8+"\r");
		out.println("^CELLBG("+(nXCurPos+242)+","+(nYCurPos)+",56,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+242)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+242)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+242)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+242)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+242)+","+(nYCurPos)+",56,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_D8+"\r");
		out.println("^CELLBG("+(nXCurPos+298)+","+(nYCurPos)+",56,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+298)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+298)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+298)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+298)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+298)+","+(nYCurPos)+",56,2,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E8+"\r");
		out.println("^CELLBG("+(nXCurPos+354)+","+(nYCurPos)+",56,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+354)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+354)+","+(nYCurPos)+",56,2,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F8+"\r");
		out.println("^CELLBG("+(nXCurPos+410)+","+(nYCurPos)+",56,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+410)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+410)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+410)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+410)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+410)+","+(nYCurPos)+",56,2,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_G8+"\r");
		out.println("^CELLBG("+(nXCurPos+466)+","+(nYCurPos)+",56,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+466)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+466)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+466)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+466)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+466)+","+(nYCurPos)+",56,2,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_H8+"\r");
		out.println("^CELLBG("+(nXCurPos+522)+","+(nYCurPos)+",56,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+522)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+522)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+522)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+522)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+522)+","+(nYCurPos)+",56,2,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_I8+"\r");
		out.println("^CELLBG("+(nXCurPos+578)+","+(nYCurPos)+",56,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+578)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+578)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+578)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+578)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+578)+","+(nYCurPos)+",56,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_J8+"\r");
		out.println("^CELLBG("+(nXCurPos+634)+","+(nYCurPos)+",56,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+634)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+634)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+634)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+634)+","+(nYCurPos)+",56,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+634)+","+(nYCurPos)+",56,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_K8+"\r");
		out.println("^CELLBG("+(nXCurPos+690)+","+(nYCurPos)+",67,20,1,RGB[235,233,228],RGB[235,233,228],0)\r");
		out.println("^CELLLINE("+(nXCurPos+690)+","+(nYCurPos)+",67,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+690)+","+(nYCurPos)+",67,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+690)+","+(nYCurPos)+",67,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+690)+","+(nYCurPos)+",67,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+690)+","+(nYCurPos)+",67,2,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_L8+"\r");
	}

	//----VoidBand102 스크립트 문 출력 함수----
	private void writeScriptVoidBand102( ) throws Exception{
		//스크립트문 생성
		out.println("^CHART(" + (nXCurPos+5) + "," + (nYCurPos+6) + ",747,207,report_11!000.cht)\r");
		if(!AI_CHART_OBJ4.equals(isEmpty)){
			out.print(AI_CHART_OBJ4);
			AI_CHART_OBJ4="";
		}
		out.print("--CHART_END--\r");
	}

	//파라미터 설정 함수
	private void setParam(){
		p_startyear_Param=toKor(GetB(request.getParameter("p_startyear")));
	}

	//-----Connection 및 Statement 객체 생성 함수-----
	private void createConnAndStateObject() throws Exception{
		//DUNET Connection 객체 생성
		Class.forName("oracle.jdbc.driver.OracleDriver").newInstance();
		conn_DUNET=DriverManager.getConnection("jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.12.203)(PORT=1521))(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.12.204)(PORT=1521))(FAILOVER=on)(LOAD_BALANCE=off))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=LOTI)))","inchlms","fhxl21");stat_totSum=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_detail=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_master=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
	}

	//-----SQL문 변수 초기화 함수-----
	private void initSQLConst(){
		sql_totSum = "SELECT sum(totno) as tot_totno ";
		sql_totSum = sql_totSum + "     , round(avg(paccept),2) as tot_paccept ";
		sql_totSum = sql_totSum + "     , sum(totcount1) as tot_totcount1 ";
		sql_totSum = sql_totSum + "     , sum(totcount2) as tot_totcount2 ";
		sql_totSum = sql_totSum + "     , sum(totcount3) as tot_totcount3 ";
		sql_totSum = sql_totSum + "     , sum(totcount4) as tot_totcount4 ";
		sql_totSum = sql_totSum + "     , sum(totcount5) as tot_totcount5 ";
		sql_totSum = sql_totSum + "     , max(maxpoint) as tot_maxpoint ";
		sql_totSum = sql_totSum + "     , min(minpoint) as tot_minpoint ";
		sql_totSum = sql_totSum + "     , round(avg(oldpoint),2) as tot_oldpoint ";
		sql_totSum = sql_totSum + "  FROM ( ";
		sql_totSum = sql_totSum + "SELECT grcodenm ";
		sql_totSum = sql_totSum + "     , totno ";
		sql_totSum = sql_totSum + "     , paccept ";
		sql_totSum = sql_totSum + "     , totcount1 ";
		sql_totSum = sql_totSum + "     , totcount2 ";
		sql_totSum = sql_totSum + "     , totcount3 ";
		sql_totSum = sql_totSum + "     , totcount4 ";
		sql_totSum = sql_totSum + "     , totcount5 ";
		sql_totSum = sql_totSum + "     , maxpoint ";
		sql_totSum = sql_totSum + "     , minpoint ";
		sql_totSum = sql_totSum + "     , (SELECT round(avg(paccept),2)  ";
		sql_totSum = sql_totSum + "          FROM tb_grresult  ";
		sql_totSum = sql_totSum + "	 WHERE grcode=g.grcode  ";
		sql_totSum = sql_totSum + "	 AND grseq like to_char(to_number('" + p_startyear_Param + "')-1) || substr(g.grseq,5,2) ) as oldpoint ";
		sql_totSum = sql_totSum + "     , gubun ";
		sql_totSum = sql_totSum + "     , gubunnm ";
		sql_totSum = sql_totSum + "     , grcode ";
		sql_totSum = sql_totSum + "     , grseq ";
		sql_totSum = sql_totSum + "  FROM ( SELECT (c.grtype || c.grsubcd) as gubun ";
		sql_totSum = sql_totSum + "              , (min(mc.mcode_name) || min(sc.scode_name) || '교육') as gubunnm ";
		sql_totSum = sql_totSum + "	      , b.grcode, b.grseq, min(c.grcodenm)||'('||substr(b.grseq,6,1)||')' grcodenm ";
		sql_totSum = sql_totSum + "	      , count(distinct b.userno) totno ";
		sql_totSum = sql_totSum + "	      , sum(case when b.paccept < 60 then 1 else 0 end) TOTCOUNT1 ";
		sql_totSum = sql_totSum + "	      , sum(case when b.paccept > 60 AND b.paccept < 70 then 1 else 0 end) TOTCOUNT2 ";
		sql_totSum = sql_totSum + "	      , sum(case when b.paccept > 70 AND b.paccept < 80 then 1 else 0 end) TOTCOUNT3 ";
		sql_totSum = sql_totSum + "	      , sum(case when b.paccept > 80 AND b.paccept < 90 then 1 else 0 end) TOTCOUNT4 ";
		sql_totSum = sql_totSum + "	      , sum(case when b.paccept > 90 then 1 else 0 end) TOTCOUNT5 ";
		sql_totSum = sql_totSum + "	      , round(avg(b.paccept),2) paccept, max(b.paccept) maxpoint ";
		sql_totSum = sql_totSum + "	      , min(b.paccept) minpoint ";
		sql_totSum = sql_totSum + "           FROM tb_maincode mc, tb_subcode sc, tb_grresult b, tb_grcode c  ";
		sql_totSum = sql_totSum + "          WHERE (mc.cd_gubun(+)='G' AND c.grtype=mc.major_code(+))  ";
		sql_totSum = sql_totSum + "	  AND c.grtype || c.grsubcd in ('101', '201') ";
		sql_totSum = sql_totSum + "          AND (sc.cd_gubun(+)='G' AND c.grtype=sc.major_code(+) AND c.grsubcd=sc.minor_code(+))  ";
		sql_totSum = sql_totSum + "          AND  b.grcode=c.grcode AND b.grseq like '" + p_startyear_Param + "'||'%' ";
		sql_totSum = sql_totSum + "          GROUP BY (c.grtype || c.grsubcd), b.grcode, b.grseq) g )";
		sql_master = "SELECT gubunnm ";
		sql_master = sql_master + "     , gubun ";
		sql_master = sql_master + "     , sum(totno) as tot_totno ";
		sql_master = sql_master + "     , round(avg(paccept),2) as tot_paccept ";
		sql_master = sql_master + "     , sum(totcount1) as tot_totcount1 ";
		sql_master = sql_master + "     , sum(totcount2) as tot_totcount2 ";
		sql_master = sql_master + "     , sum(totcount3) as tot_totcount3 ";
		sql_master = sql_master + "     , sum(totcount4) as tot_totcount4 ";
		sql_master = sql_master + "     , sum(totcount5) as tot_totcount5 ";
		sql_master = sql_master + "     , max(maxpoint) as 최고 ";
		sql_master = sql_master + "     , min(minpoint) as 최저      ";
		sql_master = sql_master + "     , round(avg(oldpoint),2) as 전년도평균 ";
		sql_master = sql_master + "  FROM ( ";
		sql_master = sql_master + "SELECT grcodenm ";
		sql_master = sql_master + "     , totno ";
		sql_master = sql_master + "     , paccept ";
		sql_master = sql_master + "     , totcount1 ";
		sql_master = sql_master + "     , totcount2 ";
		sql_master = sql_master + "     , totcount3 ";
		sql_master = sql_master + "     , totcount4 ";
		sql_master = sql_master + "     , totcount5 ";
		sql_master = sql_master + "     , maxpoint ";
		sql_master = sql_master + "     , minpoint ";
		sql_master = sql_master + "     , (SELECT round(avg(paccept),2)  ";
		sql_master = sql_master + "          FROM tb_grresult  ";
		sql_master = sql_master + "	 WHERE grcode=g.grcode  ";
		sql_master = sql_master + "	 AND grseq like to_char(to_number('" + p_startyear_Param + "')-1) || substr(g.grseq,5,2) ) as oldpoint ";
		sql_master = sql_master + "     , gubun ";
		sql_master = sql_master + "     , gubunnm ";
		sql_master = sql_master + "     , grcode ";
		sql_master = sql_master + "     , grseq ";
		sql_master = sql_master + "  FROM ( SELECT (c.grtype || c.grsubcd) as gubun ";
		sql_master = sql_master + "              , (min(mc.mcode_name) || min(sc.scode_name) || '교육') as gubunnm ";
		sql_master = sql_master + "	      , b.grcode, b.grseq, min(c.grcodenm)||'('||substr(b.grseq,6,1)||')' grcodenm ";
		sql_master = sql_master + "	      , count(distinct b.userno) totno ";
		sql_master = sql_master + "	      , sum(case when b.paccept < 60 then 1 else 0 end) TOTCOUNT1 ";
		sql_master = sql_master + "	      , sum(case when b.paccept > 60 AND b.paccept < 70 then 1 else 0 end) TOTCOUNT2 ";
		sql_master = sql_master + "	      , sum(case when b.paccept > 70 AND b.paccept < 80 then 1 else 0 end) TOTCOUNT3 ";
		sql_master = sql_master + "	      , sum(case when b.paccept > 80 AND b.paccept < 90 then 1 else 0 end) TOTCOUNT4 ";
		sql_master = sql_master + "	      , sum(case when b.paccept > 90 then 1 else 0 end) TOTCOUNT5 ";
		sql_master = sql_master + "	      , round(avg(b.paccept),2) paccept, max(b.paccept) maxpoint ";
		sql_master = sql_master + "	      , min(b.paccept) minpoint ";
		sql_master = sql_master + "           FROM tb_maincode mc, tb_subcode sc, tb_grresult b, tb_grcode c  ";
		sql_master = sql_master + "          WHERE (mc.cd_gubun(+)='G' AND c.grtype=mc.major_code(+))  ";
		sql_master = sql_master + "	  AND c.grtype || c.grsubcd in ('101', '201') ";
		sql_master = sql_master + "          AND (sc.cd_gubun(+)='G' AND c.grtype=sc.major_code(+) AND c.grsubcd=sc.minor_code(+))  ";
		sql_master = sql_master + "          AND  b.grcode=c.grcode AND b.grseq like '" + p_startyear_Param + "'||'%' ";
		sql_master = sql_master + "          GROUP BY (c.grtype || c.grsubcd), b.grcode, b.grseq) g  )  ";
		sql_master = sql_master + " GROUP BY gubunnm, gubun";
	}

	private void initSQLdetailVarient(){
		sql_detail = "SELECT grcodenm ";
		sql_detail = sql_detail + "     , totno ";
		sql_detail = sql_detail + "     , paccept ";
		sql_detail = sql_detail + "     , totcount1 ";
		sql_detail = sql_detail + "     , totcount2 ";
		sql_detail = sql_detail + "     , totcount3 ";
		sql_detail = sql_detail + "     , totcount4 ";
		sql_detail = sql_detail + "     , totcount5 ";
		sql_detail = sql_detail + "     , maxpoint as 최고 ";
		sql_detail = sql_detail + "     , minpoint  as 최저 ";
		sql_detail = sql_detail + "     , (SELECT round(avg(paccept),2)  ";
		sql_detail = sql_detail + "          FROM tb_grresult  ";
		sql_detail = sql_detail + "	 WHERE grcode=g.grcode  ";
		sql_detail = sql_detail + "	 AND grseq like to_char(to_number('" + p_startyear_Param + "')-1) || substr(g.grseq,5,2) ) as 전년도평균 ";
		sql_detail = sql_detail + "     , gubun ";
		sql_detail = sql_detail + "     , gubunnm ";
		sql_detail = sql_detail + "     , grcode ";
		sql_detail = sql_detail + "     , grseq ";
		sql_detail = sql_detail + "  FROM ( SELECT (c.grtype || c.grsubcd) as gubun ";
		sql_detail = sql_detail + "              , (min(mc.mcode_name) || min(sc.scode_name) || '교육') as gubunnm ";
		sql_detail = sql_detail + "	      , b.grcode, b.grseq, min(c.grcodenm)||'('||substr(b.grseq,6,1)||')' grcodenm ";
		sql_detail = sql_detail + "	      , count(distinct b.userno) totno ";
		sql_detail = sql_detail + "	      , sum(case when b.paccept < 60 then 1 else 0 end) TOTCOUNT1 ";
		sql_detail = sql_detail + "	      , sum(case when b.paccept > 60 AND b.paccept < 70 then 1 else 0 end) TOTCOUNT2 ";
		sql_detail = sql_detail + "	      , sum(case when b.paccept > 70 AND b.paccept < 80 then 1 else 0 end) TOTCOUNT3 ";
		sql_detail = sql_detail + "	      , sum(case when b.paccept > 80 AND b.paccept < 90 then 1 else 0 end) TOTCOUNT4 ";
		sql_detail = sql_detail + "	      , sum(case when b.paccept > 90 then 1 else 0 end) TOTCOUNT5 ";
		sql_detail = sql_detail + "	      , round(avg(b.paccept),2) paccept, max(b.paccept) maxpoint ";
		sql_detail = sql_detail + "	      , min(b.paccept) minpoint ";
		sql_detail = sql_detail + "           FROM tb_maincode mc, tb_subcode sc, tb_grresult b, tb_grcode c  ";
		sql_detail = sql_detail + "          WHERE (mc.cd_gubun(+)='G' AND c.grtype=mc.major_code(+))  ";
		sql_detail = sql_detail + "	  AND c.grtype || c.grsubcd in ('101', '201') ";
		sql_detail = sql_detail + "          AND (sc.cd_gubun(+)='G' AND c.grtype=sc.major_code(+) AND c.grsubcd=sc.minor_code(+))  ";
		sql_detail = sql_detail + "          AND  b.grcode=c.grcode AND b.grseq like '" + p_startyear_Param + "'||'%' ";
		sql_detail = sql_detail + "          AND (c.grtype || c.grsubcd) = '" + master_GUBUN + "' ";
		sql_detail = sql_detail + "          GROUP BY (c.grtype || c.grsubcd), b.grcode, b.grseq) g";
	}

	//-----ResultSet 객체에서 필드 값 설정 함수-----
	//ResultSet totSum 객체에서 필드 값 설정 함수
	private void setFieldVariableFromtotSum() throws Exception{
		totSum_TOT_TOTNO=totSum.getDouble(1);
		totSum_TOT_PACCEPT=totSum.getDouble(2);
		totSum_TOT_TOTCOUNT1=totSum.getDouble(3);
		totSum_TOT_TOTCOUNT2=totSum.getDouble(4);
		totSum_TOT_TOTCOUNT3=totSum.getDouble(5);
		totSum_TOT_TOTCOUNT4=totSum.getDouble(6);
		totSum_TOT_TOTCOUNT5=totSum.getDouble(7);
		totSum_TOT_MAXPOINT=totSum.getDouble(8);
		totSum_TOT_MINPOINT=totSum.getDouble(9);
		totSum_TOT_OLDPOINT=totSum.getDouble(10);
	}

	//ResultSet totSum 객체의 필드 값 초기화 함수
	private void setFieldInitFromtotSum(){
		totSum_TOT_TOTNO=0;
		totSum_TOT_PACCEPT=0;
		totSum_TOT_TOTCOUNT1=0;
		totSum_TOT_TOTCOUNT2=0;
		totSum_TOT_TOTCOUNT3=0;
		totSum_TOT_TOTCOUNT4=0;
		totSum_TOT_TOTCOUNT5=0;
		totSum_TOT_MAXPOINT=0;
		totSum_TOT_MINPOINT=0;
		totSum_TOT_OLDPOINT=0;
	}

	//ResultSet detail 객체에서 필드 값 설정 함수
	private void setFieldVariableFromdetail() throws Exception{
		detail_GRCODENM=GetB(detail.getString(1));
		detail_TOTNO=detail.getDouble(2);
		detail_PACCEPT=detail.getDouble(3);
		detail_TOTCOUNT1=detail.getDouble(4);
		detail_TOTCOUNT2=detail.getDouble(5);
		detail_TOTCOUNT3=detail.getDouble(6);
		detail_TOTCOUNT4=detail.getDouble(7);
		detail_TOTCOUNT5=detail.getDouble(8);
		detail_최고=detail.getDouble(9);
		detail_최저=detail.getDouble(10);
		detail_전년도평균=detail.getDouble(11);
		detail_GUBUN=GetB(detail.getString(12));
		detail_GUBUNNM=GetB(detail.getString(13));
		detail_GRCODE=GetB(detail.getString(14));
		detail_GRSEQ=GetB(detail.getString(15));
	}

	//ResultSet detail 객체의 필드 값 초기화 함수
	private void setFieldInitFromdetail(){
		detail_GRCODENM="";
		detail_TOTNO=0;
		detail_PACCEPT=0;
		detail_TOTCOUNT1=0;
		detail_TOTCOUNT2=0;
		detail_TOTCOUNT3=0;
		detail_TOTCOUNT4=0;
		detail_TOTCOUNT5=0;
		detail_최고=0;
		detail_최저=0;
		detail_전년도평균=0;
		detail_GUBUN="";
		detail_GUBUNNM="";
		detail_GRCODE="";
		detail_GRSEQ="";
	}

	//ResultSet master 객체에서 필드 값 설정 함수
	private void setFieldVariableFrommaster() throws Exception{
		master_GUBUNNM=GetB(master.getString(1));
		master_GUBUN=GetB(master.getString(2));
		master_TOT_TOTNO=master.getDouble(3);
		master_TOT_PACCEPT=master.getDouble(4);
		master_TOT_TOTCOUNT1=master.getDouble(5);
		master_TOT_TOTCOUNT2=master.getDouble(6);
		master_TOT_TOTCOUNT3=master.getDouble(7);
		master_TOT_TOTCOUNT4=master.getDouble(8);
		master_TOT_TOTCOUNT5=master.getDouble(9);
		master_최고=master.getDouble(10);
		master_최저=master.getDouble(11);
		master_전년도평균=master.getDouble(12);
	}

	//ResultSet master 객체의 필드 값 초기화 함수
	private void setFieldInitFrommaster(){
		master_GUBUNNM="";
		master_GUBUN="";
		master_TOT_TOTNO=0;
		master_TOT_PACCEPT=0;
		master_TOT_TOTCOUNT1=0;
		master_TOT_TOTCOUNT2=0;
		master_TOT_TOTCOUNT3=0;
		master_TOT_TOTCOUNT4=0;
		master_TOT_TOTCOUNT5=0;
		master_최고=0;
		master_최저=0;
		master_전년도평균=0;
	}

	//-----고정 데이터 초기화 함수-----
	private void initConstVarient(){
		sheet10_A1="7. 교육훈련성과 측정분석";
		sheet10_A2="가. 교육훈련성적";
		sheet10_A4=" (2) 과정별 성적분포";
		sheet10_A10="#PAGE / #TOTALPAGE";
		sheet10_A5="구분";
		sheet10_B5="과   정   명";
		sheet10_C5="교육인원(명)";
		sheet10_D5="평균";
		sheet10_E5="성     적     분    포     (명)";
		sheet10_J5="최고";
		sheet10_K5="최하";
		sheet10_L5="전년도평균";
		sheet10_E6="60점미만";
		sheet10_F6="60~69";
		sheet10_G6="70~79";
		sheet10_H6="80~89";
		sheet10_I6="90점이상";
		sheet10_A7="총        계";
		sheet10_B8="소     계";
	}

	//-----페이지 스킵 관련 함수-----
	//페이지 스킵시 호출되는 함수로서 페이지 번호를 증가시키고 페이지 지시문 출력 그리고 Y좌표 초기화
	//매개변수에 따라 해당 쉬트의 배경 이미지, 머리글 밴드, 바닥글 밴드 함수 호출
	private void pageSkip(int nIndex) throws Exception{
		nXCurPos=nXStartPos;
		nYCurPos=nYStartPos;
		nPageNum=nPageNum+1;
		out.print("-- " + nPageNum + " PAGE --\r");

		switch(nIndex){
			case 10:		//SHEET=Sheet=1   FRAME=0에서 페이지 스킵시
			getScriptFromtitle(false, true);		//머리글 밴드 호출
			getScriptFromfoot(false, true);		//바닥글 밴드 호출
			break;
		}
	}

	//페이지 스킵이 필요한지 검사하는 함수
	private boolean isPageSkip(int nTestPos){
		if(nTestPos>nYEndPos){
			return true;
		}else{
			return false;
		}
	}

	//----AI_CHART_OBJ4 챠트 데이터 함수----
	private void getChartDataAI_CHART_OBJ4( ) throws Exception{
		//지역 변수 선언 및 초기화
		String chartProp="";   //챠트 프로퍼티 스크립트

		//DataSet 객체 생성
		//ResultSet master 객체의 생성
		if(master==null){
			master = stat_master.executeQuery(sql_master);
		}else{
			master.beforeFirst();
		}
		if(!master.isBeforeFirst()){		//생성된 ResultSet에 레코드가 없으면
			return;
		}

		/*

		//계열(Series) 필드 설정
		AI_CHART_OBJ4="\t";
		AI_CHART_OBJ4=AI_CHART_OBJ4 + "TOT_TOTCOUNT1\t";
		AI_CHART_OBJ4=AI_CHART_OBJ4 + "TOT_TOTCOUNT2\t";
		AI_CHART_OBJ4=AI_CHART_OBJ4 + "TOT_TOTCOUNT3\t";
		AI_CHART_OBJ4=AI_CHART_OBJ4 + "TOT_TOTCOUNT4\t";
		AI_CHART_OBJ4=AI_CHART_OBJ4 + "TOT_TOTCOUNT5\t";
		AI_CHART_OBJ4=AI_CHART_OBJ4 + "최고\t";
		AI_CHART_OBJ4=AI_CHART_OBJ4 + "최저\t";
		AI_CHART_OBJ4=AI_CHART_OBJ4 + "전년도평균\r\n";

		*/
		AI_CHART_OBJ4="\t";
		AI_CHART_OBJ4=AI_CHART_OBJ4 + "60점미만\t";
		AI_CHART_OBJ4=AI_CHART_OBJ4 + "60~69\t";
		AI_CHART_OBJ4=AI_CHART_OBJ4 + "70~79\t";
		AI_CHART_OBJ4=AI_CHART_OBJ4 + "80~89\t";
		AI_CHART_OBJ4=AI_CHART_OBJ4 + "90점이상\t";
		AI_CHART_OBJ4=AI_CHART_OBJ4 + "최고\t";
		AI_CHART_OBJ4=AI_CHART_OBJ4 + "최저\t";
		AI_CHART_OBJ4=AI_CHART_OBJ4 + "전년도평균\r\n";

		while(master.next()){   //데이터 루프문
			//데이터 fetch
			setFieldVariableFrommaster();   //RecordSet master에서 필드 값 설정

			//X축 레이블 필드 설정
			AI_CHART_OBJ4=AI_CHART_OBJ4 + master_GUBUNNM + "\t";

			//데이터 설정
			AI_CHART_OBJ4=AI_CHART_OBJ4 + master_TOT_TOTCOUNT1 + "\t";
			AI_CHART_OBJ4=AI_CHART_OBJ4 + master_TOT_TOTCOUNT2 + "\t";
			AI_CHART_OBJ4=AI_CHART_OBJ4 + master_TOT_TOTCOUNT3 + "\t";
			AI_CHART_OBJ4=AI_CHART_OBJ4 + master_TOT_TOTCOUNT4 + "\t";
			AI_CHART_OBJ4=AI_CHART_OBJ4 + master_TOT_TOTCOUNT5 + "\t";
			AI_CHART_OBJ4=AI_CHART_OBJ4 + master_최고 + "\t";
			AI_CHART_OBJ4=AI_CHART_OBJ4 + master_최저 + "\t";
			AI_CHART_OBJ4=AI_CHART_OBJ4 + master_전년도평균 + "\r\n";
		}   //while end

		//챠트 프로퍼티 스크립트
		chartProp=chartProp + "SeriesToXLabel=TRUE\r\n";
		if(!chartProp.equals(isEmpty)){
			AI_CHART_OBJ4=AI_CHART_OBJ4 + "--PROPERTY\r\n";
			AI_CHART_OBJ4=AI_CHART_OBJ4 + chartProp;
		}
	}

	//-----공통 함수 선언-----
	private void getScriptHeader(String paper, String size, String value, String orient) throws Exception{
		out.print("--SCRIPT_START31--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void getSheetPaperInfo(String paper, String size, String value, String orient) throws Exception{
		out.print("--PAPER_INFO--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void initSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bFirstFrame){
		if(bFirstFrame){
			nStartPage=nMaxPage+1;
			nYLastPos=0;
		}
		nPageNum=nStartPage;
		nYStartPos=constStartY;
		nYEndPos=constEndY;
		nYCurPos=nYStartPos;
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
	}

	private void initChildSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bIsMultiFrame, boolean bIsFirstFrame){
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
		nYStartPos=constStartY;
		nYEndPos=constEndY;

		if(bIsMultiFrame){
			if(bIsFirstFrame){
				nStartPage=nPageNum;
				nYSavePos=nYCurPos;
				nYLastPos=0;
			}else{
				nPageNum=nStartPage;
				nYCurPos=nYSavePos;
			}
		}else{
			nStartPage=nPageNum;
		}
	}

	//Empty Row만으로 구성되어 출력 위치를 조정하기 위한 VoidBand 함수
	//nRangePos - VoidBand의 출력 영역
	//nIndex - PageSkip 함수 호출시 전달할 쉬트 인덱스
	private boolean voidBandNoneData(int nRangePos, int nIndex) throws Exception{
		int nTestPos;
		nTestPos=nYCurPos+nRangePos;
		if(isPageSkip(nTestPos)){
			pageSkip(nIndex);
			return true;
		}else{
			nYCurPos=nYCurPos+nRangePos;
			return false;
		}
	}

	private String Get0(String str){
		if(str==null){
			return "0";
		}else{
			if(str.equals("")){
				return "0";
			}else{
				return str;
			}
		}
	}

	private String GetB(String str){
		if(str==null){
			return "";
		}else{
			return str;
		}
	}

	private double SUM(double accVal, double tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(double accVal, long tmpVal){
		return(accVal+(double)tmpVal);
	}

	private long SUM(long accVal, long tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(long accVal, double tmpVal){
		return((double)accVal+tmpVal);
	}

	private long COUNT(long accuCNT){
		return ++accuCNT;
	}

	private long MIN(long maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(long maxV, double maxTempV){
		if((double)maxV<=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, double maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}
	private long MAX(long maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(long maxV, double maxTempV){
		if((double)maxV>=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, double maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}

	private double AVG(double sumVal, long cntVal){
		return(sumVal/cntVal);
	}

	private double AVG(long sumVal, long cntVal){
		return((double)sumVal/(double)cntVal);
	}

	private String aiReplace(String strAll, String strSrc, String strDest) {
		while(strAll.indexOf(strSrc) != -1) {
			strAll = strAll.substring(0, strAll.indexOf(strSrc)) + strDest + strAll.substring(strAll.indexOf(strSrc) + strSrc.length(), strAll.length());
		}
		return strAll;
	}

	private String toDate() {
		SimpleDateFormat dateFormat=new SimpleDateFormat("'#SERVERDATE#'yyyy/MM/dd/HH/mm/ss");
		java.util.Date currentDate = new java.util.Date();
		return dateFormat.format(currentDate);
	}

	final String toKor (String en){
		if(en==null){
			return "";
		}
		try{
			return new String(en.getBytes("8859_1"), "KSC5601");
		}catch(Exception e){return en;}
	}
}
%>
