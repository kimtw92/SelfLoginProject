<%
/* ### Generated by AIDesigner 3.7.1.23 ### */
%>

<%@ page language="java" import="java.sql.*,java.io.*,java.text.*" %>
<%@ page contentType="text/plain; charset=euc-kr" %>

<%
Object[] userObj = null;
ReportHandler handler = new ReportHandler(request,response,userObj);
handler.service(out);
%>

<%!
class ReportHandler{
	//공통 변수 선언
	private Object[] userObj = null;
	private int nStartPage;		//각 쉬트별 시작 페이지 저장
	private int nMaxPage;		//한 쉬트가 실행된 후 생성된 최대 페이지 번호 저장
	private int nPageNum;		//현재 페이지 번호
	private int nYStartPos;		//쉬트에서 Y 시작 좌표
	private int nYEndPos;		//쉬트에서 Y 끝 좌표
	private int nYCurPos;		//현재 Y 좌표
	private int nYSavePos;		//연결된 멀티 프레임 쉬트에서 시작 Y 좌표 저장
	private int nYLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 Y 좌표 저장
	private int nXStartPos;		//쉬트에서 X 시작 좌표
	private int nXEndPos;		//쉬트에서 X 끝 좌표
	private int nXCurPos;		//현재 X 좌표
	private int nXSavePos;		//연결된 멀티 프레임 쉬트에서 시작 X 좌표 저장
	private int  nXLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 X 좌표 저장
	private boolean bIsBeforePageSkip;		//조건 밴드에서 페이지 넘기기 여부 판단
	private int nLoopRef;		//절대 양식에서 루프 참조 변수
	private String isEmpty="";		//빈 문자열 비교에 사용

	private HttpServletRequest request;
	private HttpServletResponse response;
	private JspWriter out;

	//-----데이터 변수 선언-----
	String sheet10_A1;
	String sheet10_A2;
	String sheet10_B2;
	String sheet10_A3;
	String sheet10_B3;
	String sheet10_A5;
	String sheet10_A6;
	String sheet10_B6;
	String sheet10_G6;
	String sheet10_A7;
	String sheet10_B7;
	String sheet10_G7;
	String sheet10_H7;
	String sheet10_I7;
	String sheet10_A8;
	String sheet10_A9;
	String sheet10_G9;
	String sheet10_A10;
	String sheet10_B10;
	String sheet10_G10;
	String sheet10_A11;
	String sheet10_B11;
	String sheet10_G11;
	String sheet10_A12;
	String sheet10_A13;
	String sheet20_B1;
	String sheet20_C1;
	String sheet20_D1;
	String sheet20_E1;
	String sheet20_F1;
	String sheet20_G1;
	String sheet20_H1;
	String sheet20_I1;
	String sheet20_B2;
	double sheet20_C2;
	String sheet20_D2;
	String sheet20_E2;
	String sheet20_F2;
	String sheet20_G2;
	String sheet30_B2;
	String sheet30_B3;
	String sheet30_C3;
	String sheet30_D3;
	String sheet30_E3;
	String sheet30_J3;
	String sheet30_E4;
	String sheet30_F4;
	String sheet30_G4;
	String sheet30_H4;
	String sheet30_I4;
	long sheet30_B6;
	double sheet30_C6;
	String sheet30_D6;
	double sheet30_E6;
	double sheet30_F6;
	double sheet30_G6;
	double sheet30_H6;
	double sheet30_I6;
	long sheet30_M6;
	String sheet30_B5;
	long sheet30_D5;
	int loop2ConPage;
	int loop2ConYPos;
	String sheet30_A7;

	//-----Connection, Statement, ResultSet 객체 선언-----
	private Connection conn_DUNET;		//DSN DUNET Connection 객체
	private java.sql.Statement stat_L1;		//ResultSet L1 객체를 생성하기 위한 Statement 객체
	private ResultSet L1;		//ResultSet L1 객체
	private java.sql.Statement stat_B;		//ResultSet B 객체를 생성하기 위한 Statement 객체
	private ResultSet B;		//ResultSet B 객체
	private java.sql.Statement stat_A;		//ResultSet A 객체를 생성하기 위한 Statement 객체
	private ResultSet A;		//ResultSet A 객체
	private java.sql.Statement stat_L2;		//ResultSet L2 객체를 생성하기 위한 Statement 객체
	private ResultSet L2;		//ResultSet L2 객체

	//-----SQL 변수 선언-----
	private String sql_L1;		//ResultSet L1 객체를 생성하기 위한 쿼리문 저장
	private String sql_B;		//ResultSet B 객체를 생성하기 위한 쿼리문 저장
	private String sql_A;		//ResultSet A 객체를 생성하기 위한 쿼리문 저장
	private String sql_L2;		//ResultSet L2 객체를 생성하기 위한 쿼리문 저장

	//-----쿼리 필드 변수 선언-----
	//ResultSet L1 객체에서 필드 값을 받는 쿼리 필드 변수
	private String L1_RNAME;
	private String L1_MAS_GUBUN;
	private String L1_MAS_GUBUNNM;
	private String L1_RRESNO;
	private String L1_SEXNM;
	private double L1_EDUNO;
	private String L1_JIKNM;
	private String L1_DEPTNM;

	//ResultSet B 객체에서 필드 값을 받는 쿼리 필드 변수
	private String B_MAN_CNT;
	private String B_MAX_PACCEPT;
	private String B_MIN_PACCEPT;
	private String B_AVG_PACCEPT;
	private String B_WOMAN_CNT;
	private String B_TOT_CNT;

	//ResultSet A 객체에서 필드 값을 받는 쿼리 필드 변수
	private String A_GRCODENIKNM;
	private String A_GR_YEAR;
	private double A_GR_SEQ;
	private String A_TSEAT;
	private String A_STARTED;
	private String A_ENDDATE;
	private String A_DATE_DIFF;
	private double A_GAP;
	private String A_GUBUNNM;

	//ResultSet L2 객체에서 필드 값을 받는 쿼리 필드 변수
	private double L2_CLASSNO;
	private double L2_BON1;
	private double L2_BON2;
	private double L2_BON3;
	private double L2_BON4;
	private double L2_PACCEPT;
	private double L2_PERSON;
	private String L2_USERNO;

	//파라미터 변수 선언
	String p_grcode_Param;
	String p_grseq_Param;

	//ReportHandler 생성자 함수
	ReportHandler(HttpServletRequest request,HttpServletResponse response,Object[] userObj){
		this.request=request;
		this.response=response;
		this.userObj=userObj;
	}

	//ReportHandler 서비스 함수
	void service(JspWriter out) throws Exception{
		try{    //try 구문
			this.out=out;
			nMaxPage=0;    //nMaxPage 초기화

			//스크립트 헤더 함수 호출
			getScriptHeader("A4", "2100x2970", "9", "VERTICAL");

			//파라미터 설정 함수 호출
			setParam();

			//고정 데이터 초기화 함수 호출
			initConstVarient();

			//Connection 및 Statement 객체 생성 함수 호출
			createConnAndStateObject();

			//쿼리문 초기화 함수 호출
			initSQLConst();

			//쉬트 함수 호출
			//SHEET=Sheet1   FRAME=0 함수 호출
			executeSheet10();

			//---------------스크립트 종료---------------
			out.print("--SCRIPT_END--\r");
		}catch(Exception e){    //catch 구문
			out.print(e);
			out.print("AI!REPORT JSP ERROR!!!!\r");
		}finally{    //finally 구문
			try{    //finally try 구문
				//DataSet Close
				if(L2!=null) L2.close();
				if(stat_L2!=null) stat_L2.close();
				if(A!=null) A.close();
				if(stat_A!=null) stat_A.close();
				if(B!=null) B.close();
				if(stat_B!=null) stat_B.close();
				if(L1!=null) L1.close();
				if(stat_L1!=null) stat_L1.close();
				if(conn_DUNET!=null) conn_DUNET.close();
			}catch(Exception e){    //finally catch 구문
			}    //end finally try
		}    //end try
	}

	//-----쉬트 함수-----
	//-----SHEET=Sheet1   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet10( ) throws Exception{
		//쉬트 초기화 함수 호출
		initSheetVariant(41, 41, 546, 801, true);

		//시작 페이지 번호 출력
		out.print("-- " + nPageNum + " PAGE --\r");

		//밴드 함수 호출
		getScriptFromS1(true, true);    //Void 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기

		//자식 쉬트 호출
		//SHEET=Sheet2   FRAME=0 함수 호출
		executeSheet20();
		//SHEET=Sheet3   FRAME=0 함수 호출
		executeSheet30();
	}

	//-----SHEET=Sheet2   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet20( ) throws Exception{
		//쉬트 초기화 함수 호출
		initChildSheetVariant(41, 41, 546, 801, false, false);

		//시작 페이지 번호 출력
		out.print("-- " + nPageNum + " PAGE --\r");

		//밴드 함수 호출
		getScriptFromVoidBand203(true, true);    //Void 밴드 호출
		getScriptFromloop1(true);    //반복 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기
	}

	//-----SHEET=Sheet3   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet30( ) throws Exception{
		//쉬트 초기화 함수 호출
		initChildSheetVariant(41, 41, 546, 801, false, false);

		//시작 페이지 번호 출력
		out.print("-- " + nPageNum + " PAGE --\r");

		//밴드 함수 호출
		getScriptFromVoidBand306(true, true);    //Void 밴드 호출
		getScriptFromvoid2(true, true);    //Void 밴드 호출
		getScriptFromVoidBand305(true, true);    //Void 밴드 호출
		getScriptFromloop2(true);    //반복 밴드 호출
		getScriptFromvoid3(true, true);    //Void 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기
	}

	//-----밴드 함수-----
	//----S1 VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : S1
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFromS1(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=280;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//DataSet 객체 생성
			//ResultSet A 객체의 생성
			if(A==null){
				A = stat_A.executeQuery(sql_A);
			}else{
				A.beforeFirst();
			}
			//ResultSet B 객체의 생성
			if(B==null){
				B = stat_B.executeQuery(sql_B);
			}else{
				B.beforeFirst();
			}

			//데이터 fetch
			if(A.next()){
				setFieldVariableFromA();	//ResultSet A에서 필드 값 설정
			}else{
				setFieldInitFromA();	//ResultSet A의 필드 값 초기화
			}
			if(B.next()){
				setFieldVariableFromB();	//ResultSet B에서 필드 값 설정
			}else{
				setFieldInitFromB();	//ResultSet B의 필드 값 초기화
			}

			//데이터 변수 초기화
			sheet10_A1="";
			sheet10_B2="";
			sheet10_B3="";
			sheet10_B6="";
			sheet10_G6="";
			sheet10_B7="";
			sheet10_G7="";
			sheet10_H7="";
			sheet10_I7="";
			sheet10_A9="";
			sheet10_G9="";
			sheet10_B10="";
			sheet10_G10="";
			sheet10_B11="";
			sheet10_G11="";

			//데이터 변수 할당
			sheet10_A1=A_GR_YEAR+"년 "+A_GRCODENIKNM+" "+(int)A_GR_SEQ+"기 평가결과 보고";
			sheet10_B2= String.valueOf(A_STARTED) + " ~ " + String.valueOf(A_ENDDATE) + " ( " + String.valueOf(A_DATE_DIFF) + " )";
			sheet10_B3=A_GUBUNNM;
			sheet10_B6= A_TSEAT+"명";
			sheet10_G6=A_TSEAT;
			sheet10_B7= B_TOT_CNT+"명 (남 "+ B_MAN_CNT+"명, 여 "+ B_WOMAN_CNT+"명)";
			sheet10_G7=B_TOT_CNT;
			sheet10_H7=B_MAN_CNT;
			sheet10_I7=B_WOMAN_CNT;
			sheet10_A9="□ 성적결과 : 평균 "+ B_AVG_PACCEPT +"점";
			sheet10_G9=B_AVG_PACCEPT;
			sheet10_B10= "  " + B_MAX_PACCEPT+"점";
			sheet10_G10=B_MAX_PACCEPT;
			sheet10_B11= "  " + B_MIN_PACCEPT+"점";
			sheet10_G11=B_MIN_PACCEPT;
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptS1();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//----VoidBand203 VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet2    FRAME=Frame0
	//----밴드 이름 : VoidBand203
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFromVoidBand203(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptVoidBand203();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----loop1 RepeatBand Start-----
	//-----소속 쉬트 : SHEET=Sheet2   FRAME=Frame0
	//-----밴드 이름 : loop1
	//-----밴드 종류 : 반복 밴드
	//-----bIsPrint : 감추기 속성 설정 여부 true면 출력, false면 스크립트를 생성하지 않음
	private void getScriptFromloop1(boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=22;    //밴드 출력 높이
		boolean bIsFirst=true;

		//데이터 변수 초기화
		sheet20_B2="";
		sheet20_C2=0;
		sheet20_D2="";
		sheet20_E2="";
		sheet20_F2="";
		sheet20_G2="";

		//DataSet 객체 생성
		//ResultSet L1 객체의 생성
		if(L1==null){
			L1 = stat_L1.executeQuery(sql_L1);
		}else{
			L1.beforeFirst();
		}

		while(L1.next()){   //자동으로 생성되는 반복 밴드의 루프문
			//데이터 fetch
			setFieldVariableFromL1();	//RecordSet L1에서 필드 값 설정

			if(bIsFirst){   //밴드 호출 후 루프 내에서 한번 만 실행되는 코드
			}   //end if(bIsFirst)

			//데이터 변수 할당
			sheet20_B2=L1_MAS_GUBUNNM;
			sheet20_C2=L1_EDUNO;
			sheet20_D2=L1_DEPTNM;
			sheet20_E2=L1_JIKNM;
			sheet20_F2=L1_RNAME;
			sheet20_G2=L1_SEXNM;

			//AI 스크립트 출력
			if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
				if(isPageSkip(nYCurPos+nBandHeight)){   //스크립트 출력 영역 검사
					//페이지 스킵 함수 호출
					pageSkip(10);
				}   //end if(page skip test)

				//스크립트 출력 함수 호출
				writeScriptloop1();

				//다음 출력 좌표 설정
				nYCurPos=nYCurPos+nBandHeight;
			}   //end if(bIsPrint)

			//bIsFirst 및 출력 라인 설정
			bIsFirst=false;
		}   //while end
	}

	//----VoidBand306 VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet3    FRAME=Frame0
	//----밴드 이름 : VoidBand306
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFromVoidBand306(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=12;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 함수 호출
			//Empty Row만으로 구성되어 출력 위치를 조정하기 위한 VoidBand 함수 호출
			voidBandNoneData(nBandHeight, 10);
		}   //end if(bIsPrint)
	}

	//----void2 VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet3    FRAME=Frame0
	//----밴드 이름 : void2
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFromvoid2(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptvoid2();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//----VoidBand305 VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet3    FRAME=Frame0
	//----밴드 이름 : VoidBand305
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFromVoidBand305(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=40;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptVoidBand305();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//----loop2Con ConditionBand Start----
	//----소속 쉬트 : SHEET=Sheet3    FRAME=Frame0
	//----밴드 이름 : loop2Con
	//----밴드 종류 : 조건 밴드
	//----bIsFrist : 부모 밴드 함수에서 최초로 호출될 때 true
	//----bIsLast : 부모 밴드 함수에서 마지막으로 호출될 때 true
	//----bIsTrue : 부모 밴드 함수에서 조건 밴드 출력 조건 플래그 값
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromloop2Con(boolean bIsFirst, boolean bIsLast, boolean bIsTrue, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;	//밴드 출력 높이
		int nSaveYPos=0;

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//데이터 변수 초기화
			sheet30_D5=0L;

			//출력 좌표 및 페이지 설정
			if(bIsPrint){   //현재 Y좌표와 페이지 번호를 저장
				repositionPageOverloop2Con();
			}
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsTrue){   //조건 밴드 출력 플래그 값이 true인 경우
			//조건 밴드의 참 값
			if(bIsPrint){   //WriteBandObj() 함수 대체 코드
				nSaveYPos=nYCurPos;   //현재 Y좌표 임시변수에 저장
				nYCurPos=loop2ConYPos;   //조건 밴드 출력 Y좌표 설정
				out.print("-- " + loop2ConPage + " PAGE --\r");
				writeScriptloop2Con();   //스크립트문 출력
				out.print("-- " + nPageNum + " PAGE --\r");
				nYCurPos=nSaveYPos;
				sheet30_D5=0L;
			}
		}else{   //조건 밴드 출력 플래그 값이 false인 경우
		}   //end if(bIsTrue)

		if(!bIsLast){   //bIsLast가 false인 경우 - 조건 밴드의 수식 계산
			//데이터 변수 할당
			sheet30_D5=(long)SUM(sheet30_M6, sheet30_D5);
		}   //end if(!bIsLast)
	}

	//----loop2Con 조건 밴드 출력 영역 설정 혹은 페이지 넘기기 함수----
	private void repositionPageOverloop2Con( ) throws Exception{
		//스크립트 출력 영역 검사
		if(isPageSkip(nYCurPos+20)){
			pageSkip(10);
			bIsBeforePageSkip=true;
		}

		//출력 좌표 및 페이지 설정
		loop2ConYPos=nYCurPos;
		loop2ConPage=nPageNum;
		nYCurPos=nYCurPos+20;
	}

	//-----loop2 RepeatBand Start-----
	//-----소속 쉬트 : SHEET=Sheet3   FRAME=Frame0
	//-----밴드 이름 : loop2
	//-----밴드 종류 : 반복 밴드
	//-----bIsPrint : 감추기 속성 설정 여부 true면 출력, false면 스크립트를 생성하지 않음
	private void getScriptFromloop2(boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;    //밴드 출력 높이
		boolean bIsFirst=true;
		boolean bIsTrue_loop2Con=false;   //loop2Con 조건 밴드 플래그 선언

		//데이터 변수 초기화
		sheet30_B6=0L;
		sheet30_C6=0;
		sheet30_D6="";
		sheet30_E6=0;
		sheet30_F6=0;
		sheet30_G6=0;
		sheet30_H6=0;
		sheet30_I6=0;

		//DataSet 객체 생성
		//ResultSet L2 객체의 생성
		if(L2==null){
			L2 = stat_L2.executeQuery(sql_L2);
		}else{
			L2.beforeFirst();
		}

		while(L2.next()){   //자동으로 생성되는 반복 밴드의 루프문
			//데이터 fetch
			setFieldVariableFromL2();	//RecordSet L2에서 필드 값 설정

			if(bIsFirst){   //밴드 호출 후 루프 내에서 한번 만 실행되는 코드
				//반복 헤더 호출 및 조건 플래그 초기화
				bIsTrue_loop2Con=false;    //loop2Con 조건 밴드 플래그 초기화
			}   //end if(bIsFirst)

			//데이터 변수 할당
			sheet30_B6=COUNT(sheet30_B6);
			sheet30_C6=L2_CLASSNO;
			sheet30_D6=L2_USERNO;
			sheet30_E6=L2_BON1;
			sheet30_F6=L2_BON2;
			sheet30_G6=L2_BON3;
			sheet30_H6=L2_BON4;
			sheet30_I6=L2_PACCEPT;

			//루프 내부 조건밴드 및 스타일 함수 호출
			getScriptFromloop2Con(bIsFirst, false, bIsTrue_loop2Con, true);   //loop2Con 조건 밴드 호출
			if(bIsTrue_loop2Con){    //loop2Con 조건 밴드 출력 후 다음 출력 좌표를 구하거나 페이지 넘기기
				repositionPageOverloop2Con();
			}

			//AI 스크립트 출력
			if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
				if(isPageSkip(nYCurPos+nBandHeight)){   //스크립트 출력 영역 검사
					//페이지 스킵 함수 호출
					pageSkip(10);
				}   //end if(page skip test)

				//스크립트 출력 함수 호출
				writeScriptloop2();

				//다음 출력 좌표 설정
				nYCurPos=nYCurPos+nBandHeight;
			}   //end if(bIsPrint)

			//bIsFirst 및 출력 라인 설정
			bIsFirst=false;
		}   //while end

		//루프 외부 조건밴드 및 스타일 함수 호출
		getScriptFromloop2Con(bIsFirst, true, true, true);   //loop2Con 조건 밴드 호출
	}

	//----void3 VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet3    FRAME=Frame0
	//----밴드 이름 : void3
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFromvoid3(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=47;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptvoid3();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----스크립트 출력 함수-----
	//----S1 스크립트 문 출력 함수----
	private void writeScriptS1( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",505,1,16,0/,돋움체,RGB[0,0,0],BOLD, , ,NONE,40,1)");
		out.println(sheet10_A1+"\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+40)+",73,0,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A2+"\r");
		out.print("^PRINT("+(nXCurPos+73)+","+(nYCurPos+40)+",432,0,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_B2+"\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+60)+",73,0,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A3+"\r");
		out.print("^PRINT("+(nXCurPos+73)+","+(nYCurPos+60)+",432,0,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_B3+"\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+100)+",505,0,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A5+"\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+120)+",73,0,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A6+"\r");
		out.print("^PRINT("+(nXCurPos+73)+","+(nYCurPos+120)+",432,0,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_B6+"\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+140)+",73,0,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A7+"\r");
		out.print("^PRINT("+(nXCurPos+73)+","+(nYCurPos+140)+",432,0,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_B7+"\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+160)+",505,0,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A8+"\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+180)+",505,0,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A9+"\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+200)+",73,0,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A10+"\r");
		out.print("^PRINT("+(nXCurPos+73)+","+(nYCurPos+200)+",432,0,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_B10+"\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+220)+",73,0,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A11+"\r");
		out.print("^PRINT("+(nXCurPos+73)+","+(nYCurPos+220)+",432,0,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_B11+"\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+240)+",505,0,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A12+"\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+260)+",505,0,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A13+"\r");
	}

	//----VoidBand203 스크립트 문 출력 함수----
	private void writeScriptVoidBand203( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLBG("+(nXCurPos+20)+","+(nYCurPos)+",42,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+20)+","+(nYCurPos)+",42,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+20)+","+(nYCurPos)+",42,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+20)+","+(nYCurPos)+",42,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+20)+","+(nYCurPos)+",42,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+20)+","+(nYCurPos)+",42,1,10,0/,돋움,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet20_B1+"\r");
		out.println("^CELLBG("+(nXCurPos+62)+","+(nYCurPos)+",38,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+62)+","+(nYCurPos)+",38,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+62)+","+(nYCurPos)+",38,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+62)+","+(nYCurPos)+",38,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+62)+","+(nYCurPos)+",38,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+62)+","+(nYCurPos)+",38,1,10,0/,돋움,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet20_C1+"\r");
		out.println("^CELLBG("+(nXCurPos+100)+","+(nYCurPos)+",103,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+100)+","+(nYCurPos)+",103,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+100)+","+(nYCurPos)+",103,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+100)+","+(nYCurPos)+",103,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+100)+","+(nYCurPos)+",103,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+100)+","+(nYCurPos)+",103,1,10,0/,돋움,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet20_D1+"\r");
		out.println("^CELLBG("+(nXCurPos+203)+","+(nYCurPos)+",103,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+203)+","+(nYCurPos)+",103,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+203)+","+(nYCurPos)+",103,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+203)+","+(nYCurPos)+",103,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+203)+","+(nYCurPos)+",103,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+203)+","+(nYCurPos)+",103,1,10,0/,돋움,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet20_E1+"\r");
		out.println("^CELLBG("+(nXCurPos+306)+","+(nYCurPos)+",49,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",49,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",49,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",49,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",49,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+306)+","+(nYCurPos)+",49,1,10,0/,돋움,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet20_F1+"\r");
		out.println("^CELLBG("+(nXCurPos+355)+","+(nYCurPos)+",49,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+355)+","+(nYCurPos)+",49,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+355)+","+(nYCurPos)+",49,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+355)+","+(nYCurPos)+",49,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+355)+","+(nYCurPos)+",49,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+355)+","+(nYCurPos)+",49,1,10,0/,돋움,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet20_G1+"\r");
		out.println("^CELLBG("+(nXCurPos+404)+","+(nYCurPos)+",42,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+404)+","+(nYCurPos)+",42,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+404)+","+(nYCurPos)+",42,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+404)+","+(nYCurPos)+",42,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+404)+","+(nYCurPos)+",42,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+404)+","+(nYCurPos)+",42,1,10,0/,돋움,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet20_H1+"\r");
		out.println("^CELLBG("+(nXCurPos+446)+","+(nYCurPos)+",58,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",58,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",58,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",58,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",58,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+446)+","+(nYCurPos)+",58,1,10,0/,돋움,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet20_I1+"\r");
	}

	//----loop1 스크립트 문 출력 함수----
	private void writeScriptloop1( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLLINE("+(nXCurPos+20)+","+(nYCurPos)+",42,22,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+20)+","+(nYCurPos)+",42,22,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+20)+","+(nYCurPos)+",42,22,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+20)+","+(nYCurPos)+",42,22,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+20)+","+(nYCurPos)+",42,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,22,1)");
		out.println(sheet20_B2+"\r");
		out.println("^CELLLINE("+(nXCurPos+62)+","+(nYCurPos)+",38,22,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+62)+","+(nYCurPos)+",38,22,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+62)+","+(nYCurPos)+",38,22,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+62)+","+(nYCurPos)+",38,22,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+62)+","+(nYCurPos)+",38,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,22,1)");
		out.println(sheet20_C2+"\r");
		out.println("^CELLLINE("+(nXCurPos+100)+","+(nYCurPos)+",103,22,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+100)+","+(nYCurPos)+",103,22,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+100)+","+(nYCurPos)+",103,22,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+100)+","+(nYCurPos)+",103,22,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+100)+","+(nYCurPos)+",103,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,22,1)");
		out.println(sheet20_D2+"\r");
		out.println("^CELLLINE("+(nXCurPos+203)+","+(nYCurPos)+",103,22,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+203)+","+(nYCurPos)+",103,22,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+203)+","+(nYCurPos)+",103,22,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+203)+","+(nYCurPos)+",103,22,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+203)+","+(nYCurPos)+",103,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,22,1)");
		out.println(sheet20_E2+"\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",49,22,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",49,22,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",49,22,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",49,22,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+306)+","+(nYCurPos)+",49,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,22,1)");
		out.println(sheet20_F2+"\r");
		out.println("^CELLLINE("+(nXCurPos+355)+","+(nYCurPos)+",49,22,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+355)+","+(nYCurPos)+",49,22,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+355)+","+(nYCurPos)+",49,22,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+355)+","+(nYCurPos)+",49,22,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+355)+","+(nYCurPos)+",49,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,22,1)");
		out.println(sheet20_G2+"\r");
		out.println("^CELLLINE("+(nXCurPos+404)+","+(nYCurPos)+",42,22,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+404)+","+(nYCurPos)+",42,22,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+404)+","+(nYCurPos)+",42,22,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+404)+","+(nYCurPos)+",42,22,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",58,22,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",58,22,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",58,22,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",58,22,0,RGB[0,0,0],3)\r");
	}

	//----void2 스크립트 문 출력 함수----
	private void writeScriptvoid2( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT("+(nXCurPos+20)+","+(nYCurPos)+",195,0,10,0/,돋움,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_B2+"\r");
	}

	//----VoidBand305 스크립트 문 출력 함수----
	private void writeScriptVoidBand305( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLBG("+(nXCurPos+20)+","+(nYCurPos)+",52,40,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+20)+","+(nYCurPos)+",52,40,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+20)+","+(nYCurPos)+",52,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+20)+","+(nYCurPos)+",52,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+20)+","+(nYCurPos)+",52,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+20)+","+(nYCurPos)+",52,1,10,0/,돋움,RGB[0,0,0], , , ,NONE,40,1)");
		out.println(sheet30_B3+"\r");
		out.println("^CELLBG("+(nXCurPos+72)+","+(nYCurPos)+",42,40,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",42,40,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",42,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",42,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",42,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+72)+","+(nYCurPos)+",42,1,10,0/,돋움,RGB[0,0,0], , , ,NONE,40,1)");
		out.println(sheet30_C3+"\r");
		out.println("^CELLBG("+(nXCurPos+114)+","+(nYCurPos)+",101,40,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+114)+","+(nYCurPos)+",101,40,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+114)+","+(nYCurPos)+",101,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+114)+","+(nYCurPos)+",101,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+114)+","+(nYCurPos)+",101,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+114)+","+(nYCurPos)+",101,1,10,0/,돋움,RGB[0,0,0], , , ,NONE,40,1)");
		out.println(sheet30_D3+"\r");
		out.println("^CELLBG("+(nXCurPos+215)+","+(nYCurPos)+",229,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos)+",229,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos)+",229,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos)+",229,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos)+",229,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+215)+","+(nYCurPos)+",229,1,10,0/,돋움,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_E3+"\r");
		out.println("^CELLBG("+(nXCurPos+444)+","+(nYCurPos)+",60,40,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+444)+","+(nYCurPos)+",60,40,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+444)+","+(nYCurPos)+",60,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+444)+","+(nYCurPos)+",60,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+444)+","+(nYCurPos)+",60,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+444)+","+(nYCurPos)+",60,1,10,0/,돋움,RGB[0,0,0], , , ,NONE,40,1)");
		out.println(sheet30_J3+"\r");
		out.println("^CELLBG("+(nXCurPos+215)+","+(nYCurPos+20)+",45,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos+20)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+215)+","+(nYCurPos+20)+",45,1,10,0/,돋움,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_E4+"\r");
		out.println("^CELLBG("+(nXCurPos+260)+","+(nYCurPos+20)+",46,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+260)+","+(nYCurPos+20)+",46,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+260)+","+(nYCurPos+20)+",46,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+260)+","+(nYCurPos+20)+",46,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+260)+","+(nYCurPos+20)+",46,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+260)+","+(nYCurPos+20)+",46,1,10,0/,돋움,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_F4+"\r");
		out.println("^CELLBG("+(nXCurPos+306)+","+(nYCurPos+20)+",43,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos+20)+",43,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos+20)+",43,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos+20)+",43,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos+20)+",43,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+306)+","+(nYCurPos+20)+",43,1,10,0/,돋움,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_G4+"\r");
		out.println("^CELLBG("+(nXCurPos+349)+","+(nYCurPos+20)+",46,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+349)+","+(nYCurPos+20)+",46,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+349)+","+(nYCurPos+20)+",46,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+349)+","+(nYCurPos+20)+",46,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+349)+","+(nYCurPos+20)+",46,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+349)+","+(nYCurPos+20)+",46,1,10,0/,돋움,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_H4+"\r");
		out.println("^CELLBG("+(nXCurPos+395)+","+(nYCurPos+20)+",49,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos+20)+",49,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos+20)+",49,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos+20)+",49,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos+20)+",49,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+395)+","+(nYCurPos+20)+",49,1,10,0/,돋움,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_I4+"\r");
	}

	//----loop2Con 스크립트 문 출력 함수----
	private void writeScriptloop2Con( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLLINE("+(nXCurPos+20)+","+(nYCurPos)+",52,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+20)+","+(nYCurPos)+",52,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+20)+","+(nYCurPos)+",52,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+20)+","+(nYCurPos)+",52,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+20)+","+(nYCurPos)+",52,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_B5+"\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",42,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",42,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",42,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",42,20,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos+114)+","+(nYCurPos)+",101,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+114)+","+(nYCurPos)+",101,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+114)+","+(nYCurPos)+",101,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+114)+","+(nYCurPos)+",101,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+114)+","+(nYCurPos)+",101,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_D5+"\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos+260)+","+(nYCurPos)+",46,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+260)+","+(nYCurPos)+",46,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+260)+","+(nYCurPos)+",46,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+260)+","+(nYCurPos)+",46,20,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",43,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",43,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",43,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",43,20,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos+349)+","+(nYCurPos)+",46,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+349)+","+(nYCurPos)+",46,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+349)+","+(nYCurPos)+",46,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+349)+","+(nYCurPos)+",46,20,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos)+",49,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos)+",49,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos)+",49,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos)+",49,20,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos+444)+","+(nYCurPos)+",60,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+444)+","+(nYCurPos)+",60,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+444)+","+(nYCurPos)+",60,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+444)+","+(nYCurPos)+",60,20,0,RGB[0,0,0],3)\r");
	}

	//----loop2 스크립트 문 출력 함수----
	private void writeScriptloop2( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLLINE("+(nXCurPos+20)+","+(nYCurPos)+",52,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+20)+","+(nYCurPos)+",52,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+20)+","+(nYCurPos)+",52,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+20)+","+(nYCurPos)+",52,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+20)+","+(nYCurPos)+",52,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_B6+"\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",42,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",42,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",42,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",42,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+72)+","+(nYCurPos)+",42,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_C6+"\r");
		out.println("^CELLLINE("+(nXCurPos+114)+","+(nYCurPos)+",101,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+114)+","+(nYCurPos)+",101,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+114)+","+(nYCurPos)+",101,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+114)+","+(nYCurPos)+",101,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+114)+","+(nYCurPos)+",101,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_D6+"\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+215)+","+(nYCurPos)+",45,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+215)+","+(nYCurPos)+",45,1,10,1/0/1,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_E6+"\r");
		out.println("^CELLLINE("+(nXCurPos+260)+","+(nYCurPos)+",46,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+260)+","+(nYCurPos)+",46,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+260)+","+(nYCurPos)+",46,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+260)+","+(nYCurPos)+",46,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+260)+","+(nYCurPos)+",46,1,10,1/0/1,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_F6+"\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",43,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",43,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",43,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+306)+","+(nYCurPos)+",43,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+306)+","+(nYCurPos)+",43,1,10,1/0/1,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_G6+"\r");
		out.println("^CELLLINE("+(nXCurPos+349)+","+(nYCurPos)+",46,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+349)+","+(nYCurPos)+",46,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+349)+","+(nYCurPos)+",46,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+349)+","+(nYCurPos)+",46,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+349)+","+(nYCurPos)+",46,1,10,1/0/1,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_H6+"\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos)+",49,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos)+",49,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos)+",49,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+395)+","+(nYCurPos)+",49,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+395)+","+(nYCurPos)+",49,1,10,1/0/1,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_I6+"\r");
		out.println("^CELLLINE("+(nXCurPos+444)+","+(nYCurPos)+",60,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+444)+","+(nYCurPos)+",60,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+444)+","+(nYCurPos)+",60,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+444)+","+(nYCurPos)+",60,20,0,RGB[0,0,0],3)\r");
	}

	//----void3 스크립트 문 출력 함수----
	private void writeScriptvoid3( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",504,0,10,0/,돋움체,RGB[0,0,0], , , ,NONE,47,1)");
		out.println(sheet30_A7+"\r");
	}

	//파라미터 설정 함수
	private void setParam(){
		p_grcode_Param=toKor(GetB(request.getParameter("p_grcode")));
		p_grseq_Param=toKor(GetB(request.getParameter("p_grseq")));
	}

	//-----Connection 및 Statement 객체 생성 함수-----
	private void createConnAndStateObject() throws Exception{
		//DUNET Connection 객체 생성
		Class.forName("oracle.jdbc.driver.OracleDriver");
		conn_DUNET = DriverManager.getConnection("jdbc:oracle:thin:@192.168.10.253:1521:LOTI","inchlms","fhxl21");stat_L1=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_B=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_A=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_L2=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
	}

	//-----SQL문 변수 초기화 함수-----
	private void initSQLConst(){
		sql_L1 = "select gr.rname, sm.mas_gubun, decode(sm.mas_gubun, 'M', '학생장', '부학생장') mas_gubunnm,  ";
		sql_L1 = sql_L1 + " gr.rresno, decode(substr(gr.rresno, 7,1),'1','남', '2', '여') sexnm,  gr.eduno, jk.jiknm, dt.deptnm   ";
		sql_L1 = sql_L1 + " from tb_grresult gr, tb_grstumas sm , tb_dept dt, tb_jik jk ";
		sql_L1 = sql_L1 + " where gr.grcode=sm.grcode and gr.grseq=sm.grseq and gr.userno=sm.userno  ";
		sql_L1 = sql_L1 + "           and gr.rdept=dt.dept and gr.rjik=jk.jik and gr.grcode=" + p_grcode_Param + " and gr.grseq=" + p_grseq_Param + "   ";
		sql_L1 = sql_L1 + "order by decode(sm.mas_gubun, 'M',1,2) asc, gr.rname";
		sql_B = "select to_char(sum(decode(substr(rresno, 7,1),'1',1, 0))) man_cnt ";
		sql_B = sql_B + "       , to_char(round(max(paccept),2)) max_paccept ";
		sql_B = sql_B + "       , to_char(round(min(paccept),2)) min_paccept ";
		sql_B = sql_B + "       , to_char(round(avg(paccept),2)) avg_paccept ";
		sql_B = sql_B + "       , to_char(sum(decode(substr(rresno, 7,1),'2',1, 0))) woman_cnt ";
		sql_B = sql_B + "       , to_char(count(*)) tot_cnt    ";
		sql_B = sql_B + " from tb_grresult  ";
		sql_B = sql_B + "where grcode=" + p_grcode_Param + " and grseq=" + p_grseq_Param + "";
		sql_A = "select gs.grcodeniknm, substr(gs.grseq,1,4) gr_year, to_number(substr(gs.grseq,5,2)) gr_seq, to_char(gs.tseat) tseat ,  ";
		sql_A = sql_A + "      to_char(gs.started,'yyyy.mm.dd') started, to_char(gs.enddate,'mm.dd') enddate,  ";
		sql_A = sql_A + "     case when to_number((gs.enddate - gs.started)+1) < 7 then ";
		sql_A = sql_A + "       to_number((gs.enddate - gs.started)+1) || '일' ";
		sql_A = sql_A + "     else ";
		sql_A = sql_A + "       round(to_number((gs.enddate - gs.started)+1)/7) || '주' ";
		sql_A = sql_A + "     end date_diff, ";
		sql_A = sql_A + "     case when gs.enddate is null or gs.started is null then 0  ";
		sql_A = sql_A + "     else decode(mod(gs.enddate-gs.started+1, 7), 0, trunc((gs.enddate-gs.started+1)/7),  ";
		sql_A = sql_A + "     trunc((gs.enddate-gs.started+1)/7)+1) end gap, mc.mcode_name||sc.scode_name||'교육' as gubunnm  ";
		sql_A = sql_A + "     from  tb_grseq gs, tb_grcode gc, tb_maincode mc, tb_subcode sc  ";
		sql_A = sql_A + "     where gs.grcode=" + p_grcode_Param + " and gs.grseq=" + p_grseq_Param + "  and gs.grcode=gc.grcode  ";
		sql_A = sql_A + "     and mc.cd_gubun='G'  and gc.grtype=mc.major_code and sc.cd_gubun='G'   ";
		sql_A = sql_A + "     and gc.grtype=sc.major_code and gc.grsubcd=sc.minor_code";
		sql_L2 = "select ";
		sql_L2 = sql_L2 + "    a.classno classno, a.bon1 bon1, a.bon2 bon2, a.bon3 bon3, a.bon4 bon4, a.paccept paccept, a.person person, searchname(b.userno) || ' 외 ' || (person-1) || '명' as userno ";
		sql_L2 = sql_L2 + "from ";
		sql_L2 = sql_L2 + "( ";
		sql_L2 = sql_L2 + "    select  ";
		sql_L2 = sql_L2 + "        grcode, grseq, classno, bon1, bon2, bon3, bon4, paccept, person, eduno ";
		sql_L2 = sql_L2 + "    from ";
		sql_L2 = sql_L2 + "    ( ";
		sql_L2 = sql_L2 + "        select ";
		sql_L2 = sql_L2 + "            min(grcode) grcode, ";
		sql_L2 = sql_L2 + "            min(grseq) grseq, ";
		sql_L2 = sql_L2 + "            classno, ";
		sql_L2 = sql_L2 + "            max(decode(subj, 'BON0000001', paccept, null)) bon1,  ";
		sql_L2 = sql_L2 + "            max(decode(subj, 'BUN0000001', paccept, null)) bon2,   ";
		sql_L2 = sql_L2 + "            max(decode(subj, 'NUS0000002', paccept, null)) bon3, ";
		sql_L2 = sql_L2 + "            max(decode(subj, 'NUS0000003', paccept, null)) bon4,           ";
		sql_L2 = sql_L2 + "            sum(paccept) paccept, ";
		sql_L2 = sql_L2 + "            sum(cnt) person, ";
		sql_L2 = sql_L2 + "            min(eduno) eduno          ";
		sql_L2 = sql_L2 + "        from  ";
		sql_L2 = sql_L2 + "        ( ";
		sql_L2 = sql_L2 + "            select a.subj subj, min(a.grcode) grcode, min(a.grseq) grseq, a.classno classno, max(a.paccept) paccept, sum(decode(a.subj, 'BON0000001', 1, 0)) cnt, min(eduno) eduno ";
		sql_L2 = sql_L2 + "            from tb_stu_lec a, tb_app_info b ";
		sql_L2 = sql_L2 + "            where a.userno = b.userno and a.grcode = b.grcode and a.grseq = b.grseq and a.subj in ('BON0000001', 'BUN0000001', 'NUS0000002', 'NUS0000003')  and a.grcode='" + p_grcode_Param + "' and a.grseq='" + p_grseq_Param + "'   ";
		sql_L2 = sql_L2 + "            group by a.subj, a.classno ";
		sql_L2 = sql_L2 + "        )  ";
		sql_L2 = sql_L2 + "        group by classno ";
		sql_L2 = sql_L2 + "        order by paccept desc ";
		sql_L2 = sql_L2 + "    )  ";
		sql_L2 = sql_L2 + ")a, tb_app_info b ";
		sql_L2 = sql_L2 + "where  ";
		sql_L2 = sql_L2 + "    a.grcode = b.grcode and a.grseq = b.grseq and a.eduno = b.eduno ";
		sql_L2 = sql_L2 + "    and rownum <= 3";
	}

	//-----ResultSet 객체에서 필드 값 설정 함수-----
	//ResultSet L1 객체에서 필드 값 설정 함수
	private void setFieldVariableFromL1() throws Exception{
		L1_RNAME=GetB(L1.getString(1));
		L1_MAS_GUBUN=GetB(L1.getString(2));
		L1_MAS_GUBUNNM=GetB(L1.getString(3));
		L1_RRESNO=GetB(L1.getString(4));
		L1_SEXNM=GetB(L1.getString(5));
		L1_EDUNO=L1.getDouble(6);
		L1_JIKNM=GetB(L1.getString(7));
		L1_DEPTNM=GetB(L1.getString(8));
	}

	//ResultSet L1 객체의 필드 값 초기화 함수
	private void setFieldInitFromL1(){
		L1_RNAME="";
		L1_MAS_GUBUN="";
		L1_MAS_GUBUNNM="";
		L1_RRESNO="";
		L1_SEXNM="";
		L1_EDUNO=0;
		L1_JIKNM="";
		L1_DEPTNM="";
	}

	//ResultSet B 객체에서 필드 값 설정 함수
	private void setFieldVariableFromB() throws Exception{
		B_MAN_CNT=GetB(B.getString(1));
		B_MAX_PACCEPT=GetB(B.getString(2));
		B_MIN_PACCEPT=GetB(B.getString(3));
		B_AVG_PACCEPT=GetB(B.getString(4));
		B_WOMAN_CNT=GetB(B.getString(5));
		B_TOT_CNT=GetB(B.getString(6));
	}

	//ResultSet B 객체의 필드 값 초기화 함수
	private void setFieldInitFromB(){
		B_MAN_CNT="";
		B_MAX_PACCEPT="";
		B_MIN_PACCEPT="";
		B_AVG_PACCEPT="";
		B_WOMAN_CNT="";
		B_TOT_CNT="";
	}

	//ResultSet A 객체에서 필드 값 설정 함수
	private void setFieldVariableFromA() throws Exception{
		A_GRCODENIKNM=GetB(A.getString(1));
		A_GR_YEAR=GetB(A.getString(2));
		A_GR_SEQ=A.getDouble(3);
		A_TSEAT=GetB(A.getString(4));
		A_STARTED=GetB(A.getString(5));
		A_ENDDATE=GetB(A.getString(6));
		A_DATE_DIFF=GetB(A.getString(7));
		A_GAP=A.getDouble(8);
		A_GUBUNNM=GetB(A.getString(9));
	}

	//ResultSet A 객체의 필드 값 초기화 함수
	private void setFieldInitFromA(){
		A_GRCODENIKNM="";
		A_GR_YEAR="";
		A_GR_SEQ=0;
		A_TSEAT="";
		A_STARTED="";
		A_ENDDATE="";
		A_DATE_DIFF="";
		A_GAP=0;
		A_GUBUNNM="";
	}

	//ResultSet L2 객체에서 필드 값 설정 함수
	private void setFieldVariableFromL2() throws Exception{
		L2_CLASSNO=L2.getDouble(1);
		L2_BON1=L2.getDouble(2);
		L2_BON2=L2.getDouble(3);
		L2_BON3=L2.getDouble(4);
		L2_BON4=L2.getDouble(5);
		L2_PACCEPT=L2.getDouble(6);
		L2_PERSON=L2.getDouble(7);
		L2_USERNO=GetB(L2.getString(8));
	}

	//ResultSet L2 객체의 필드 값 초기화 함수
	private void setFieldInitFromL2(){
		L2_CLASSNO=0;
		L2_BON1=0;
		L2_BON2=0;
		L2_BON3=0;
		L2_BON4=0;
		L2_PACCEPT=0;
		L2_PERSON=0;
		L2_USERNO="";
	}

	//-----고정 데이터 초기화 함수-----
	private void initConstVarient(){
		sheet10_A2="□ 교육기간 : ";
		sheet10_A3="□ 교육구분 : ";
		sheet10_A5="□ 교육대상 및 인원";
		sheet10_A6="     ○ 대상 :";
		sheet10_A7="     ○ 인원 :";
		sheet10_A8="□ 평가결과(성적순)";
		sheet10_A10="     ○ 최고점 :";
		sheet10_A11="     ○ 최하점 :";
		sheet10_A12="□ 시상 :";
		sheet10_A13="     ○ 자치회 유공자(격려품 수여)";
		sheet20_B1="구 분";
		sheet20_C1="교번";
		sheet20_D1="소   속";
		sheet20_E1="직 급";
		sheet20_F1="성 명";
		sheet20_G1="성 별";
		sheet20_H1="격려품";
		sheet20_I1="비고";
		sheet30_B2="○ 성적우수분임(시상금 수여-계좌입금)";
		sheet30_B3="순 위";
		sheet30_C3="분 임";
		sheet30_D3="분 임 원";
		sheet30_E3="성 적";
		sheet30_J3="시 상 금";
		sheet30_E4="봉사";
		sheet30_F4="분임";
		sheet30_G4="실기";
		sheet30_H4="역할극";
		sheet30_I4="총정";
		sheet30_M6=1;
		sheet30_B5="계";
		sheet30_A7="※ 성적이 동점인 경우  1순위 근태평가 성적이 우수한 자, 2순위 강사평가 성적이 우수한 자    3순위 자치활동에 공이 많은자, 4순위 연구과제평가 성적이 우수한 자, 5순위 연령이 많은자 순으로 결정";
	}

	//-----페이지 스킵 관련 함수-----
	//페이지 스킵시 호출되는 함수로서 페이지 번호를 증가시키고 페이지 지시문 출력 그리고 Y좌표 초기화
	//매개변수에 따라 해당 쉬트의 배경 이미지, 머리글 밴드, 바닥글 밴드 함수 호출
	private void pageSkip(int nIndex) throws Exception{
		nXCurPos=nXStartPos;
		nYCurPos=nYStartPos;
		nPageNum=nPageNum+1;
		out.print("-- " + nPageNum + " PAGE --\r");

		switch(nIndex){
			case 10:		//SHEET=Sheet=1   FRAME=0에서 페이지 스킵시
			break;
		}
	}

	//페이지 스킵이 필요한지 검사하는 함수
	private boolean isPageSkip(int nTestPos){
		if(nTestPos>nYEndPos){
			return true;
		}else{
			return false;
		}
	}

	//-----공통 함수 선언-----
	private void getScriptHeader(String paper, String size, String value, String orient) throws Exception{
		out.print("--SCRIPT_START31--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void getSheetPaperInfo(String paper, String size, String value, String orient) throws Exception{
		out.print("--PAPER_INFO--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void initSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bFirstFrame){
		if(bFirstFrame){
			nStartPage=nMaxPage+1;
			nYLastPos=0;
		}
		nPageNum=nStartPage;
		nYStartPos=constStartY;
		nYEndPos=constEndY;
		nYCurPos=nYStartPos;
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
	}

	private void initChildSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bIsMultiFrame, boolean bIsFirstFrame){
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
		nYStartPos=constStartY;
		nYEndPos=constEndY;

		if(bIsMultiFrame){
			if(bIsFirstFrame){
				nStartPage=nPageNum;
				nYSavePos=nYCurPos;
				nYLastPos=0;
			}else{
				nPageNum=nStartPage;
				nYCurPos=nYSavePos;
			}
		}else{
			nStartPage=nPageNum;
		}
	}

	//Empty Row만으로 구성되어 출력 위치를 조정하기 위한 VoidBand 함수
	//nRangePos - VoidBand의 출력 영역
	//nIndex - PageSkip 함수 호출시 전달할 쉬트 인덱스
	private boolean voidBandNoneData(int nRangePos, int nIndex) throws Exception{
		int nTestPos;
		nTestPos=nYCurPos+nRangePos;
		if(isPageSkip(nTestPos)){
			pageSkip(nIndex);
			return true;
		}else{
			nYCurPos=nYCurPos+nRangePos;
			return false;
		}
	}

	private String Get0(String str){
		if(str==null){
			return "0";
		}else{
			if(str.equals("")){
				return "0";
			}else{
				return str;
			}
		}
	}

	private String GetB(String str){
		if(str==null){
			return "";
		}else{
			return str;
		}
	}

	private double SUM(double accVal, double tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(double accVal, long tmpVal){
		return(accVal+(double)tmpVal);
	}

	private long SUM(long accVal, long tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(long accVal, double tmpVal){
		return((double)accVal+tmpVal);
	}

	private long COUNT(long accuCNT){
		return ++accuCNT;
	}

	private long MIN(long maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(long maxV, double maxTempV){
		if((double)maxV<=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, double maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}
	private long MAX(long maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(long maxV, double maxTempV){
		if((double)maxV>=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, double maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}

	private double AVG(double sumVal, long cntVal){
		return(sumVal/cntVal);
	}

	private double AVG(long sumVal, long cntVal){
		return((double)sumVal/(double)cntVal);
	}

	private String aiReplace(String strAll, String strSrc, String strDest) {
		while(strAll.indexOf(strSrc) != -1) {
			strAll = strAll.substring(0, strAll.indexOf(strSrc)) + strDest + strAll.substring(strAll.indexOf(strSrc) + strSrc.length(), strAll.length());
		}
		return strAll;
	}

	private String toDate() {
		SimpleDateFormat dateFormat=new SimpleDateFormat("'#SERVERDATE#'yyyy/MM/dd/HH/mm/ss");
		java.util.Date currentDate = new java.util.Date();
		return dateFormat.format(currentDate);
	}

	final String toKor (String en){
		if(en==null){
			return "";
		}
		try{
			return new String(en.getBytes("8859_1"), "KSC5601");
		}catch(Exception e){return en;}
	}
}
%>
