<%
/* ### Generated by AIDesigner 3.7.1.23 ### */
%>

<%@ page language="java" import="java.sql.*,java.io.*,java.text.*" %>
<%@ page contentType="text/plain; charset=euc-kr" %>

<%
Object[] userObj = null;
ReportHandler handler = new ReportHandler(request,response,userObj);
handler.service(out);
%>

<%!
class ReportHandler{
	//공통 변수 선언
	private Object[] userObj = null;
	private int nStartPage;		//각 쉬트별 시작 페이지 저장
	private int nMaxPage;		//한 쉬트가 실행된 후 생성된 최대 페이지 번호 저장
	private int nPageNum;		//현재 페이지 번호
	private int nYStartPos;		//쉬트에서 Y 시작 좌표
	private int nYEndPos;		//쉬트에서 Y 끝 좌표
	private int nYCurPos;		//현재 Y 좌표
	private int nYSavePos;		//연결된 멀티 프레임 쉬트에서 시작 Y 좌표 저장
	private int nYLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 Y 좌표 저장
	private int nXStartPos;		//쉬트에서 X 시작 좌표
	private int nXEndPos;		//쉬트에서 X 끝 좌표
	private int nXCurPos;		//현재 X 좌표
	private int nXSavePos;		//연결된 멀티 프레임 쉬트에서 시작 X 좌표 저장
	private int  nXLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 X 좌표 저장
	private boolean bIsBeforePageSkip;		//조건 밴드에서 페이지 넘기기 여부 판단
	private int nLoopRef;		//절대 양식에서 루프 참조 변수
	private String isEmpty="";		//빈 문자열 비교에 사용

	private HttpServletRequest request;
	private HttpServletResponse response;
	private JspWriter out;

	//-----데이터 변수 선언-----
	String sheet10_A1;
	String sheet10_A2;
	String sheet10_A3;
	String sheet10_A4;
	String sheet10_C4;
	String sheet10_D4;
	String sheet10_E4;
	String sheet10_F4;
	String sheet10_G4;
	String sheet10_H4;
	String sheet10_I4;
	String sheet10_J4;
	String sheet10_A5;
	double sheet10_C5;
	double sheet10_D5;
	double sheet10_E5;
	double sheet10_F5;
	double sheet10_G5;
	double sheet10_H5;
	double sheet10_I5;
	int[] nAutoHeight_L1=new int[1];
	String sheet10_A6;
	String sheet10_B7;
	double sheet10_C7;
	double sheet10_D7;
	double sheet10_E7;
	double sheet10_F7;
	double sheet10_G7;
	double sheet10_H7;
	double sheet10_I7;
	int[] nAutoHeight_L2=new int[1];
	String sheet10_A8;
	String sheet10_B9;
	double sheet10_C9;
	double sheet10_D9;
	double sheet10_E9;
	double sheet10_F9;
	double sheet10_G9;
	double sheet10_H9;
	double sheet10_I9;
	int[] nAutoHeight_L3=new int[1];
	String sheet10_A10;
	String sheet10_B11;
	double sheet10_C11;
	double sheet10_D11;
	double sheet10_E11;
	double sheet10_F11;
	double sheet10_G11;
	double sheet10_H11;
	double sheet10_I11;
	int[] nAutoHeight_L4=new int[1];
	String sheet10_A12;
	String sheet10_B13;
	double sheet10_C13;
	double sheet10_D13;
	double sheet10_E13;
	double sheet10_F13;
	double sheet10_G13;
	double sheet10_H13;
	double sheet10_I13;

	//-----Connection, Statement, ResultSet 객체 선언-----
	private Connection conn_DUNET;		//DSN DUNET Connection 객체
	private java.sql.Statement stat_T;		//ResultSet T 객체를 생성하기 위한 Statement 객체
	private ResultSet T;		//ResultSet T 객체
	private java.sql.Statement stat_L1;		//ResultSet L1 객체를 생성하기 위한 Statement 객체
	private ResultSet L1;		//ResultSet L1 객체
	private java.sql.Statement stat_L2;		//ResultSet L2 객체를 생성하기 위한 Statement 객체
	private ResultSet L2;		//ResultSet L2 객체
	private java.sql.Statement stat_L3;		//ResultSet L3 객체를 생성하기 위한 Statement 객체
	private ResultSet L3;		//ResultSet L3 객체
	private java.sql.Statement stat_L4;		//ResultSet L4 객체를 생성하기 위한 Statement 객체
	private ResultSet L4;		//ResultSet L4 객체

	//-----SQL 변수 선언-----
	private String sql_T;		//ResultSet T 객체를 생성하기 위한 쿼리문 저장
	private String sql_L1;		//ResultSet L1 객체를 생성하기 위한 쿼리문 저장
	private String sql_L2;		//ResultSet L2 객체를 생성하기 위한 쿼리문 저장
	private String sql_L3;		//ResultSet L3 객체를 생성하기 위한 쿼리문 저장
	private String sql_L4;		//ResultSet L4 객체를 생성하기 위한 쿼리문 저장

	//-----쿼리 필드 변수 선언-----
	//ResultSet T 객체에서 필드 값을 받는 쿼리 필드 변수
	private String T_GRCODE;
	private String T_GRSEQ;
	private double T_TOT_60LOW;
	private double T_TOT_70LOW;
	private double T_TOT_80LOW;
	private double T_TOT_90LOW;
	private double T_TOT_90HIGH;
	private double T_TOT_AVG;
	private double T_TOT_STUCNT;

	//ResultSet L1 객체에서 필드 값을 받는 쿼리 필드 변수
	private String L1_GRCODE;
	private String L1_GRSEQ;
	private String L1_DOGNM;
	private double L1_LOW60CNT;
	private double L1_LOW70CNT;
	private double L1_LOW80CNT;
	private double L1_LOW90CNT;
	private double L1_HIGH90CNT;
	private double L1_TOT_AVG;
	private double L1_SUMCNT;

	//ResultSet L2 객체에서 필드 값을 받는 쿼리 필드 변수
	private String L2_GRCODE;
	private String L2_GRSEQ;
	private String L2_DEPTNM;
	private double L2_LOW60CNT;
	private double L2_LOW70CNT;
	private double L2_LOW80CNT;
	private double L2_LOW90CNT;
	private double L2_HIGH90CNT;
	private double L2_TOT_AVG;
	private double L2_SUMCNT;

	//ResultSet L3 객체에서 필드 값을 받는 쿼리 필드 변수
	private String L3_AGE;
	private double L3_LOW60CNT;
	private double L3_LOW70CNT;
	private double L3_LOW80CNT;
	private double L3_LOW90CNT;
	private double L3_HIGH90CNT;
	private double L3_TOT_AVG;
	private double L3_SUMCNT;

	//ResultSet L4 객체에서 필드 값을 받는 쿼리 필드 변수
	private String L4_GRCODE;
	private String L4_GRSEQ;
	private String L4_SEXNM;
	private double L4_LOW60CNT;
	private double L4_LOW70CNT;
	private double L4_LOW80CNT;
	private double L4_LOW90CNT;
	private double L4_HIGH90CNT;
	private double L4_TOT_AVG;
	private double L4_SUMCNT;

	//파라미터 변수 선언
	String p_grcode_Param;
	String p_grseq_Param;
	String p_selsubj_Param;
	String p_selsubj_cnt_Param;
	String p_title_Param;

	//ReportHandler 생성자 함수
	ReportHandler(HttpServletRequest request,HttpServletResponse response,Object[] userObj){
		this.request=request;
		this.response=response;
		this.userObj=userObj;
	}

	//ReportHandler 서비스 함수
	void service(JspWriter out) throws Exception{
		try{    //try 구문
			this.out=out;
			nMaxPage=0;    //nMaxPage 초기화

			//스크립트 헤더 함수 호출
			getScriptHeader("A4", "2100x2970", "9", "VERTICAL");

			//파라미터 설정 함수 호출
			setParam();

			//고정 데이터 초기화 함수 호출
			initConstVarient();

			//Connection 및 Statement 객체 생성 함수 호출
			createConnAndStateObject();

			//쿼리문 초기화 함수 호출
			initSQLConst();

			//쉬트 함수 호출
			//SHEET=Sheet1   FRAME=0 함수 호출
			executeSheet10();

			//---------------스크립트 종료---------------
			out.print("--SCRIPT_END--\r");
		}catch(Exception e){    //catch 구문
			out.print(e);
			out.print("AI!REPORT JSP ERROR!!!!\r");
		}finally{    //finally 구문
			try{    //finally try 구문
				//DataSet Close
				if(L4!=null) L4.close();
				if(stat_L4!=null) stat_L4.close();
				if(L3!=null) L3.close();
				if(stat_L3!=null) stat_L3.close();
				if(L2!=null) L2.close();
				if(stat_L2!=null) stat_L2.close();
				if(L1!=null) L1.close();
				if(stat_L1!=null) stat_L1.close();
				if(T!=null) T.close();
				if(stat_T!=null) stat_T.close();
				if(conn_DUNET!=null) conn_DUNET.close();
			}catch(Exception e){    //finally catch 구문
			}    //end finally try
		}    //end try
	}

	//-----쉬트 함수-----
	//-----SHEET=Sheet1   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet10( ) throws Exception{
		//쉬트 초기화 함수 호출
		initSheetVariant(41, 99, 546, 781, true);

		//시작 페이지 번호 출력
		out.print("-- " + nPageNum + " PAGE --\r");

		//밴드 함수 호출
		getScriptFromtitle(true, true);    //머리글 밴드 호출
		getScriptFromfoot(true, true);    //바닥글 밴드 호출
		getScriptFromT(true);    //반복 밴드 호출
		getScriptFromL1(true);    //반복 밴드 호출
		getScriptFromL2(true);    //반복 밴드 호출
		getScriptFromL3(true);    //반복 밴드 호출
		getScriptFromL4(true);    //반복 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기
	}

	//-----밴드 함수-----
	//----title HeaderBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : title
	//----밴드 종류 : 머리글 밴드
	//----bIsFrist : 쉬트 함수에서 최초로 호출될 때 true, 페이지 스킵 함수에서 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromtitle(boolean bIsFirst, boolean bIsPrint) throws Exception{
		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 함수 호출
			writeScripttitle();
		}   //end if(bIsPrint)
	}

	//----foot FooterBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : foot
	//----밴드 종류 : 바닥글 밴드
	//----bIsFrist : 쉬트 함수에서 최초로 호출될 때 true, 페이지 스킵 함수에서 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromfoot(boolean bIsFirst, boolean bIsPrint) throws Exception{
		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 함수 호출
			writeScriptfoot();
		}   //end if(bIsPrint)
	}

	//----header RepeatHeader Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : header
	//----밴드 종류 : 반복 헤더
	//----bIsFrist : 반복 밴드 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromheader(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;	//밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptheader();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----T RepeatBand Start-----
	//-----소속 쉬트 : SHEET=Sheet1   FRAME=Frame0
	//-----밴드 이름 : T
	//-----밴드 종류 : 반복 밴드
	//-----bIsPrint : 감추기 속성 설정 여부 true면 출력, false면 스크립트를 생성하지 않음
	private void getScriptFromT(boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;    //밴드 출력 높이
		boolean bIsFirst=true;

		//데이터 변수 초기화
		sheet10_C5=0;
		sheet10_D5=0;
		sheet10_E5=0;
		sheet10_F5=0;
		sheet10_G5=0;
		sheet10_H5=0;
		sheet10_I5=0;

		//DataSet 객체 생성
		//ResultSet T 객체의 생성
		if(T==null){
			T = stat_T.executeQuery(sql_T);
		}else{
			T.beforeFirst();
		}

		while(T.next()){   //자동으로 생성되는 반복 밴드의 루프문
			//데이터 fetch
			setFieldVariableFromT();	//RecordSet T에서 필드 값 설정

			if(bIsFirst){   //밴드 호출 후 루프 내에서 한번 만 실행되는 코드
				//반복 헤더 호출 및 조건 플래그 초기화
				getScriptFromheader(bIsFirst, true);	//반복 헤더 호출
			}   //end if(bIsFirst)

			//데이터 변수 할당
			sheet10_C5=T_TOT_STUCNT;
			sheet10_D5=T_TOT_60LOW;
			sheet10_E5=T_TOT_70LOW;
			sheet10_F5=T_TOT_80LOW;
			sheet10_G5=T_TOT_90LOW;
			sheet10_H5=T_TOT_90HIGH;
			sheet10_I5=T_TOT_AVG;

			//AI 스크립트 출력
			if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
				if(isPageSkip(nYCurPos+nBandHeight)){   //스크립트 출력 영역 검사
					//페이지 스킵 함수 호출
					pageSkip(10);

					//반복 헤더 및 부모 반복단위 호출
					getScriptFromheader(false, true);	//반복 헤더 호출
				}   //end if(page skip test)

				//스크립트 출력 함수 호출
				writeScriptT();

				//다음 출력 좌표 설정
				nYCurPos=nYCurPos+nBandHeight;
			}   //end if(bIsPrint)

			//bIsFirst 및 출력 라인 설정
			bIsFirst=false;
		}   //while end
	}

	//----L1_header RepeatHeader Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : L1_header
	//----밴드 종류 : 반복 헤더
	//----bIsFrist : 반복 밴드 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromL1_header(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;	//밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptL1_header();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----L1 RepeatBand Start-----
	//-----소속 쉬트 : SHEET=Sheet1   FRAME=Frame0
	//-----밴드 이름 : L1
	//-----밴드 종류 : 반복 밴드
	//-----bIsPrint : 감추기 속성 설정 여부 true면 출력, false면 스크립트를 생성하지 않음
	private void getScriptFromL1(boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;    //밴드 출력 높이
		boolean bIsFirst=true;
		//폰트명 : 돋움체
		//폰트 사이즈 : 10
		//각 문자별 폭을 할당할 배열 선언
		int[] charWidth = {5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,10};

		//데이터 변수 초기화
		sheet10_B7="";
		sheet10_C7=0;
		sheet10_D7=0;
		sheet10_E7=0;
		sheet10_F7=0;
		sheet10_G7=0;
		sheet10_H7=0;
		sheet10_I7=0;

		//DataSet 객체 생성
		//ResultSet L1 객체의 생성
		if(L1==null){
			L1 = stat_L1.executeQuery(sql_L1);
		}else{
			L1.beforeFirst();
		}

		while(L1.next()){   //자동으로 생성되는 반복 밴드의 루프문
			//데이터 fetch
			setFieldVariableFromL1();	//RecordSet L1에서 필드 값 설정

			if(bIsFirst){   //밴드 호출 후 루프 내에서 한번 만 실행되는 코드
				//반복 헤더 호출 및 조건 플래그 초기화
				getScriptFromL1_header(bIsFirst, true);	//반복 헤더 호출
			}   //end if(bIsFirst)

			//데이터 변수 할당
			sheet10_B7=L1_DOGNM;
			sheet10_C7=L1_SUMCNT;
			sheet10_D7=L1_LOW60CNT;
			sheet10_E7=L1_LOW70CNT;
			sheet10_F7=L1_LOW80CNT;
			sheet10_G7=L1_LOW90CNT;
			sheet10_H7=L1_HIGH90CNT;
			sheet10_I7=L1_TOT_AVG;

			//Auto Size Code
			nAutoHeight_L1[0]=0;
			nAutoHeight_L1[0]=getPrintHeight(sheet10_B7, charWidth, 10, 104, 20, nAutoHeight_L1[0]);
			nAutoHeight_L1[0]=nAutoHeight_L1[0]+20;
			nBandHeight=nAutoHeight_L1[0];   //밴드 출력 높이 설정

			//AI 스크립트 출력
			if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
				if(isPageSkip(nYCurPos+nBandHeight)){   //스크립트 출력 영역 검사
					//페이지 스킵 함수 호출
					pageSkip(10);

					//반복 헤더 및 부모 반복단위 호출
					getScriptFromL1_header(false, true);	//반복 헤더 호출
				}   //end if(page skip test)

				//스크립트 출력 함수 호출
				writeScriptL1();

				//다음 출력 좌표 설정
				nYCurPos=nYCurPos+nBandHeight;
			}   //end if(bIsPrint)

			//bIsFirst 및 출력 라인 설정
			bIsFirst=false;
		}   //while end
	}

	//----L2_header RepeatHeader Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : L2_header
	//----밴드 종류 : 반복 헤더
	//----bIsFrist : 반복 밴드 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromL2_header(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;	//밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptL2_header();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----L2 RepeatBand Start-----
	//-----소속 쉬트 : SHEET=Sheet1   FRAME=Frame0
	//-----밴드 이름 : L2
	//-----밴드 종류 : 반복 밴드
	//-----bIsPrint : 감추기 속성 설정 여부 true면 출력, false면 스크립트를 생성하지 않음
	private void getScriptFromL2(boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;    //밴드 출력 높이
		boolean bIsFirst=true;
		//폰트명 : 돋움체
		//폰트 사이즈 : 10
		//각 문자별 폭을 할당할 배열 선언
		int[] charWidth = {5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,10};

		//데이터 변수 초기화
		sheet10_B9="";
		sheet10_C9=0;
		sheet10_D9=0;
		sheet10_E9=0;
		sheet10_F9=0;
		sheet10_G9=0;
		sheet10_H9=0;
		sheet10_I9=0;

		//DataSet 객체 생성
		//ResultSet L2 객체의 생성
		if(L2==null){
			L2 = stat_L2.executeQuery(sql_L2);
		}else{
			L2.beforeFirst();
		}

		while(L2.next()){   //자동으로 생성되는 반복 밴드의 루프문
			//데이터 fetch
			setFieldVariableFromL2();	//RecordSet L2에서 필드 값 설정

			if(bIsFirst){   //밴드 호출 후 루프 내에서 한번 만 실행되는 코드
				//반복 헤더 호출 및 조건 플래그 초기화
				getScriptFromL2_header(bIsFirst, true);	//반복 헤더 호출
			}   //end if(bIsFirst)

			//데이터 변수 할당
			sheet10_B9=L2_DEPTNM;
			sheet10_C9=L2_SUMCNT;
			sheet10_D9=L2_LOW60CNT;
			sheet10_E9=L2_LOW70CNT;
			sheet10_F9=L2_LOW80CNT;
			sheet10_G9=L2_LOW90CNT;
			sheet10_H9=L2_HIGH90CNT;
			sheet10_I9=L2_TOT_AVG;

			//Auto Size Code
			nAutoHeight_L2[0]=0;
			nAutoHeight_L2[0]=getPrintHeight(sheet10_B9, charWidth, 10, 104, 20, nAutoHeight_L2[0]);
			nAutoHeight_L2[0]=nAutoHeight_L2[0]+20;
			nBandHeight=nAutoHeight_L2[0];   //밴드 출력 높이 설정

			//AI 스크립트 출력
			if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
				if(isPageSkip(nYCurPos+nBandHeight)){   //스크립트 출력 영역 검사
					//페이지 스킵 함수 호출
					pageSkip(10);

					//반복 헤더 및 부모 반복단위 호출
					getScriptFromL2_header(false, true);	//반복 헤더 호출
				}   //end if(page skip test)

				//스크립트 출력 함수 호출
				writeScriptL2();

				//다음 출력 좌표 설정
				nYCurPos=nYCurPos+nBandHeight;
			}   //end if(bIsPrint)

			//bIsFirst 및 출력 라인 설정
			bIsFirst=false;
		}   //while end
	}

	//----L3_header RepeatHeader Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : L3_header
	//----밴드 종류 : 반복 헤더
	//----bIsFrist : 반복 밴드 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromL3_header(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;	//밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptL3_header();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----L3 RepeatBand Start-----
	//-----소속 쉬트 : SHEET=Sheet1   FRAME=Frame0
	//-----밴드 이름 : L3
	//-----밴드 종류 : 반복 밴드
	//-----bIsPrint : 감추기 속성 설정 여부 true면 출력, false면 스크립트를 생성하지 않음
	private void getScriptFromL3(boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;    //밴드 출력 높이
		boolean bIsFirst=true;
		//폰트명 : 돋움체
		//폰트 사이즈 : 10
		//각 문자별 폭을 할당할 배열 선언
		int[] charWidth = {5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,10};

		//데이터 변수 초기화
		sheet10_B11="";
		sheet10_C11=0;
		sheet10_D11=0;
		sheet10_E11=0;
		sheet10_F11=0;
		sheet10_G11=0;
		sheet10_H11=0;
		sheet10_I11=0;

		//DataSet 객체 생성
		//ResultSet L3 객체의 생성
		if(L3==null){
			L3 = stat_L3.executeQuery(sql_L3);
		}else{
			L3.beforeFirst();
		}

		while(L3.next()){   //자동으로 생성되는 반복 밴드의 루프문
			//데이터 fetch
			setFieldVariableFromL3();	//RecordSet L3에서 필드 값 설정

			if(bIsFirst){   //밴드 호출 후 루프 내에서 한번 만 실행되는 코드
				//반복 헤더 호출 및 조건 플래그 초기화
				getScriptFromL3_header(bIsFirst, true);	//반복 헤더 호출
			}   //end if(bIsFirst)

			//데이터 변수 할당
			sheet10_B11=L3_AGE;
			sheet10_C11=L3_SUMCNT;
			sheet10_D11=L3_LOW60CNT;
			sheet10_E11=L3_LOW70CNT;
			sheet10_F11=L3_LOW80CNT;
			sheet10_G11=L3_LOW90CNT;
			sheet10_H11=L3_HIGH90CNT;
			sheet10_I11=L3_TOT_AVG;

			//Auto Size Code
			nAutoHeight_L3[0]=0;
			nAutoHeight_L3[0]=getPrintHeight(sheet10_B11, charWidth, 10, 104, 20, nAutoHeight_L3[0]);
			nAutoHeight_L3[0]=nAutoHeight_L3[0]+20;
			nBandHeight=nAutoHeight_L3[0];   //밴드 출력 높이 설정

			//AI 스크립트 출력
			if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
				if(isPageSkip(nYCurPos+nBandHeight)){   //스크립트 출력 영역 검사
					//페이지 스킵 함수 호출
					pageSkip(10);

					//반복 헤더 및 부모 반복단위 호출
					getScriptFromL3_header(false, true);	//반복 헤더 호출
				}   //end if(page skip test)

				//스크립트 출력 함수 호출
				writeScriptL3();

				//다음 출력 좌표 설정
				nYCurPos=nYCurPos+nBandHeight;
			}   //end if(bIsPrint)

			//bIsFirst 및 출력 라인 설정
			bIsFirst=false;
		}   //while end
	}

	//----L4_header RepeatHeader Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : L4_header
	//----밴드 종류 : 반복 헤더
	//----bIsFrist : 반복 밴드 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromL4_header(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;	//밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptL4_header();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----L4 RepeatBand Start-----
	//-----소속 쉬트 : SHEET=Sheet1   FRAME=Frame0
	//-----밴드 이름 : L4
	//-----밴드 종류 : 반복 밴드
	//-----bIsPrint : 감추기 속성 설정 여부 true면 출력, false면 스크립트를 생성하지 않음
	private void getScriptFromL4(boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;    //밴드 출력 높이
		boolean bIsFirst=true;
		//폰트명 : 돋움체
		//폰트 사이즈 : 10
		//각 문자별 폭을 할당할 배열 선언
		int[] charWidth = {5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,10};

		//데이터 변수 초기화
		sheet10_B13="";
		sheet10_C13=0;
		sheet10_D13=0;
		sheet10_E13=0;
		sheet10_F13=0;
		sheet10_G13=0;
		sheet10_H13=0;
		sheet10_I13=0;

		//DataSet 객체 생성
		//ResultSet L4 객체의 생성
		if(L4==null){
			L4 = stat_L4.executeQuery(sql_L4);
		}else{
			L4.beforeFirst();
		}

		while(L4.next()){   //자동으로 생성되는 반복 밴드의 루프문
			//데이터 fetch
			setFieldVariableFromL4();	//RecordSet L4에서 필드 값 설정

			if(bIsFirst){   //밴드 호출 후 루프 내에서 한번 만 실행되는 코드
				//반복 헤더 호출 및 조건 플래그 초기화
				getScriptFromL4_header(bIsFirst, true);	//반복 헤더 호출
			}   //end if(bIsFirst)

			//데이터 변수 할당
			sheet10_B13=L4_SEXNM;
			sheet10_C13=L4_SUMCNT;
			sheet10_D13=L4_LOW60CNT;
			sheet10_E13=L4_LOW70CNT;
			sheet10_F13=L4_LOW80CNT;
			sheet10_G13=L4_LOW90CNT;
			sheet10_H13=L4_HIGH90CNT;
			sheet10_I13=L4_TOT_AVG;

			//Auto Size Code
			nAutoHeight_L4[0]=0;
			nAutoHeight_L4[0]=getPrintHeight(sheet10_B13, charWidth, 10, 104, 20, nAutoHeight_L4[0]);
			nAutoHeight_L4[0]=nAutoHeight_L4[0]+20;
			nBandHeight=nAutoHeight_L4[0];   //밴드 출력 높이 설정

			//AI 스크립트 출력
			if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
				if(isPageSkip(nYCurPos+nBandHeight)){   //스크립트 출력 영역 검사
					//페이지 스킵 함수 호출
					pageSkip(10);

					//반복 헤더 및 부모 반복단위 호출
					getScriptFromL4_header(false, true);	//반복 헤더 호출
				}   //end if(page skip test)

				//스크립트 출력 함수 호출
				writeScriptL4();

				//다음 출력 좌표 설정
				nYCurPos=nYCurPos+nBandHeight;
			}   //end if(bIsPrint)

			//bIsFirst 및 출력 라인 설정
			bIsFirst=false;
		}   //while end
	}

	//-----스크립트 출력 함수-----
	//----title 스크립트 문 출력 함수----
	private void writeScripttitle( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT(41,41,504,1,16,0/,돋움체,RGB[0,0,0],BOLD, , ,NONE,38,1)");
		out.println(sheet10_A1+"\r");
		out.print("^PRINT(41,79,504,0,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A2+"\r");
	}

	//----foot 스크립트 문 출력 함수----
	private void writeScriptfoot( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT(41,781,504,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A3+"\r");
	}

	//----header 스크립트 문 출력 함수----
	private void writeScriptheader( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos)+",118,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",118,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",118,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",118,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",118,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",118,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A4+"\r");
		out.println("^CELLBG("+(nXCurPos+118)+","+(nYCurPos)+",50,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+118)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+118)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+118)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+118)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+118)+","+(nYCurPos)+",50,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_C4+"\r");
		out.println("^CELLBG("+(nXCurPos+168)+","+(nYCurPos)+",50,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+168)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+168)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+168)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+168)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+168)+","+(nYCurPos)+",50,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_D4+"\r");
		out.println("^CELLBG("+(nXCurPos+218)+","+(nYCurPos)+",50,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+218)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+218)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+218)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+218)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+218)+","+(nYCurPos)+",50,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E4+"\r");
		out.println("^CELLBG("+(nXCurPos+268)+","+(nYCurPos)+",50,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+268)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+268)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+268)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+268)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+268)+","+(nYCurPos)+",50,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F4+"\r");
		out.println("^CELLBG("+(nXCurPos+318)+","+(nYCurPos)+",50,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+318)+","+(nYCurPos)+",50,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_G4+"\r");
		out.println("^CELLBG("+(nXCurPos+368)+","+(nYCurPos)+",50,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+368)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+368)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+368)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+368)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+368)+","+(nYCurPos)+",50,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_H4+"\r");
		out.println("^CELLBG("+(nXCurPos+418)+","+(nYCurPos)+",50,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+418)+","+(nYCurPos)+",50,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_I4+"\r");
		out.println("^CELLBG("+(nXCurPos+468)+","+(nYCurPos)+",36,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+468)+","+(nYCurPos)+",36,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+468)+","+(nYCurPos)+",36,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+468)+","+(nYCurPos)+",36,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+468)+","+(nYCurPos)+",36,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+468)+","+(nYCurPos)+",36,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_J4+"\r");
	}

	//----T 스크립트 문 출력 함수----
	private void writeScriptT( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",118,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",118,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",118,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",118,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",118,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A5+"\r");
		out.println("^CELLLINE("+(nXCurPos+118)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+118)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+118)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+118)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+118)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_C5+"\r");
		out.println("^CELLLINE("+(nXCurPos+168)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+168)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+168)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+168)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+168)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_D5+"\r");
		out.println("^CELLLINE("+(nXCurPos+218)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+218)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+218)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+218)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+218)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E5+"\r");
		out.println("^CELLLINE("+(nXCurPos+268)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+268)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+268)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+268)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+268)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F5+"\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+318)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,XL,20,1)");
		out.println(sheet10_G5+"\r");
		out.println("^CELLLINE("+(nXCurPos+368)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+368)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+368)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+368)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+368)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,XL,20,1)");
		out.println(sheet10_H5+"\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",50,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+418)+","+(nYCurPos)+",50,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_I5+"\r");
		out.println("^CELLLINE("+(nXCurPos+468)+","+(nYCurPos)+",36,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+468)+","+(nYCurPos)+",36,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+468)+","+(nYCurPos)+",36,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+468)+","+(nYCurPos)+",36,20,0,RGB[0,0,0],3)\r");
	}

	//----L1_header 스크립트 문 출력 함수----
	private void writeScriptL1_header( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos)+",504,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",504,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",504,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",504,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",504,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",504,0,11,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A6+"\r");
	}

	//----L1 스크립트 문 출력 함수----
	private void writeScriptL1( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",14,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",14,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",14,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+14)+","+(nYCurPos)+",104,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+14)+","+(nYCurPos)+",104,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+14)+","+(nYCurPos)+",104,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+14)+","+(nYCurPos)+",104,0,10,0/,돋움체,RGB[0,0,0], , , ,XL,"+(nAutoHeight_L1[0])+",1)");
		out.println(sheet10_B7+"\r");
		out.println("^CELLLINE("+(nXCurPos+118)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+118)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+118)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+118)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+118)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L1[0])+",1)");
		out.println(sheet10_C7+"\r");
		out.println("^CELLLINE("+(nXCurPos+168)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+168)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+168)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+168)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+168)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L1[0])+",1)");
		out.println(sheet10_D7+"\r");
		out.println("^CELLLINE("+(nXCurPos+218)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+218)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+218)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+218)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+218)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L1[0])+",1)");
		out.println(sheet10_E7+"\r");
		out.println("^CELLLINE("+(nXCurPos+268)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+268)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+268)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+268)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+268)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L1[0])+",1)");
		out.println(sheet10_F7+"\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+318)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L1[0])+",1)");
		out.println(sheet10_G7+"\r");
		out.println("^CELLLINE("+(nXCurPos+368)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+368)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+368)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+368)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+368)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L1[0])+",1)");
		out.println(sheet10_H7+"\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",50,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+418)+","+(nYCurPos)+",50,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L1[0])+",1)");
		out.println(sheet10_I7+"\r");
		out.println("^CELLLINE("+(nXCurPos+468)+","+(nYCurPos)+",36,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+468)+","+(nYCurPos)+",36,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+468)+","+(nYCurPos)+",36,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+468)+","+(nYCurPos)+",36,"+(nAutoHeight_L1[0])+",0,RGB[0,0,0],3)\r");
	}

	//----L2_header 스크립트 문 출력 함수----
	private void writeScriptL2_header( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos)+",504,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",504,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",504,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",504,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",504,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",504,0,11,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A8+"\r");
	}

	//----L2 스크립트 문 출력 함수----
	private void writeScriptL2( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",14,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",14,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",14,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+14)+","+(nYCurPos)+",104,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+14)+","+(nYCurPos)+",104,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+14)+","+(nYCurPos)+",104,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+14)+","+(nYCurPos)+",104,0,10,0/,돋움체,RGB[0,0,0], , , ,XL,"+(nAutoHeight_L2[0])+",1)");
		out.println(sheet10_B9+"\r");
		out.println("^CELLLINE("+(nXCurPos+118)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+118)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+118)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+118)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+118)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L2[0])+",1)");
		out.println(sheet10_C9+"\r");
		out.println("^CELLLINE("+(nXCurPos+168)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+168)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+168)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+168)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+168)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L2[0])+",1)");
		out.println(sheet10_D9+"\r");
		out.println("^CELLLINE("+(nXCurPos+218)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+218)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+218)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+218)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+218)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L2[0])+",1)");
		out.println(sheet10_E9+"\r");
		out.println("^CELLLINE("+(nXCurPos+268)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+268)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+268)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+268)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+268)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L2[0])+",1)");
		out.println(sheet10_F9+"\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+318)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L2[0])+",1)");
		out.println(sheet10_G9+"\r");
		out.println("^CELLLINE("+(nXCurPos+368)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+368)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+368)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+368)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+368)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L2[0])+",1)");
		out.println(sheet10_H9+"\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",50,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+418)+","+(nYCurPos)+",50,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L2[0])+",1)");
		out.println(sheet10_I9+"\r");
		out.println("^CELLLINE("+(nXCurPos+468)+","+(nYCurPos)+",36,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+468)+","+(nYCurPos)+",36,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+468)+","+(nYCurPos)+",36,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+468)+","+(nYCurPos)+",36,"+(nAutoHeight_L2[0])+",0,RGB[0,0,0],3)\r");
	}

	//----L3_header 스크립트 문 출력 함수----
	private void writeScriptL3_header( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos)+",504,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",504,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",504,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",504,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",504,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",504,0,11,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A10+"\r");
	}

	//----L3 스크립트 문 출력 함수----
	private void writeScriptL3( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",14,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",14,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",14,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+14)+","+(nYCurPos)+",104,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+14)+","+(nYCurPos)+",104,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+14)+","+(nYCurPos)+",104,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+14)+","+(nYCurPos)+",104,0,10,0/,돋움체,RGB[0,0,0], , , ,XL,"+(nAutoHeight_L3[0])+",1)");
		out.println(sheet10_B11+"\r");
		out.println("^CELLLINE("+(nXCurPos+118)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+118)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+118)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+118)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+118)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L3[0])+",1)");
		out.println(sheet10_C11+"\r");
		out.println("^CELLLINE("+(nXCurPos+168)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+168)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+168)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+168)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+168)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L3[0])+",1)");
		out.println(sheet10_D11+"\r");
		out.println("^CELLLINE("+(nXCurPos+218)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+218)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+218)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+218)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+218)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L3[0])+",1)");
		out.println(sheet10_E11+"\r");
		out.println("^CELLLINE("+(nXCurPos+268)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+268)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+268)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+268)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+268)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L3[0])+",1)");
		out.println(sheet10_F11+"\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+318)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L3[0])+",1)");
		out.println(sheet10_G11+"\r");
		out.println("^CELLLINE("+(nXCurPos+368)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+368)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+368)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+368)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+368)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L3[0])+",1)");
		out.println(sheet10_H11+"\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",50,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+418)+","+(nYCurPos)+",50,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L3[0])+",1)");
		out.println(sheet10_I11+"\r");
		out.println("^CELLLINE("+(nXCurPos+468)+","+(nYCurPos)+",36,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+468)+","+(nYCurPos)+",36,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+468)+","+(nYCurPos)+",36,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+468)+","+(nYCurPos)+",36,"+(nAutoHeight_L3[0])+",0,RGB[0,0,0],3)\r");
	}

	//----L4_header 스크립트 문 출력 함수----
	private void writeScriptL4_header( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos)+",504,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",504,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",504,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",504,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",504,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",504,0,11,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A12+"\r");
	}

	//----L4 스크립트 문 출력 함수----
	private void writeScriptL4( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",14,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",14,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",14,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+14)+","+(nYCurPos)+",104,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+14)+","+(nYCurPos)+",104,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+14)+","+(nYCurPos)+",104,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+14)+","+(nYCurPos)+",104,0,10,0/,돋움체,RGB[0,0,0], , , ,XL,"+(nAutoHeight_L4[0])+",1)");
		out.println(sheet10_B13+"\r");
		out.println("^CELLLINE("+(nXCurPos+118)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+118)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+118)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+118)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+118)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L4[0])+",1)");
		out.println(sheet10_C13+"\r");
		out.println("^CELLLINE("+(nXCurPos+168)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+168)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+168)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+168)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+168)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L4[0])+",1)");
		out.println(sheet10_D13+"\r");
		out.println("^CELLLINE("+(nXCurPos+218)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+218)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+218)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+218)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+218)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L4[0])+",1)");
		out.println(sheet10_E13+"\r");
		out.println("^CELLLINE("+(nXCurPos+268)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+268)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+268)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+268)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+268)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L4[0])+",1)");
		out.println(sheet10_F13+"\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+318)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L4[0])+",1)");
		out.println(sheet10_G13+"\r");
		out.println("^CELLLINE("+(nXCurPos+368)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+368)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+368)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+368)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+368)+","+(nYCurPos)+",50,1,10,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L4[0])+",1)");
		out.println(sheet10_H13+"\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+418)+","+(nYCurPos)+",50,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+418)+","+(nYCurPos)+",50,1,10,1/0/2,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_L4[0])+",1)");
		out.println(sheet10_I13+"\r");
		out.println("^CELLLINE("+(nXCurPos+468)+","+(nYCurPos)+",36,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+468)+","+(nYCurPos)+",36,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+468)+","+(nYCurPos)+",36,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+468)+","+(nYCurPos)+",36,"+(nAutoHeight_L4[0])+",0,RGB[0,0,0],3)\r");
	}

	//파라미터 설정 함수
	private void setParam(){
		p_grcode_Param=toKor(GetB(request.getParameter("p_grcode")));
		p_grseq_Param=toKor(GetB(request.getParameter("p_grseq")));
		p_selsubj_Param=toKor(GetB(request.getParameter("p_selsubj")));
		p_selsubj_cnt_Param=toKor(GetB(request.getParameter("p_selsubj_cnt")));
		p_title_Param=toKor(GetB(request.getParameter("p_title")));
	}

	//-----Connection 및 Statement 객체 생성 함수-----
	private void createConnAndStateObject() throws Exception{
		//DUNET Connection 객체 생성
		Class.forName("oracle.jdbc.driver.OracleDriver").newInstance();
		conn_DUNET=DriverManager.getConnection("jdbc:oracle:thin:@(DESCRIPTION=(ADDRESS_LIST=(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.12.203)(PORT=1521))(ADDRESS=(PROTOCOL=TCP)(HOST=192.168.12.204)(PORT=1521))(FAILOVER=on)(LOAD_BALANCE=off))(CONNECT_DATA=(SERVER=DEDICATED)(SERVICE_NAME=LOTI)))","inchlms","fhxl21");stat_T=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_L1=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_L2=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_L3=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_L4=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
	}

	//-----SQL문 변수 초기화 함수-----
	private void initSQLConst(){
		sql_T = "select a.grcode, a.grseq, sum(case when a.paccept < 60 then 1 else 0 end) tot_60low,  ";
		sql_T = sql_T + "sum(case when a.paccept >=60 and a.paccept < 70 then 1 else 0 end) tot_70low,  ";
		sql_T = sql_T + "sum(case when a.paccept >=70 and a.paccept < 80 then 1 else 0 end) tot_80low,  ";
		sql_T = sql_T + " sum(case when a.paccept >=80 and a.paccept < 90 then 1 else 0 end) tot_90low,  ";
		sql_T = sql_T + "sum(case when a.paccept >= 90 then 1 else 0 end) tot_90high, round(avg(a.paccept),2) tot_avg,  count(*) tot_stucnt  ";
		sql_T = sql_T + "from tb_grresult a, (select userno, grcode, grseq, count(*) selsubj_cnt from tb_stu_lec  ";
		sql_T = sql_T + "	where '" + p_selsubj_Param + "' like '%' || subj || '%' group by userno, grcode, grseq) st  ";
		sql_T = sql_T + "where a.grcode='" + p_grcode_Param + "' and a.grseq='" + p_grseq_Param + "'  ";
		sql_T = sql_T + "         and a.grcode=st.grcode(+) and a.grseq=st.grseq(+) and a.userno=st.userno(+)  ";
		sql_T = sql_T + "         and decode(" + p_selsubj_cnt_Param + ", 0, 1, st.selsubj_cnt, 1, 0)=1  ";
		sql_T = sql_T + "group by a.grcode, a.grseq";
		sql_L1 = "select a.grcode, a.grseq, is_dognm(b.code) dognm, sum(case when a.paccept < 60 then 1 else 0 end) low60cnt,  ";
		sql_L1 = sql_L1 + "	  sum(case when a.paccept >=60 and a.paccept < 70 then 1 else 0 end) low70cnt,  ";
		sql_L1 = sql_L1 + "	  sum(case when a.paccept >=70 and a.paccept < 80 then 1 else 0 end) low80cnt,  ";
		sql_L1 = sql_L1 + "	  sum(case when a.paccept >=80 and a.paccept < 90 then 1 else 0 end) low90cnt,  ";
		sql_L1 = sql_L1 + "    sum(case when a.paccept >= 90 then 1 else 0 end) high90cnt, round(avg(a.paccept),2) tot_avg,  count(*) sumcnt  ";
		sql_L1 = sql_L1 + "from tb_grresult a, (select userno, grcode, grseq, count(*) selsubj_cnt from tb_stu_lec where '" + p_selsubj_Param + "' like '%' || subj || '%'        ";
		sql_L1 = sql_L1 + "             group by userno, grcode, grseq) st , tb_jikgubun b, tb_jik c ";
		sql_L1 = sql_L1 + " where b.jikgubun='dogs' and a.rjik=c.jik and c.dogs=b.code and a.grcode='" + p_grcode_Param + "' and a.grseq='" + p_grseq_Param + "'  ";
		sql_L1 = sql_L1 + "           and a.grcode=st.grcode(+) and a.grseq=st.grseq(+) and a.userno=st.userno(+)  ";
		sql_L1 = sql_L1 + "           and decode(" + p_selsubj_cnt_Param + ", 0, 1, st.selsubj_cnt, 1, 0)=1 ";
		sql_L1 = sql_L1 + "group by a.grcode, a.grseq, is_dognm(b.code)";
		sql_L2 = "select a.grcode, a.grseq, decode(b.dept,'6280000',b.deptnm,'3490000',b.deptnm,'3500000',b.deptnm,'3510000',b.deptnm, ";
		sql_L2 = sql_L2 + "'3520000',b.deptnm,'3530000',b.deptnm,'3540000',b.deptnm,'3550000',b.deptnm,'3560000',b.deptnm,'3570000',b.deptnm,'3580000',b.deptnm,'0000000',b.deptnm,'타시도') deptnm, sum(case when a.paccept < 60 then 1 else 0 end) low60cnt,  ";
		sql_L2 = sql_L2 + "sum(case when a.paccept >=60 and a.paccept < 70 then 1 else 0 end) low70cnt, sum(case when a.paccept >=70 and a.paccept < 80 then 1 else 0 end) low80cnt, sum(case when a.paccept >=80 and a.paccept < 90 then 1 else 0 end) low90cnt,  ";
		sql_L2 = sql_L2 + "sum(case when a.paccept >= 90 then 1 else 0 end) high90cnt, round(avg(a.paccept),2) tot_avg,  count(*) sumcnt  ";
		sql_L2 = sql_L2 + "from tb_grresult a, (select userno, grcode, grseq, count(*) selsubj_cnt from tb_stu_lec where '" + p_selsubj_Param + "' like '%' || subj || '%' ";
		sql_L2 = sql_L2 + "                                    group by userno, grcode, grseq) st, tb_dept b ";
		sql_L2 = sql_L2 + "where a.rdept=b.dept and a.grcode='" + p_grcode_Param + "' and a.grseq='" + p_grseq_Param + "' and a.grcode=st.grcode(+) and a.grseq=st.grseq(+)  ";
		sql_L2 = sql_L2 + "         and a.userno=st.userno(+) and decode(" + p_selsubj_cnt_Param + ", 0, 1, st.selsubj_cnt, 1, 0)=1  ";
		sql_L2 = sql_L2 + "group by a.grcode, a.grseq, decode(b.dept,'6280000',b.deptnm,'3490000',b.deptnm,'3500000',b.deptnm,'3510000',b.deptnm, ";
		sql_L2 = sql_L2 + "'3520000',b.deptnm,'3530000',b.deptnm,'3540000',b.deptnm,'3550000',b.deptnm,'3560000',b.deptnm,'3570000',b.deptnm,'3580000',b.deptnm,'0000000',b.deptnm,'타시도')";
		sql_L3 = "select decode(sign((to_char(sysdate,'yyyy')-(decode(substr(a.rresno,7,1),'1','19','2','19','3','20','4','20')||substr(a.rresno,1,2)))-'26'),'-1','25세이하',decode((to_char(sysdate,'yyyy')-(decode(substr(a.rresno,7,1),'1','19','2','19','3','20','4','20')||substr(a.rresno,1,2))),'26','26-30세','27','26-30세','28','26-30세','29','26-30세','30','26-30세', ";
		sql_L3 = sql_L3 + "'31','31-35세','32','31-35세','33','31-35세','34','31-35세','35','31-35세','36','36-40세','37','36-40세','38','36-40세','39','36-40세','40','36-40세','41','41-45세','42','41-45세','43','41-45세','44','41-45세','45','41-45세','46','46-50세','47','46-50세','48','46-50세','49','46-50세','50','46-50세','51세이상')) age,sum(case when a.paccept < 60 then 1 else 0 end) low60cnt,  ";
		sql_L3 = sql_L3 + "sum(case when a.paccept >=60 and a.paccept < 70 then 1 else 0 end) low70cnt, sum(case when a.paccept >=70 and a.paccept < 80 then 1 else 0 end) low80cnt, sum(case when a.paccept >=80 and a.paccept < 90 then 1 else 0 end) low90cnt,  ";
		sql_L3 = sql_L3 + "sum(case when a.paccept >= 90 then 1 else 0 end) high90cnt, round(avg(a.paccept),2) tot_avg,  count(*) sumcnt  ";
		sql_L3 = sql_L3 + "from tb_grresult a, (select userno, grcode, grseq, count(*) selsubj_cnt from tb_stu_lec where '" + p_selsubj_Param + "' like '%' || subj || '%' ";
		sql_L3 = sql_L3 + "                            group by userno, grcode, grseq) st ";
		sql_L3 = sql_L3 + "where a.grcode='" + p_grcode_Param + "' and a.grseq='" + p_grseq_Param + "' and a.grcode=st.grcode(+) and a.grseq=st.grseq(+) and a.userno=st.userno(+) ";
		sql_L3 = sql_L3 + "         and decode(" + p_selsubj_cnt_Param + ", 0, 1, st.selsubj_cnt, 1, 0)=1 ";
		sql_L3 = sql_L3 + "group by  ";
		sql_L3 = sql_L3 + "decode(sign((to_char(sysdate,'yyyy')-(decode(substr(a.rresno,7,1),'1','19','2','19','3','20','4','20')||substr(a.rresno,1,2)))-'26'),'-1','25세이하',decode((to_char(sysdate,'yyyy')-(decode(substr(a.rresno,7,1),'1','19','2','19','3','20','4','20')||substr(a.rresno,1,2))),'26','26-30세','27','26-30세','28','26-30세','29','26-30세','30','26-30세', ";
		sql_L3 = sql_L3 + "'31','31-35세','32','31-35세','33','31-35세','34','31-35세','35','31-35세','36','36-40세','37','36-40세','38','36-40세','39','36-40세','40','36-40세','41','41-45세','42','41-45세','43','41-45세','44','41-45세','45','41-45세','46','46-50세','47','46-50세','48','46-50세','49','46-50세','50','46-50세','51세이상'))";
		sql_L4 = "select a.grcode, a.grseq, decode(substr(a.rresno,7,1),'1','남','2', '여','3', '남','여') sexnm, ";
		sql_L4 = sql_L4 + "        sum(case when a.paccept < 60 then 1 else 0 end) low60cnt, sum(case when a.paccept >=60 and a.paccept < 70 then 1 else 0 end) low70cnt, sum(case when a.paccept >=70 and a.paccept < 80 then 1 else 0 end) low80cnt,  ";
		sql_L4 = sql_L4 + "        sum(case when a.paccept >=80 and a.paccept < 90 then 1 else 0 end) low90cnt, sum(case when a.paccept >= 90 then 1 else 0 end) high90cnt, round(avg(a.paccept),2) tot_avg,	  count(*) sumcnt  ";
		sql_L4 = sql_L4 + "from tb_grresult a, (select userno, grcode, grseq, count(*) selsubj_cnt from tb_stu_lec where '" + p_selsubj_Param + "' like '%' || subj || '%' ";
		sql_L4 = sql_L4 + "                           group by userno, grcode, grseq) st ";
		sql_L4 = sql_L4 + "where a.grcode='" + p_grcode_Param + "' and a.grseq='" + p_grseq_Param + "' and a.grcode=st.grcode(+) and a.grseq=st.grseq(+) and a.userno=st.userno(+) ";
		sql_L4 = sql_L4 + "         and decode(" + p_selsubj_cnt_Param + ", 0, 1, st.selsubj_cnt, 1, 0)=1 ";
		sql_L4 = sql_L4 + "group by a.grcode, a.grseq, decode(substr(a.rresno,7,1),'1','남','2', '여','3', '남','여')  ";
		sql_L4 = sql_L4 + "order by decode(substr(a.rresno,7,1),'1','남','2', '여','3', '남','여')";
	}

	//-----ResultSet 객체에서 필드 값 설정 함수-----
	//ResultSet T 객체에서 필드 값 설정 함수
	private void setFieldVariableFromT() throws Exception{
		T_GRCODE=GetB(T.getString(1));
		T_GRSEQ=GetB(T.getString(2));
		T_TOT_60LOW=T.getDouble(3);
		T_TOT_70LOW=T.getDouble(4);
		T_TOT_80LOW=T.getDouble(5);
		T_TOT_90LOW=T.getDouble(6);
		T_TOT_90HIGH=T.getDouble(7);
		T_TOT_AVG=T.getDouble(8);
		T_TOT_STUCNT=T.getDouble(9);
	}

	//ResultSet T 객체의 필드 값 초기화 함수
	private void setFieldInitFromT(){
		T_GRCODE="";
		T_GRSEQ="";
		T_TOT_60LOW=0;
		T_TOT_70LOW=0;
		T_TOT_80LOW=0;
		T_TOT_90LOW=0;
		T_TOT_90HIGH=0;
		T_TOT_AVG=0;
		T_TOT_STUCNT=0;
	}

	//ResultSet L1 객체에서 필드 값 설정 함수
	private void setFieldVariableFromL1() throws Exception{
		L1_GRCODE=GetB(L1.getString(1));
		L1_GRSEQ=GetB(L1.getString(2));
		L1_DOGNM=GetB(L1.getString(3));
		L1_LOW60CNT=L1.getDouble(4);
		L1_LOW70CNT=L1.getDouble(5);
		L1_LOW80CNT=L1.getDouble(6);
		L1_LOW90CNT=L1.getDouble(7);
		L1_HIGH90CNT=L1.getDouble(8);
		L1_TOT_AVG=L1.getDouble(9);
		L1_SUMCNT=L1.getDouble(10);
	}

	//ResultSet L1 객체의 필드 값 초기화 함수
	private void setFieldInitFromL1(){
		L1_GRCODE="";
		L1_GRSEQ="";
		L1_DOGNM="";
		L1_LOW60CNT=0;
		L1_LOW70CNT=0;
		L1_LOW80CNT=0;
		L1_LOW90CNT=0;
		L1_HIGH90CNT=0;
		L1_TOT_AVG=0;
		L1_SUMCNT=0;
	}

	//ResultSet L2 객체에서 필드 값 설정 함수
	private void setFieldVariableFromL2() throws Exception{
		L2_GRCODE=GetB(L2.getString(1));
		L2_GRSEQ=GetB(L2.getString(2));
		L2_DEPTNM=GetB(L2.getString(3));
		L2_LOW60CNT=L2.getDouble(4);
		L2_LOW70CNT=L2.getDouble(5);
		L2_LOW80CNT=L2.getDouble(6);
		L2_LOW90CNT=L2.getDouble(7);
		L2_HIGH90CNT=L2.getDouble(8);
		L2_TOT_AVG=L2.getDouble(9);
		L2_SUMCNT=L2.getDouble(10);
	}

	//ResultSet L2 객체의 필드 값 초기화 함수
	private void setFieldInitFromL2(){
		L2_GRCODE="";
		L2_GRSEQ="";
		L2_DEPTNM="";
		L2_LOW60CNT=0;
		L2_LOW70CNT=0;
		L2_LOW80CNT=0;
		L2_LOW90CNT=0;
		L2_HIGH90CNT=0;
		L2_TOT_AVG=0;
		L2_SUMCNT=0;
	}

	//ResultSet L3 객체에서 필드 값 설정 함수
	private void setFieldVariableFromL3() throws Exception{
		L3_AGE=GetB(L3.getString(1));
		L3_LOW60CNT=L3.getDouble(2);
		L3_LOW70CNT=L3.getDouble(3);
		L3_LOW80CNT=L3.getDouble(4);
		L3_LOW90CNT=L3.getDouble(5);
		L3_HIGH90CNT=L3.getDouble(6);
		L3_TOT_AVG=L3.getDouble(7);
		L3_SUMCNT=L3.getDouble(8);
	}

	//ResultSet L3 객체의 필드 값 초기화 함수
	private void setFieldInitFromL3(){
		L3_AGE="";
		L3_LOW60CNT=0;
		L3_LOW70CNT=0;
		L3_LOW80CNT=0;
		L3_LOW90CNT=0;
		L3_HIGH90CNT=0;
		L3_TOT_AVG=0;
		L3_SUMCNT=0;
	}

	//ResultSet L4 객체에서 필드 값 설정 함수
	private void setFieldVariableFromL4() throws Exception{
		L4_GRCODE=GetB(L4.getString(1));
		L4_GRSEQ=GetB(L4.getString(2));
		L4_SEXNM=GetB(L4.getString(3));
		L4_LOW60CNT=L4.getDouble(4);
		L4_LOW70CNT=L4.getDouble(5);
		L4_LOW80CNT=L4.getDouble(6);
		L4_LOW90CNT=L4.getDouble(7);
		L4_HIGH90CNT=L4.getDouble(8);
		L4_TOT_AVG=L4.getDouble(9);
		L4_SUMCNT=L4.getDouble(10);
	}

	//ResultSet L4 객체의 필드 값 초기화 함수
	private void setFieldInitFromL4(){
		L4_GRCODE="";
		L4_GRSEQ="";
		L4_SEXNM="";
		L4_LOW60CNT=0;
		L4_LOW70CNT=0;
		L4_LOW80CNT=0;
		L4_LOW90CNT=0;
		L4_HIGH90CNT=0;
		L4_TOT_AVG=0;
		L4_SUMCNT=0;
	}

	//-----고정 데이터 초기화 함수-----
	private void initConstVarient(){
		sheet10_A1="직급/기관/연령별 성적분포도";
		sheet10_A2="" + p_title_Param + "";
		sheet10_A3="#PAGE / #TOTALPAGE";
		sheet10_A4="구분";
		sheet10_C4="계";
		sheet10_D4="60점미만";
		sheet10_E4="70%미만";
		sheet10_F4="80%미만";
		sheet10_G4="90%미만";
		sheet10_H4="90%이상";
		sheet10_I4="평균점수";
		sheet10_J4="비고";
		sheet10_A5="인    원";
		sheet10_A6="(직급별)";
		sheet10_A8="(기관별)";
		sheet10_A10="(연령별)";
		sheet10_A12="(성별)";
	}

	//-----페이지 스킵 관련 함수-----
	//페이지 스킵시 호출되는 함수로서 페이지 번호를 증가시키고 페이지 지시문 출력 그리고 Y좌표 초기화
	//매개변수에 따라 해당 쉬트의 배경 이미지, 머리글 밴드, 바닥글 밴드 함수 호출
	private void pageSkip(int nIndex) throws Exception{
		nXCurPos=nXStartPos;
		nYCurPos=nYStartPos;
		nPageNum=nPageNum+1;
		out.print("-- " + nPageNum + " PAGE --\r");

		switch(nIndex){
			case 10:		//SHEET=Sheet=1   FRAME=0에서 페이지 스킵시
			getScriptFromtitle(false, true);		//머리글 밴드 호출
			getScriptFromfoot(false, true);		//바닥글 밴드 호출
			break;
		}
	}

	//페이지 스킵이 필요한지 검사하는 함수
	private boolean isPageSkip(int nTestPos){
		if(nTestPos>nYEndPos){
			return true;
		}else{
			return false;
		}
	}

	//-----공통 함수 선언-----
	private void getScriptHeader(String paper, String size, String value, String orient) throws Exception{
		out.print("--SCRIPT_START31--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void getSheetPaperInfo(String paper, String size, String value, String orient) throws Exception{
		out.print("--PAPER_INFO--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void initSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bFirstFrame){
		if(bFirstFrame){
			nStartPage=nMaxPage+1;
			nYLastPos=0;
		}
		nPageNum=nStartPage;
		nYStartPos=constStartY;
		nYEndPos=constEndY;
		nYCurPos=nYStartPos;
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
	}

	private void initChildSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bIsMultiFrame, boolean bIsFirstFrame){
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
		nYStartPos=constStartY;
		nYEndPos=constEndY;

		if(bIsMultiFrame){
			if(bIsFirstFrame){
				nStartPage=nPageNum;
				nYSavePos=nYCurPos;
				nYLastPos=0;
			}else{
				nPageNum=nStartPage;
				nYCurPos=nYSavePos;
			}
		}else{
			nStartPage=nPageNum;
		}
	}

	//Empty Row만으로 구성되어 출력 위치를 조정하기 위한 VoidBand 함수
	//nRangePos - VoidBand의 출력 영역
	//nIndex - PageSkip 함수 호출시 전달할 쉬트 인덱스
	private boolean voidBandNoneData(int nRangePos, int nIndex) throws Exception{
		int nTestPos;
		nTestPos=nYCurPos+nRangePos;
		if(isPageSkip(nTestPos)){
			pageSkip(nIndex);
			return true;
		}else{
			nYCurPos=nYCurPos+nRangePos;
			return false;
		}
	}

	private String Get0(String str){
		if(str==null){
			return "0";
		}else{
			if(str.equals("")){
				return "0";
			}else{
				return str;
			}
		}
	}

	private String GetB(String str){
		if(str==null){
			return "";
		}else{
			return str;
		}
	}

	private double SUM(double accVal, double tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(double accVal, long tmpVal){
		return(accVal+(double)tmpVal);
	}

	private long SUM(long accVal, long tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(long accVal, double tmpVal){
		return((double)accVal+tmpVal);
	}

	private long COUNT(long accuCNT){
		return ++accuCNT;
	}

	private long MIN(long maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(long maxV, double maxTempV){
		if((double)maxV<=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, double maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}
	private long MAX(long maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(long maxV, double maxTempV){
		if((double)maxV>=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, double maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}

	private double AVG(double sumVal, long cntVal){
		return(sumVal/cntVal);
	}

	private double AVG(long sumVal, long cntVal){
		return((double)sumVal/(double)cntVal);
	}

	private String aiReplace(String strAll, String strSrc, String strDest) {
		while(strAll.indexOf(strSrc) != -1) {
			strAll = strAll.substring(0, strAll.indexOf(strSrc)) + strDest + strAll.substring(strAll.indexOf(strSrc) + strSrc.length(), strAll.length());
		}
		return strAll;
	}

	private String toDate() {
		SimpleDateFormat dateFormat=new SimpleDateFormat("'#SERVERDATE#'yyyy/MM/dd/HH/mm/ss");
		java.util.Date currentDate = new java.util.Date();
		return dateFormat.format(currentDate);
	}

	final String toKor (String en){
		if(en==null){
			return "";
		}
		try{
			return new String(en.getBytes("8859_1"), "KSC5601");
		}catch(Exception e){return en;}
	}
	//문자의 폭을 조사하여 데이터의 출력 높이를 자동적으로 조정하는 함수
	private int getPrintHeight(String data, int[] charWidth, int fontSize, int cellWidth, int cellHeight, int nMaxHeight){
		int ch;
		int len = 95;
		int width = 0;
		int asciiWidth = 0;
		int linePitch = (int)(fontSize*1.4);
		int height = linePitch;
		int size = data.length();
		cellWidth = cellWidth-4;
		for (int i = 0; i < size; i++) {
			ch = data.charAt(i);

			if(ch<32 && !(ch==10 || ch==20 || ch==13)){
				continue;
			}

			if(ch>0x7F){
				width += asciiWidth;

				if (width > cellWidth) {
					width = asciiWidth;
					height += linePitch;
				}
				asciiWidth = 0;

				width += charWidth[len];
				if (width > cellWidth) {
					width = charWidth[len];
					height += linePitch;
				}
			} else if (ch==10 || ch==20) {
				width = 0;
				asciiWidth = 0;
				height += linePitch;
			} else if (ch==13) {
				width = 0;
				asciiWidth = 0;
				height += linePitch;
				if ((i != size-1) && (10 == (int)data.charAt(i+1))) {
					i++;
				}
			} else {
				if ((ch>64 && ch<91) || (ch>96 && ch<123)) {
					asciiWidth += charWidth[ch-32];
					if (i==size-1){
						width = width + asciiWidth;
						if (width>cellWidth){
							height += linePitch;
						}
					}
				} else {
					width += asciiWidth;

					if (width > cellWidth) {
						width = asciiWidth;
						height += linePitch;
					}

					asciiWidth = 0;

					width += charWidth[ch-32];
					if (width > cellWidth) {
						width = charWidth[ch-32];
						height += linePitch;
					}
				}
			}
		}

		if (height>cellHeight) {
			height=height-cellHeight;
		}else{
			height=0;
		}

		height = (int)MAX((long)height,(long)nMaxHeight);
		return height;
	}
}
%>
