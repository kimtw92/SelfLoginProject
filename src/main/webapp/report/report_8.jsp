<%
/* ### Generated by AIDesigner 3.7.1.23 ### */
%>

<%@ page language="java" import="java.sql.*,java.io.*,java.text.*" %>
<%@ page contentType="text/plain; charset=euc-kr" %>

<%
Object[] userObj = null;
ReportHandler handler = new ReportHandler(request,response,userObj);
handler.service(out);
%>

<%!
class ReportHandler{
	//공통 변수 선언
	private Object[] userObj = null;
	private int nStartPage;		//각 쉬트별 시작 페이지 저장
	private int nMaxPage;		//한 쉬트가 실행된 후 생성된 최대 페이지 번호 저장
	private int nPageNum;		//현재 페이지 번호
	private int nYStartPos;		//쉬트에서 Y 시작 좌표
	private int nYEndPos;		//쉬트에서 Y 끝 좌표
	private int nYCurPos;		//현재 Y 좌표
	private int nYSavePos;		//연결된 멀티 프레임 쉬트에서 시작 Y 좌표 저장
	private int nYLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 Y 좌표 저장
	private int nXStartPos;		//쉬트에서 X 시작 좌표
	private int nXEndPos;		//쉬트에서 X 끝 좌표
	private int nXCurPos;		//현재 X 좌표
	private int nXSavePos;		//연결된 멀티 프레임 쉬트에서 시작 X 좌표 저장
	private int  nXLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 X 좌표 저장
	private boolean bIsBeforePageSkip;		//조건 밴드에서 페이지 넘기기 여부 판단
	private int nLoopRef;		//절대 양식에서 루프 참조 변수
	private String isEmpty="";		//빈 문자열 비교에 사용

	private HttpServletRequest request;
	private HttpServletResponse response;
	private JspWriter out;

	//-----데이터 변수 선언-----
	String sheet10_A1;
	String sheet10_A9;
	int[] nAutoHeight_master=new int[1];
	String sheet10_A3;
	String sheet10_B3;
	String sheet10_C3;
	String sheet10_L3;
	String sheet10_C4;
	String sheet10_D4;
	String sheet10_E4;
	String sheet10_F4;
	String sheet10_G4;
	String sheet10_G5;
	String sheet10_H5;
	String sheet10_I5;
	String sheet10_J5;
	String sheet10_K5;
	String sheet10_A6;
	double sheet10_C6;
	double sheet10_D6;
	double sheet10_E6;
	double sheet10_F6;
	double sheet10_G6;
	double sheet10_H6;
	double sheet10_I6;
	double sheet10_J6;
	double sheet10_K6;
	double sheet10_L6;
	String sheet10_A7;
	String sheet10_B7;
	double sheet10_C7;
	double sheet10_D7;
	double sheet10_E7;
	double sheet10_F7;
	double sheet10_G7;
	double sheet10_H7;
	double sheet10_I7;
	double sheet10_J7;
	double sheet10_K7;
	double sheet10_L7;
	int[] nAutoHeight_detail=new int[1];
	String sheet10_B8;
	double sheet10_C8;
	double sheet10_D8;
	double sheet10_E8;
	double sheet10_F8;
	double sheet10_G8;
	double sheet10_H8;
	double sheet10_I8;
	double sheet10_J8;
	double sheet10_K8;
	double sheet10_L8;

	//-----Connection, Statement, ResultSet 객체 선언-----
	private Connection conn_DUNET;		//DSN DUNET Connection 객체
	private java.sql.Statement stat_totSum;		//ResultSet totSum 객체를 생성하기 위한 Statement 객체
	private ResultSet totSum;		//ResultSet totSum 객체
	private java.sql.Statement stat_detail;		//ResultSet detail 객체를 생성하기 위한 Statement 객체
	private ResultSet detail;		//ResultSet detail 객체
	private java.sql.Statement stat_master;		//ResultSet master 객체를 생성하기 위한 Statement 객체
	private ResultSet master;		//ResultSet master 객체

	//-----SQL 변수 선언-----
	private String sql_totSum;		//ResultSet totSum 객체를 생성하기 위한 쿼리문 저장
	private String sql_detail;		//ResultSet detail 객체를 생성하기 위한 쿼리문 저장
	private String sql_master;		//ResultSet master 객체를 생성하기 위한 쿼리문 저장

	//-----쿼리 필드 변수 선언-----
	//ResultSet totSum 객체에서 필드 값을 받는 쿼리 필드 변수
	private double totSum_TOT_GRSEQ_CNT;
	private double totSum_TOT_TDATE;
	private double totSum_TOT_LESSONTIME;
	private double totSum_TOT_TLECTURETIME;
	private double totSum_TOT_SUMTIME;
	private double totSum_TOT_SILGITIME;
	private double totSum_TOT_TORONTIME;
	private double totSum_TOT_HYUNTIME;
	private double totSum_TOT_MULTITIME;
	private double totSum_TOT_ETCTIME;

	//ResultSet detail 객체에서 필드 값을 받는 쿼리 필드 변수
	private String detail_GUBUN;
	private String detail_GUBUNNM;
	private String detail_GRCODE;
	private String detail_GRCODENM;
	private double detail_GRSEQ_CNT;
	private double detail_TDATE;
	private double detail_LESSONTIME;
	private double detail_TLECTURETIME;
	private double detail_SUMTIME;
	private double detail_SILGITIME;
	private double detail_TORONTIME;
	private double detail_HYUNTIME;
	private double detail_MULTITIME;
	private double detail_ETCTIME;

	//ResultSet master 객체에서 필드 값을 받는 쿼리 필드 변수
	private String master_GUBUN;
	private String master_GUBUNNM;
	private double master_TOT_GRSEQ_CNT;
	private double master_TOT_TDATE;
	private double master_TOT_LESSONTIME;
	private double master_TOT_TLECTURETIME;
	private double master_TOT_SUMTIME;
	private double master_TOT_SILGITIME;
	private double master_TOT_TORONTIME;
	private double master_TOT_HYUNTIME;
	private double master_TOT_MULTITIME;
	private double master_TOT_ETCTIME;

	//파라미터 변수 선언
	String p_startyear_Param;
	String p_endyear_Param;

	//ReportHandler 생성자 함수
	ReportHandler(HttpServletRequest request,HttpServletResponse response,Object[] userObj){
		this.request=request;
		this.response=response;
		this.userObj=userObj;
	}

	//ReportHandler 서비스 함수
	void service(JspWriter out) throws Exception{
		try{    //try 구문
			this.out=out;
			nMaxPage=0;    //nMaxPage 초기화

			//스크립트 헤더 함수 호출
			getScriptHeader("A4", "2100x2970", "9", "VERTICAL");

			//파라미터 설정 함수 호출
			setParam();

			//고정 데이터 초기화 함수 호출
			initConstVarient();

			//Connection 및 Statement 객체 생성 함수 호출
			createConnAndStateObject();

			//쿼리문 초기화 함수 호출
			initSQLConst();

			//쉬트 함수 호출
			//SHEET=Sheet1   FRAME=0 함수 호출
			executeSheet10();

			//---------------스크립트 종료---------------
			out.print("--SCRIPT_END--\r");
		}catch(Exception e){    //catch 구문
			out.print(e);
			out.print("AI!REPORT JSP ERROR!!!!\r");
		}finally{    //finally 구문
			try{    //finally try 구문
				//DataSet Close
				if(master!=null) master.close();
				if(stat_master!=null) stat_master.close();
				if(stat_detail!=null) stat_detail.close();
				if(totSum!=null) totSum.close();
				if(stat_totSum!=null) stat_totSum.close();
				if(conn_DUNET!=null) conn_DUNET.close();
			}catch(Exception e){    //finally catch 구문
			}    //end finally try
		}    //end try
	}

	//-----쉬트 함수-----
	//-----SHEET=Sheet1   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet10( ) throws Exception{
		//쉬트 초기화 함수 호출
		initSheetVariant(41, 99, 557, 781, true);

		//시작 페이지 번호 출력
		out.print("-- " + nPageNum + " PAGE --\r");

		//밴드 함수 호출
		getScriptFromtitle(true, true);    //머리글 밴드 호출
		getScriptFromfoot(true, true);    //바닥글 밴드 호출
		getScriptFrommaster(true);    //반복 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기
	}

	//-----밴드 함수-----
	//----title HeaderBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : title
	//----밴드 종류 : 머리글 밴드
	//----bIsFrist : 쉬트 함수에서 최초로 호출될 때 true, 페이지 스킵 함수에서 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromtitle(boolean bIsFirst, boolean bIsPrint) throws Exception{
		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 함수 호출
			writeScripttitle();
		}   //end if(bIsPrint)
	}

	//----foot FooterBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : foot
	//----밴드 종류 : 바닥글 밴드
	//----bIsFrist : 쉬트 함수에서 최초로 호출될 때 true, 페이지 스킵 함수에서 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromfoot(boolean bIsFirst, boolean bIsPrint) throws Exception{
		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 함수 호출
			writeScriptfoot();
		}   //end if(bIsPrint)
	}

	//----header RepeatHeader Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : header
	//----밴드 종류 : 반복 헤더
	//----bIsFrist : 반복 밴드 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. treu면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromheader(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=92;	//밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//DataSet 객체 생성
			//ResultSet totSum 객체의 생성
			if(totSum==null){
				totSum = stat_totSum.executeQuery(sql_totSum);
			}else{
				totSum.beforeFirst();
			}

			//데이터 fetch
			if(totSum.next()){
				setFieldVariableFromtotSum();	//ResultSet totSum에서 필드 값 설정
			}else{
				setFieldInitFromtotSum();	//ResultSet totSum의 필드 값 초기화
			}

			//데이터 변수 초기화
			sheet10_C6=0;
			sheet10_D6=0;
			sheet10_E6=0;
			sheet10_F6=0;
			sheet10_G6=0;
			sheet10_H6=0;
			sheet10_I6=0;
			sheet10_J6=0;
			sheet10_K6=0;
			sheet10_L6=0;

			//데이터 변수 할당
			sheet10_C6=totSum_TOT_GRSEQ_CNT;
			sheet10_D6=totSum_TOT_TDATE;
			sheet10_E6=totSum_TOT_LESSONTIME;
			sheet10_F6=totSum_TOT_TLECTURETIME;
			sheet10_G6=totSum_TOT_SUMTIME;
			sheet10_H6=totSum_TOT_SILGITIME;
			sheet10_I6=totSum_TOT_TORONTIME;
			sheet10_J6=totSum_TOT_HYUNTIME;
			sheet10_K6=totSum_TOT_MULTITIME;
			sheet10_L6=totSum_TOT_ETCTIME;
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptheader();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----detail RepeatBand Start-----
	//-----소속 쉬트 : SHEET=Sheet1   FRAME=Frame0
	//-----밴드 이름 : detail
	//-----밴드 종류 : 반복 밴드
	//-----bIsPrint : 감추기 속성 설정 여부 true면 출력, false면 스크립트를 생성하지 않음
	private void getScriptFromdetail(boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;    //밴드 출력 높이
		boolean bIsFirst=true;
		//폰트명 : 돋움체
		//폰트 사이즈 : 9
		//각 문자별 폭을 할당할 배열 선언
		int[] charWidth = {5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,10};

		//데이터 변수 초기화
		sheet10_B8="";
		sheet10_C8=0;
		sheet10_D8=0;
		sheet10_E8=0;
		sheet10_F8=0;
		sheet10_G8=0;
		sheet10_H8=0;
		sheet10_I8=0;
		sheet10_J8=0;
		sheet10_K8=0;
		sheet10_L8=0;

		//DataSet 객체 생성
		//ResultSet detail 객체의 생성
		initSQLdetailVarient();
		detail = stat_detail.executeQuery(sql_detail);

		while(detail.next()){   //자동으로 생성되는 반복 밴드의 루프문
			//데이터 fetch
			setFieldVariableFromdetail();	//RecordSet detail에서 필드 값 설정

			if(bIsFirst){   //밴드 호출 후 루프 내에서 한번 만 실행되는 코드
			}   //end if(bIsFirst)

			//데이터 변수 할당
			sheet10_B8=detail_GRCODENM;
			sheet10_C8=detail_GRSEQ_CNT;
			sheet10_D8=detail_TDATE;
			sheet10_E8=detail_LESSONTIME;
			sheet10_F8=detail_TLECTURETIME;
			sheet10_G8=detail_SUMTIME;
			sheet10_H8=detail_SILGITIME;
			sheet10_I8=detail_TORONTIME;
			sheet10_J8=detail_HYUNTIME;
			sheet10_K8=detail_MULTITIME;
			sheet10_L8=detail_ETCTIME;

			//Auto Size Code
			nAutoHeight_detail[0]=0;
			nAutoHeight_detail[0]=getPrintHeight(sheet10_B8, charWidth, 9, 110, 20, nAutoHeight_detail[0]);
			nAutoHeight_detail[0]=nAutoHeight_detail[0]+20;
			nBandHeight=nAutoHeight_detail[0];   //밴드 출력 높이 설정

			//AI 스크립트 출력
			if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
				if(isPageSkip(nYCurPos+nBandHeight)){   //스크립트 출력 영역 검사
					//페이지 스킵 함수 호출
					pageSkip(10);

					//반복 헤더 및 부모 반복단위 호출
					getScriptFromheader(false, true);	//반복 헤더 호출
					writeScriptmaster();

					nYCurPos=nYCurPos+nAutoHeight_master[0];
				}   //end if(page skip test)

				//스크립트 출력 함수 호출
				writeScriptdetail();

				//다음 출력 좌표 설정
				nYCurPos=nYCurPos+nBandHeight;
			}   //end if(bIsPrint)

			//bIsFirst 및 출력 라인 설정
			bIsFirst=false;
		}   //while end

		//DataSet Close
		if(detail!=null) detail.close();
	}

	//-----master RepeatBand Start-----
	//-----소속 쉬트 : SHEET=Sheet1   FRAME=Frame0
	//-----밴드 이름 : master
	//-----밴드 종류 : 반복 밴드
	//-----bIsPrint : 감추기 속성 설정 여부 true면 출력, false면 스크립트를 생성하지 않음
	private void getScriptFrommaster(boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;    //밴드 출력 높이
		boolean bIsFirst=true;
		//폰트명 : 돋움체
		//폰트 사이즈 : 9
		//각 문자별 폭을 할당할 배열 선언
		int[] charWidth = {5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,10};

		//데이터 변수 초기화
		sheet10_A7="";
		sheet10_C7=0;
		sheet10_D7=0;
		sheet10_E7=0;
		sheet10_F7=0;
		sheet10_G7=0;
		sheet10_H7=0;
		sheet10_I7=0;
		sheet10_J7=0;
		sheet10_K7=0;
		sheet10_L7=0;

		//DataSet 객체 생성
		//ResultSet master 객체의 생성
		if(master==null){
			master = stat_master.executeQuery(sql_master);
		}else{
			master.beforeFirst();
		}

		while(master.next()){   //자동으로 생성되는 반복 밴드의 루프문
			//데이터 fetch
			setFieldVariableFrommaster();	//RecordSet master에서 필드 값 설정

			if(bIsFirst){   //밴드 호출 후 루프 내에서 한번 만 실행되는 코드
				//반복 헤더 호출 및 조건 플래그 초기화
				getScriptFromheader(bIsFirst, true);	//반복 헤더 호출
			}   //end if(bIsFirst)

			//데이터 변수 할당
			sheet10_A7=master_GUBUNNM;
			sheet10_C7=master_TOT_GRSEQ_CNT;
			sheet10_D7=master_TOT_TDATE;
			sheet10_E7=master_TOT_LESSONTIME;
			sheet10_F7=master_TOT_TLECTURETIME;
			sheet10_G7=master_TOT_SUMTIME;
			sheet10_H7=master_TOT_SILGITIME;
			sheet10_I7=master_TOT_TORONTIME;
			sheet10_J7=master_TOT_HYUNTIME;
			sheet10_K7=master_TOT_MULTITIME;
			sheet10_L7=master_TOT_ETCTIME;

			//Auto Size Code
			nAutoHeight_master[0]=0;
			nAutoHeight_master[0]=getPrintHeight(sheet10_A7, charWidth, 9, 72, 20, nAutoHeight_master[0]);
			nAutoHeight_master[0]=nAutoHeight_master[0]+20;
			nBandHeight=nAutoHeight_master[0];   //밴드 출력 높이 설정

			//AI 스크립트 출력
			if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
				if(isPageSkip(nYCurPos+nBandHeight)){   //스크립트 출력 영역 검사
					//페이지 스킵 함수 호출
					pageSkip(10);

					//반복 헤더 및 부모 반복단위 호출
					getScriptFromheader(false, true);	//반복 헤더 호출
				}   //end if(page skip test)

				//스크립트 출력 함수 호출
				writeScriptmaster();

				//다음 출력 좌표 설정
				nYCurPos=nYCurPos+nBandHeight;
			}   //end if(bIsPrint)

			//루프 내부 자식 밴드 호출
			getScriptFromdetail(true);

			//bIsFirst 및 출력 라인 설정
			bIsFirst=false;
		}   //while end
	}

	//-----스크립트 출력 함수-----
	//----title 스크립트 문 출력 함수----
	private void writeScripttitle( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT(41,41,515,1,16,0/,돋움체,RGB[0,0,0],BOLD, , ,NONE,38,1)");
		out.println(sheet10_A1+"\r");
	}

	//----foot 스크립트 문 출력 함수----
	private void writeScriptfoot( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT(41,781,515,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A9+"\r");
	}

	//----header 스크립트 문 출력 함수----
	private void writeScriptheader( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos)+",72,72,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,72,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,72,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,72,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,72,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",72,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,72,1)");
		out.println(sheet10_A3+"\r");
		out.println("^CELLBG("+(nXCurPos+72)+","+(nYCurPos)+",110,72,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",110,72,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",110,72,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",110,72,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",110,72,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+72)+","+(nYCurPos)+",110,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,72,1)");
		out.println(sheet10_B3+"\r");
		out.println("^CELLBG("+(nXCurPos+182)+","+(nYCurPos)+",296,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos)+",296,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos)+",296,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos)+",296,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos)+",296,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+182)+","+(nYCurPos)+",296,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_C3+"\r");
		out.println("^CELLBG("+(nXCurPos+478)+","+(nYCurPos)+",37,72,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+478)+","+(nYCurPos)+",37,72,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+478)+","+(nYCurPos)+",37,72,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+478)+","+(nYCurPos)+",37,72,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+478)+","+(nYCurPos)+",37,72,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+478)+","+(nYCurPos)+",37,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,72,1)");
		out.println(sheet10_L3+"\r");
		out.println("^CELLBG("+(nXCurPos+182)+","+(nYCurPos+20)+",34,52,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos+20)+",34,52,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos+20)+",34,52,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos+20)+",34,52,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos+20)+",34,52,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+182)+","+(nYCurPos+20)+",34,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,52,1)");
		out.println(sheet10_C4+"\r");
		out.println("^CELLBG("+(nXCurPos+216)+","+(nYCurPos+20)+",34,52,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+216)+","+(nYCurPos+20)+",34,52,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+216)+","+(nYCurPos+20)+",34,52,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+216)+","+(nYCurPos+20)+",34,52,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+216)+","+(nYCurPos+20)+",34,52,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+216)+","+(nYCurPos+20)+",34,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,52,1)");
		out.println(sheet10_D4+"\r");
		out.println("^CELLBG("+(nXCurPos+250)+","+(nYCurPos+20)+",34,52,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos+20)+",34,52,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos+20)+",34,52,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos+20)+",34,52,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos+20)+",34,52,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+250)+","+(nYCurPos+20)+",34,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,52,1)");
		out.println(sheet10_E4+"\r");
		out.println("^CELLBG("+(nXCurPos+284)+","+(nYCurPos+20)+",34,52,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+284)+","+(nYCurPos+20)+",34,52,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+284)+","+(nYCurPos+20)+",34,52,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+284)+","+(nYCurPos+20)+",34,52,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+284)+","+(nYCurPos+20)+",34,52,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+284)+","+(nYCurPos+20)+",34,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,52,1)");
		out.println(sheet10_F4+"\r");
		out.println("^CELLBG("+(nXCurPos+318)+","+(nYCurPos+20)+",160,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos+20)+",160,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos+20)+",160,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos+20)+",160,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos+20)+",160,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+318)+","+(nYCurPos+20)+",160,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_G4+"\r");
		out.println("^CELLBG("+(nXCurPos+318)+","+(nYCurPos+40)+",32,32,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos+40)+",32,32,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos+40)+",32,32,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos+40)+",32,32,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos+40)+",32,32,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+318)+","+(nYCurPos+40)+",32,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,32,1)");
		out.println(sheet10_G5+"\r");
		out.println("^CELLBG("+(nXCurPos+350)+","+(nYCurPos+40)+",32,32,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+350)+","+(nYCurPos+40)+",32,32,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+350)+","+(nYCurPos+40)+",32,32,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+350)+","+(nYCurPos+40)+",32,32,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+350)+","+(nYCurPos+40)+",32,32,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+350)+","+(nYCurPos+40)+",32,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,32,1)");
		out.println(sheet10_H5+"\r");
		out.println("^CELLBG("+(nXCurPos+382)+","+(nYCurPos+40)+",32,32,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+382)+","+(nYCurPos+40)+",32,32,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+382)+","+(nYCurPos+40)+",32,32,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+382)+","+(nYCurPos+40)+",32,32,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+382)+","+(nYCurPos+40)+",32,32,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+382)+","+(nYCurPos+40)+",32,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,32,1)");
		out.println(sheet10_I5+"\r");
		out.println("^CELLBG("+(nXCurPos+414)+","+(nYCurPos+40)+",32,32,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+414)+","+(nYCurPos+40)+",32,32,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+414)+","+(nYCurPos+40)+",32,32,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+414)+","+(nYCurPos+40)+",32,32,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+414)+","+(nYCurPos+40)+",32,32,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+414)+","+(nYCurPos+40)+",32,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,32,1)");
		out.println(sheet10_J5+"\r");
		out.println("^CELLBG("+(nXCurPos+446)+","+(nYCurPos+40)+",32,32,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos+40)+",32,32,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos+40)+",32,32,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos+40)+",32,32,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos+40)+",32,32,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+446)+","+(nYCurPos+40)+",32,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,32,1)");
		out.println(sheet10_K5+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+72)+",182,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+72)+",182,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+72)+",182,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+72)+",182,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+72)+",182,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+72)+",182,1,10,0/,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A6+"\r");
		out.println("^CELLBG("+(nXCurPos+182)+","+(nYCurPos+72)+",34,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos+72)+",34,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos+72)+",34,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos+72)+",34,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos+72)+",34,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+182)+","+(nYCurPos+72)+",34,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_C6+"\r");
		out.println("^CELLBG("+(nXCurPos+216)+","+(nYCurPos+72)+",34,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+216)+","+(nYCurPos+72)+",34,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+216)+","+(nYCurPos+72)+",34,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+216)+","+(nYCurPos+72)+",34,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+216)+","+(nYCurPos+72)+",34,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+216)+","+(nYCurPos+72)+",34,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_D6+"\r");
		out.println("^CELLBG("+(nXCurPos+250)+","+(nYCurPos+72)+",34,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos+72)+",34,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos+72)+",34,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos+72)+",34,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos+72)+",34,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+250)+","+(nYCurPos+72)+",34,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E6+"\r");
		out.println("^CELLBG("+(nXCurPos+284)+","+(nYCurPos+72)+",34,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+284)+","+(nYCurPos+72)+",34,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+284)+","+(nYCurPos+72)+",34,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+284)+","+(nYCurPos+72)+",34,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+284)+","+(nYCurPos+72)+",34,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+284)+","+(nYCurPos+72)+",34,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F6+"\r");
		out.println("^CELLBG("+(nXCurPos+318)+","+(nYCurPos+72)+",32,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos+72)+",32,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos+72)+",32,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos+72)+",32,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos+72)+",32,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+318)+","+(nYCurPos+72)+",32,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_G6+"\r");
		out.println("^CELLBG("+(nXCurPos+350)+","+(nYCurPos+72)+",32,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+350)+","+(nYCurPos+72)+",32,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+350)+","+(nYCurPos+72)+",32,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+350)+","+(nYCurPos+72)+",32,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+350)+","+(nYCurPos+72)+",32,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+350)+","+(nYCurPos+72)+",32,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_H6+"\r");
		out.println("^CELLBG("+(nXCurPos+382)+","+(nYCurPos+72)+",32,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+382)+","+(nYCurPos+72)+",32,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+382)+","+(nYCurPos+72)+",32,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+382)+","+(nYCurPos+72)+",32,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+382)+","+(nYCurPos+72)+",32,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+382)+","+(nYCurPos+72)+",32,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_I6+"\r");
		out.println("^CELLBG("+(nXCurPos+414)+","+(nYCurPos+72)+",32,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+414)+","+(nYCurPos+72)+",32,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+414)+","+(nYCurPos+72)+",32,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+414)+","+(nYCurPos+72)+",32,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+414)+","+(nYCurPos+72)+",32,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+414)+","+(nYCurPos+72)+",32,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_J6+"\r");
		out.println("^CELLBG("+(nXCurPos+446)+","+(nYCurPos+72)+",32,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos+72)+",32,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos+72)+",32,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos+72)+",32,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos+72)+",32,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+446)+","+(nYCurPos+72)+",32,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_K6+"\r");
		out.println("^CELLBG("+(nXCurPos+478)+","+(nYCurPos+72)+",37,20,1,RGB[192,192,192],RGB[192,192,192],0)\r");
		out.println("^CELLLINE("+(nXCurPos+478)+","+(nYCurPos+72)+",37,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+478)+","+(nYCurPos+72)+",37,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+478)+","+(nYCurPos+72)+",37,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+478)+","+(nYCurPos+72)+",37,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+478)+","+(nYCurPos+72)+",37,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_L6+"\r");
	}

	//----detail 스크립트 문 출력 함수----
	private void writeScriptdetail( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",110,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",110,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",110,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",110,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+72)+","+(nYCurPos)+",110,0,9,0/,돋움체,RGB[0,0,0], , , ,XL,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_B8+"\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos)+",34,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos)+",34,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos)+",34,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos)+",34,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+182)+","+(nYCurPos)+",34,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_C8+"\r");
		out.println("^CELLLINE("+(nXCurPos+216)+","+(nYCurPos)+",34,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+216)+","+(nYCurPos)+",34,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+216)+","+(nYCurPos)+",34,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+216)+","+(nYCurPos)+",34,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+216)+","+(nYCurPos)+",34,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_D8+"\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos)+",34,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos)+",34,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos)+",34,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos)+",34,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+250)+","+(nYCurPos)+",34,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_E8+"\r");
		out.println("^CELLLINE("+(nXCurPos+284)+","+(nYCurPos)+",34,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+284)+","+(nYCurPos)+",34,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+284)+","+(nYCurPos)+",34,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+284)+","+(nYCurPos)+",34,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+284)+","+(nYCurPos)+",34,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_F8+"\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",32,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",32,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",32,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",32,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+318)+","+(nYCurPos)+",32,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_G8+"\r");
		out.println("^CELLLINE("+(nXCurPos+350)+","+(nYCurPos)+",32,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+350)+","+(nYCurPos)+",32,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+350)+","+(nYCurPos)+",32,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+350)+","+(nYCurPos)+",32,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+350)+","+(nYCurPos)+",32,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_H8+"\r");
		out.println("^CELLLINE("+(nXCurPos+382)+","+(nYCurPos)+",32,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+382)+","+(nYCurPos)+",32,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+382)+","+(nYCurPos)+",32,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+382)+","+(nYCurPos)+",32,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+382)+","+(nYCurPos)+",32,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_I8+"\r");
		out.println("^CELLLINE("+(nXCurPos+414)+","+(nYCurPos)+",32,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+414)+","+(nYCurPos)+",32,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+414)+","+(nYCurPos)+",32,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+414)+","+(nYCurPos)+",32,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+414)+","+(nYCurPos)+",32,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_J8+"\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",32,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",32,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",32,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",32,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+446)+","+(nYCurPos)+",32,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_K8+"\r");
		out.println("^CELLLINE("+(nXCurPos+478)+","+(nYCurPos)+",37,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+478)+","+(nYCurPos)+",37,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+478)+","+(nYCurPos)+",37,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+478)+","+(nYCurPos)+",37,"+(nAutoHeight_detail[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+478)+","+(nYCurPos)+",37,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_detail[0])+",1)");
		out.println(sheet10_L8+"\r");
	}

	//----master 스크립트 문 출력 함수----
	private void writeScriptmaster( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos)+",72,"+(nAutoHeight_master[0])+",1,RGB[232,230,225],RGB[232,230,225],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",72,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",72,0,9,0/,돋움체,RGB[0,0,0], , , ,XL,"+(nAutoHeight_master[0])+",1)");
		out.println(sheet10_A7+"\r");
		out.println("^CELLBG("+(nXCurPos+72)+","+(nYCurPos)+",110,"+(nAutoHeight_master[0])+",1,RGB[232,230,225],RGB[232,230,225],0)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",110,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",110,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",110,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+72)+","+(nYCurPos)+",110,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+72)+","+(nYCurPos)+",110,1,9,0/,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_master[0])+",1)");
		out.println(sheet10_B7+"\r");
		out.println("^CELLBG("+(nXCurPos+182)+","+(nYCurPos)+",34,"+(nAutoHeight_master[0])+",1,RGB[232,230,225],RGB[232,230,225],0)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos)+",34,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos)+",34,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos)+",34,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+182)+","+(nYCurPos)+",34,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+182)+","+(nYCurPos)+",34,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_master[0])+",1)");
		out.println(sheet10_C7+"\r");
		out.println("^CELLBG("+(nXCurPos+216)+","+(nYCurPos)+",34,"+(nAutoHeight_master[0])+",1,RGB[232,230,225],RGB[232,230,225],0)\r");
		out.println("^CELLLINE("+(nXCurPos+216)+","+(nYCurPos)+",34,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+216)+","+(nYCurPos)+",34,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+216)+","+(nYCurPos)+",34,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+216)+","+(nYCurPos)+",34,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+216)+","+(nYCurPos)+",34,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_master[0])+",1)");
		out.println(sheet10_D7+"\r");
		out.println("^CELLBG("+(nXCurPos+250)+","+(nYCurPos)+",34,"+(nAutoHeight_master[0])+",1,RGB[232,230,225],RGB[232,230,225],0)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos)+",34,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos)+",34,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos)+",34,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+250)+","+(nYCurPos)+",34,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+250)+","+(nYCurPos)+",34,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_master[0])+",1)");
		out.println(sheet10_E7+"\r");
		out.println("^CELLBG("+(nXCurPos+284)+","+(nYCurPos)+",34,"+(nAutoHeight_master[0])+",1,RGB[232,230,225],RGB[232,230,225],0)\r");
		out.println("^CELLLINE("+(nXCurPos+284)+","+(nYCurPos)+",34,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+284)+","+(nYCurPos)+",34,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+284)+","+(nYCurPos)+",34,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+284)+","+(nYCurPos)+",34,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+284)+","+(nYCurPos)+",34,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_master[0])+",1)");
		out.println(sheet10_F7+"\r");
		out.println("^CELLBG("+(nXCurPos+318)+","+(nYCurPos)+",32,"+(nAutoHeight_master[0])+",1,RGB[232,230,225],RGB[232,230,225],0)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",32,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",32,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",32,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+318)+","+(nYCurPos)+",32,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+318)+","+(nYCurPos)+",32,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_master[0])+",1)");
		out.println(sheet10_G7+"\r");
		out.println("^CELLBG("+(nXCurPos+350)+","+(nYCurPos)+",32,"+(nAutoHeight_master[0])+",1,RGB[232,230,225],RGB[232,230,225],0)\r");
		out.println("^CELLLINE("+(nXCurPos+350)+","+(nYCurPos)+",32,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+350)+","+(nYCurPos)+",32,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+350)+","+(nYCurPos)+",32,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+350)+","+(nYCurPos)+",32,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+350)+","+(nYCurPos)+",32,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_master[0])+",1)");
		out.println(sheet10_H7+"\r");
		out.println("^CELLBG("+(nXCurPos+382)+","+(nYCurPos)+",32,"+(nAutoHeight_master[0])+",1,RGB[232,230,225],RGB[232,230,225],0)\r");
		out.println("^CELLLINE("+(nXCurPos+382)+","+(nYCurPos)+",32,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+382)+","+(nYCurPos)+",32,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+382)+","+(nYCurPos)+",32,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+382)+","+(nYCurPos)+",32,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+382)+","+(nYCurPos)+",32,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_master[0])+",1)");
		out.println(sheet10_I7+"\r");
		out.println("^CELLBG("+(nXCurPos+414)+","+(nYCurPos)+",32,"+(nAutoHeight_master[0])+",1,RGB[232,230,225],RGB[232,230,225],0)\r");
		out.println("^CELLLINE("+(nXCurPos+414)+","+(nYCurPos)+",32,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+414)+","+(nYCurPos)+",32,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+414)+","+(nYCurPos)+",32,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+414)+","+(nYCurPos)+",32,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+414)+","+(nYCurPos)+",32,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_master[0])+",1)");
		out.println(sheet10_J7+"\r");
		out.println("^CELLBG("+(nXCurPos+446)+","+(nYCurPos)+",32,"+(nAutoHeight_master[0])+",1,RGB[232,230,225],RGB[232,230,225],0)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",32,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",32,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",32,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+446)+","+(nYCurPos)+",32,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+446)+","+(nYCurPos)+",32,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_master[0])+",1)");
		out.println(sheet10_K7+"\r");
		out.println("^CELLBG("+(nXCurPos+478)+","+(nYCurPos)+",37,"+(nAutoHeight_master[0])+",1,RGB[232,230,225],RGB[232,230,225],0)\r");
		out.println("^CELLLINE("+(nXCurPos+478)+","+(nYCurPos)+",37,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+478)+","+(nYCurPos)+",37,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+478)+","+(nYCurPos)+",37,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+478)+","+(nYCurPos)+",37,"+(nAutoHeight_master[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+478)+","+(nYCurPos)+",37,2,9,1/0/0,돋움체,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_master[0])+",1)");
		out.println(sheet10_L7+"\r");
	}

	//파라미터 설정 함수
	private void setParam(){
		p_startyear_Param=toKor(GetB(request.getParameter("p_startyear")));
		p_endyear_Param=toKor(GetB(request.getParameter("p_endyear")));
	}

	//-----Connection 및 Statement 객체 생성 함수-----
	private void createConnAndStateObject() throws Exception{
		//DUNET Connection 객체 생성
		Class.forName("oracle.jdbc.driver.OracleDriver").newInstance();
		conn_DUNET=DriverManager.getConnection("jdbc:oracle:thin:@192.168.10.253:1521:LOTI","inchlms","fhxl21");stat_totSum=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_detail=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_master=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
	}

	//-----SQL문 변수 초기화 함수-----
	private void initSQLConst(){
		sql_totSum = "SELECT sum(grseq_cnt)    as tot_grseq_cnt ";
		sql_totSum = sql_totSum + "     , sum(tdate)        as tot_tdate ";
		sql_totSum = sql_totSum + "     , sum(lessontime)   as tot_lessontime ";
		sql_totSum = sql_totSum + "     , sum(tlecturetime) as tot_tlecturetime ";
		sql_totSum = sql_totSum + "     , sum(sumtime)      as tot_sumtime ";
		sql_totSum = sql_totSum + "     , sum(silgitime)    as tot_silgitime ";
		sql_totSum = sql_totSum + "     , sum(torontime)    as tot_torontime ";
		sql_totSum = sql_totSum + "     , sum(hyuntime)     as tot_hyuntime ";
		sql_totSum = sql_totSum + "     , sum(multitime)    as tot_multitime ";
		sql_totSum = sql_totSum + "     , sum(etctime)      as tot_etctime ";
		sql_totSum = sql_totSum + "  FROM ( ";
		sql_totSum = sql_totSum + "SELECT gubun ";
		sql_totSum = sql_totSum + "     , gubunnm ";
		sql_totSum = sql_totSum + "     , grcode ";
		sql_totSum = sql_totSum + "     , grcodenm ";
		sql_totSum = sql_totSum + "     , grseq_cnt ";
		sql_totSum = sql_totSum + "     , tdate ";
		sql_totSum = sql_totSum + "     , lessontime ";
		sql_totSum = sql_totSum + "     , (nvl(lessontime,0)+nvl(silgitime,0) + nvl(torontime, 0) + nvl(hyuntime,0) + nvl(multitime,0) + nvl(etctime, 0)) as tlecturetime ";
		sql_totSum = sql_totSum + "     , (nvl(silgitime,0) + nvl(torontime, 0) + nvl(hyuntime,0) + nvl(multitime,0) + nvl(etctime, 0)) as sumtime ";
		sql_totSum = sql_totSum + " ";
		sql_totSum = sql_totSum + "     , silgitime ";
		sql_totSum = sql_totSum + "     , torontime ";
		sql_totSum = sql_totSum + "     , hyuntime ";
		sql_totSum = sql_totSum + "     , multitime ";
		sql_totSum = sql_totSum + "     , etctime  ";
		sql_totSum = sql_totSum + "  FROM (SELECT (c.grtype || c.grsubcd) as gubun, (mc.mcode_name || sc.scode_name || '교육') as gubunnm ";
		sql_totSum = sql_totSum + "             , c.grcode ";
		sql_totSum = sql_totSum + "	     , c.grcodenm ";
		sql_totSum = sql_totSum + "	     , count(distinct b.grseq) grseq_cnt ";
		sql_totSum = sql_totSum + "	     , nvl(sum(b.tdate),0) tdate ";
		sql_totSum = sql_totSum + "	     , nvl(sum(d.lessontime),0) lessontime ";
		sql_totSum = sql_totSum + "	     , nvl(sum(d.silgitime),0) silgitime ";
		sql_totSum = sql_totSum + "	     , nvl(sum(d.torontime),0) torontime ";
		sql_totSum = sql_totSum + "	     , nvl(sum(d.hyuntime),0) hyuntime ";
		sql_totSum = sql_totSum + "	     , nvl(sum(d.multitime),0) multitime ";
		sql_totSum = sql_totSum + "	     , nvl(sum(d.etctime),0) etctime ";
		sql_totSum = sql_totSum + "          FROM tb_maincode mc, tb_subcode sc, tb_grseq b, tb_grcode c, tb_subjseq d  ";
		sql_totSum = sql_totSum + "WHERE b.grseq between '" + p_startyear_Param + "' || '00' AND '" + p_endyear_Param + "' || '99' ";
		sql_totSum = sql_totSum + "AND (mc.cd_gubun(+)='G' AND c.grtype=mc.major_code(+))  ";
		sql_totSum = sql_totSum + "AND (sc.cd_gubun(+)='G' AND c.grtype=sc.major_code(+) AND  c.grsubcd=sc.minor_code(+))  ";
		sql_totSum = sql_totSum + "AND b.grcode=c.grcode  ";
		sql_totSum = sql_totSum + "AND b.grcode=d.grcode  ";
		sql_totSum = sql_totSum + "AND b.grseq=d.grseq ";
		sql_totSum = sql_totSum + "GROUP BY (c.grtype || c.grsubcd),(mc.mcode_name || sc.scode_name || '교육') ";
		sql_totSum = sql_totSum + "       , c.grcode  ";
		sql_totSum = sql_totSum + "       , c.grcodenm  ";
		sql_totSum = sql_totSum + "ORDER BY gubun, gubunnm, grcode, grcodenm) )";
		sql_master = "SELECT gubun ";
		sql_master = sql_master + "     , gubunnm ";
		sql_master = sql_master + "     , sum(grseq_cnt)    as tot_grseq_cnt ";
		sql_master = sql_master + "     , sum(tdate)        as tot_tdate ";
		sql_master = sql_master + "     , sum(lessontime)   as tot_lessontime ";
		sql_master = sql_master + "     , sum(tlecturetime) as tot_tlecturetime ";
		sql_master = sql_master + "     , sum(sumtime)      as tot_sumtime ";
		sql_master = sql_master + "     , sum(silgitime)    as tot_silgitime ";
		sql_master = sql_master + "     , sum(torontime)    as tot_torontime ";
		sql_master = sql_master + "     , sum(hyuntime)     as tot_hyuntime ";
		sql_master = sql_master + "     , sum(multitime)    as tot_multitime ";
		sql_master = sql_master + "     , sum(etctime)      as tot_etctime ";
		sql_master = sql_master + "  FROM ( ";
		sql_master = sql_master + "SELECT gubun ";
		sql_master = sql_master + "     , gubunnm ";
		sql_master = sql_master + "     , grcode ";
		sql_master = sql_master + "     , grcodenm ";
		sql_master = sql_master + "     , grseq_cnt ";
		sql_master = sql_master + "     , tdate ";
		sql_master = sql_master + "     , lessontime ";
		sql_master = sql_master + "     , (nvl(lessontime,0)+nvl(silgitime,0) + nvl(torontime, 0) + nvl(hyuntime,0) + nvl(multitime,0) + nvl(etctime, 0)) as tlecturetime ";
		sql_master = sql_master + "     , (nvl(silgitime,0) + nvl(torontime, 0) + nvl(hyuntime,0) + nvl(multitime,0) + nvl(etctime, 0)) as sumtime ";
		sql_master = sql_master + " ";
		sql_master = sql_master + "     , silgitime ";
		sql_master = sql_master + "     , torontime ";
		sql_master = sql_master + "     , hyuntime ";
		sql_master = sql_master + "     , multitime ";
		sql_master = sql_master + "     , etctime ";
		sql_master = sql_master + "  FROM (SELECT (c.grtype || c.grsubcd) as gubun, (mc.mcode_name || sc.scode_name || '교육') as gubunnm ";
		sql_master = sql_master + "             , c.grcode ";
		sql_master = sql_master + "	     , c.grcodenm ";
		sql_master = sql_master + "	     , count(distinct b.grseq) grseq_cnt ";
		sql_master = sql_master + "	     , nvl(sum(b.tdate),0) tdate ";
		sql_master = sql_master + "	     , nvl(sum(d.lessontime),0) lessontime ";
		sql_master = sql_master + "	     , nvl(sum(d.silgitime),0) silgitime ";
		sql_master = sql_master + "	     , nvl(sum(d.torontime),0) torontime ";
		sql_master = sql_master + "	     , nvl(sum(d.hyuntime),0) hyuntime ";
		sql_master = sql_master + "	     , nvl(sum(d.multitime),0) multitime ";
		sql_master = sql_master + "	     , nvl(sum(d.etctime),0) etctime ";
		sql_master = sql_master + "          FROM tb_maincode mc, tb_subcode sc, tb_grseq b, tb_grcode c, tb_subjseq d ";
		sql_master = sql_master + "WHERE b.grseq between '" + p_startyear_Param + "' || '00' AND '" + p_endyear_Param + "' || '99' ";
		sql_master = sql_master + "AND (mc.cd_gubun(+)='G' AND c.grtype=mc.major_code(+)) ";
		sql_master = sql_master + "AND (sc.cd_gubun(+)='G' AND c.grtype=sc.major_code(+) AND  c.grsubcd=sc.minor_code(+)) ";
		sql_master = sql_master + "AND b.grcode=c.grcode ";
		sql_master = sql_master + "AND b.grcode=d.grcode ";
		sql_master = sql_master + "AND b.grseq=d.grseq ";
		sql_master = sql_master + "GROUP BY (c.grtype || c.grsubcd),(mc.mcode_name || sc.scode_name || '교육') ";
		sql_master = sql_master + "       , c.grcode ";
		sql_master = sql_master + "       , c.grcodenm ";
		sql_master = sql_master + "ORDER BY gubun, gubunnm, grcode, grcodenm) ) ";
		sql_master = sql_master + "GROUP BY gubun ";
		sql_master = sql_master + "     , gubunnm";
	}

	private void initSQLdetailVarient(){
		sql_detail = "SELECT gubun ";
		sql_detail = sql_detail + "     , gubunnm ";
		sql_detail = sql_detail + "     , grcode ";
		sql_detail = sql_detail + "     , grcodenm ";
		sql_detail = sql_detail + "     , grseq_cnt ";
		sql_detail = sql_detail + "     , tdate ";
		sql_detail = sql_detail + "     , lessontime ";
		sql_detail = sql_detail + "     , (nvl(lessontime,0)+nvl(silgitime,0) + nvl(torontime, 0) + nvl(hyuntime,0) + nvl(multitime,0) + nvl(etctime, 0)) as tlecturetime ";
		sql_detail = sql_detail + "     , (nvl(silgitime,0) + nvl(torontime, 0) + nvl(hyuntime,0) + nvl(multitime,0) + nvl(etctime, 0)) as sumtime ";
		sql_detail = sql_detail + " ";
		sql_detail = sql_detail + "     , silgitime ";
		sql_detail = sql_detail + "     , torontime ";
		sql_detail = sql_detail + "     , hyuntime ";
		sql_detail = sql_detail + "     , multitime ";
		sql_detail = sql_detail + "     , etctime  ";
		sql_detail = sql_detail + "  FROM (SELECT (c.grtype || c.grsubcd) as gubun, (mc.mcode_name || sc.scode_name || '교육') as gubunnm ";
		sql_detail = sql_detail + "             , c.grcode ";
		sql_detail = sql_detail + "	     , c.grcodenm ";
		sql_detail = sql_detail + "	     , count(distinct b.grseq) grseq_cnt ";
		sql_detail = sql_detail + "	     , nvl(sum(b.tdate),0) tdate ";
		sql_detail = sql_detail + "	     , nvl(sum(d.lessontime),0) lessontime ";
		sql_detail = sql_detail + "	     , nvl(sum(d.silgitime),0) silgitime ";
		sql_detail = sql_detail + "	     , nvl(sum(d.torontime),0) torontime ";
		sql_detail = sql_detail + "	     , nvl(sum(d.hyuntime),0) hyuntime ";
		sql_detail = sql_detail + "	     , nvl(sum(d.multitime),0) multitime ";
		sql_detail = sql_detail + "	     , nvl(sum(d.etctime),0) etctime ";
		sql_detail = sql_detail + "          FROM tb_maincode mc, tb_subcode sc, tb_grseq b, tb_grcode c, tb_subjseq d  ";
		sql_detail = sql_detail + "WHERE b.grseq between '" + p_startyear_Param + "' || '00' AND '" + p_endyear_Param + "' || '99' ";
		sql_detail = sql_detail + "AND (c.grtype || c.grsubcd) = '" + master_GUBUN + "' ";
		sql_detail = sql_detail + "AND (mc.cd_gubun(+)='G' AND c.grtype=mc.major_code(+))  ";
		sql_detail = sql_detail + "AND (sc.cd_gubun(+)='G' AND c.grtype=sc.major_code(+) AND  c.grsubcd=sc.minor_code(+))  ";
		sql_detail = sql_detail + "AND b.grcode=c.grcode  ";
		sql_detail = sql_detail + "AND b.grcode=d.grcode  ";
		sql_detail = sql_detail + "AND b.grseq=d.grseq ";
		sql_detail = sql_detail + "GROUP BY (c.grtype || c.grsubcd),(mc.mcode_name || sc.scode_name || '교육') ";
		sql_detail = sql_detail + "       , c.grcode  ";
		sql_detail = sql_detail + "       , c.grcodenm  ";
		sql_detail = sql_detail + "ORDER BY gubun, gubunnm, grcode, grcodenm)";
	}

	//-----ResultSet 객체에서 필드 값 설정 함수-----
	//ResultSet totSum 객체에서 필드 값 설정 함수
	private void setFieldVariableFromtotSum() throws Exception{
		totSum_TOT_GRSEQ_CNT=totSum.getDouble(1);
		totSum_TOT_TDATE=totSum.getDouble(2);
		totSum_TOT_LESSONTIME=totSum.getDouble(3);
		totSum_TOT_TLECTURETIME=totSum.getDouble(4);
		totSum_TOT_SUMTIME=totSum.getDouble(5);
		totSum_TOT_SILGITIME=totSum.getDouble(6);
		totSum_TOT_TORONTIME=totSum.getDouble(7);
		totSum_TOT_HYUNTIME=totSum.getDouble(8);
		totSum_TOT_MULTITIME=totSum.getDouble(9);
		totSum_TOT_ETCTIME=totSum.getDouble(10);
	}

	//ResultSet totSum 객체의 필드 값 초기화 함수
	private void setFieldInitFromtotSum(){
		totSum_TOT_GRSEQ_CNT=0;
		totSum_TOT_TDATE=0;
		totSum_TOT_LESSONTIME=0;
		totSum_TOT_TLECTURETIME=0;
		totSum_TOT_SUMTIME=0;
		totSum_TOT_SILGITIME=0;
		totSum_TOT_TORONTIME=0;
		totSum_TOT_HYUNTIME=0;
		totSum_TOT_MULTITIME=0;
		totSum_TOT_ETCTIME=0;
	}

	//ResultSet detail 객체에서 필드 값 설정 함수
	private void setFieldVariableFromdetail() throws Exception{
		detail_GUBUN=GetB(detail.getString(1));
		detail_GUBUNNM=GetB(detail.getString(2));
		detail_GRCODE=GetB(detail.getString(3));
		detail_GRCODENM=GetB(detail.getString(4));
		detail_GRSEQ_CNT=detail.getDouble(5);
		detail_TDATE=detail.getDouble(6);
		detail_LESSONTIME=detail.getDouble(7);
		detail_TLECTURETIME=detail.getDouble(8);
		detail_SUMTIME=detail.getDouble(9);
		detail_SILGITIME=detail.getDouble(10);
		detail_TORONTIME=detail.getDouble(11);
		detail_HYUNTIME=detail.getDouble(12);
		detail_MULTITIME=detail.getDouble(13);
		detail_ETCTIME=detail.getDouble(14);
	}

	//ResultSet detail 객체의 필드 값 초기화 함수
	private void setFieldInitFromdetail(){
		detail_GUBUN="";
		detail_GUBUNNM="";
		detail_GRCODE="";
		detail_GRCODENM="";
		detail_GRSEQ_CNT=0;
		detail_TDATE=0;
		detail_LESSONTIME=0;
		detail_TLECTURETIME=0;
		detail_SUMTIME=0;
		detail_SILGITIME=0;
		detail_TORONTIME=0;
		detail_HYUNTIME=0;
		detail_MULTITIME=0;
		detail_ETCTIME=0;
	}

	//ResultSet master 객체에서 필드 값 설정 함수
	private void setFieldVariableFrommaster() throws Exception{
		master_GUBUN=GetB(master.getString(1));
		master_GUBUNNM=GetB(master.getString(2));
		master_TOT_GRSEQ_CNT=master.getDouble(3);
		master_TOT_TDATE=master.getDouble(4);
		master_TOT_LESSONTIME=master.getDouble(5);
		master_TOT_TLECTURETIME=master.getDouble(6);
		master_TOT_SUMTIME=master.getDouble(7);
		master_TOT_SILGITIME=master.getDouble(8);
		master_TOT_TORONTIME=master.getDouble(9);
		master_TOT_HYUNTIME=master.getDouble(10);
		master_TOT_MULTITIME=master.getDouble(11);
		master_TOT_ETCTIME=master.getDouble(12);
	}

	//ResultSet master 객체의 필드 값 초기화 함수
	private void setFieldInitFrommaster(){
		master_GUBUN="";
		master_GUBUNNM="";
		master_TOT_GRSEQ_CNT=0;
		master_TOT_TDATE=0;
		master_TOT_LESSONTIME=0;
		master_TOT_TLECTURETIME=0;
		master_TOT_SUMTIME=0;
		master_TOT_SILGITIME=0;
		master_TOT_TORONTIME=0;
		master_TOT_HYUNTIME=0;
		master_TOT_MULTITIME=0;
		master_TOT_ETCTIME=0;
	}

	//-----고정 데이터 초기화 함수-----
	private void initConstVarient(){
		sheet10_A1="방법별 교육계획 실적";
		sheet10_A9="#PAGE / #TOTALPAGE";
		sheet10_A3="구   분";
		sheet10_B3="과  정  명";
		sheet10_C3="총    교    육    실    적";
		sheet10_L3="기타";
		sheet10_C4="기수";
		sheet10_D4="총교육일  수";
		sheet10_E4="총시간수";
		sheet10_F4="강의";
		sheet10_G4="참 여 식 교 육";
		sheet10_G5="소계";
		sheet10_H5="실기실습";
		sheet10_I5="토의";
		sheet10_J5="현지실습";
		sheet10_K5="시청각시  간";
		sheet10_A6="총        계";
		sheet10_B7="소    계";
	}

	//-----페이지 스킵 관련 함수-----
	//페이지 스킵시 호출되는 함수로서 페이지 번호를 증가시키고 페이지 지시문 출력 그리고 Y좌표 초기화
	//매개변수에 따라 해당 쉬트의 배경 이미지, 머리글 밴드, 바닥글 밴드 함수 호출
	private void pageSkip(int nIndex) throws Exception{
		nXCurPos=nXStartPos;
		nYCurPos=nYStartPos;
		nPageNum=nPageNum+1;
		out.print("-- " + nPageNum + " PAGE --\r");

		switch(nIndex){
			case 10:		//SHEET=Sheet=1   FRAME=0에서 페이지 스킵시
			getScriptFromtitle(false, true);		//머리글 밴드 호출
			getScriptFromfoot(false, true);		//바닥글 밴드 호출
			break;
		}
	}

	//페이지 스킵이 필요한지 검사하는 함수
	private boolean isPageSkip(int nTestPos){
		if(nTestPos>nYEndPos){
			return true;
		}else{
			return false;
		}
	}

	//-----공통 함수 선언-----
	private void getScriptHeader(String paper, String size, String value, String orient) throws Exception{
		out.print("--SCRIPT_START31--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void getSheetPaperInfo(String paper, String size, String value, String orient) throws Exception{
		out.print("--PAPER_INFO--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void initSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bFirstFrame){
		if(bFirstFrame){
			nStartPage=nMaxPage+1;
			nYLastPos=0;
		}
		nPageNum=nStartPage;
		nYStartPos=constStartY;
		nYEndPos=constEndY;
		nYCurPos=nYStartPos;
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
	}

	private void initChildSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bIsMultiFrame, boolean bIsFirstFrame){
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
		nYStartPos=constStartY;
		nYEndPos=constEndY;

		if(bIsMultiFrame){
			if(bIsFirstFrame){
				nStartPage=nPageNum;
				nYSavePos=nYCurPos;
				nYLastPos=0;
			}else{
				nPageNum=nStartPage;
				nYCurPos=nYSavePos;
			}
		}else{
			nStartPage=nPageNum;
		}
	}

	//Empty Row만으로 구성되어 출력 위치를 조정하기 위한 VoidBand 함수
	//nRangePos - VoidBand의 출력 영역
	//nIndex - PageSkip 함수 호출시 전달할 쉬트 인덱스
	private boolean voidBandNoneData(int nRangePos, int nIndex) throws Exception{
		int nTestPos;
		nTestPos=nYCurPos+nRangePos;
		if(isPageSkip(nTestPos)){
			pageSkip(nIndex);
			return true;
		}else{
			nYCurPos=nYCurPos+nRangePos;
			return false;
		}
	}

	private String Get0(String str){
		if(str==null){
			return "0";
		}else{
			if(str.equals("")){
				return "0";
			}else{
				return str;
			}
		}
	}

	private String GetB(String str){
		if(str==null){
			return "";
		}else{
			return str;
		}
	}

	private double SUM(double accVal, double tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(double accVal, long tmpVal){
		return(accVal+(double)tmpVal);
	}

	private long SUM(long accVal, long tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(long accVal, double tmpVal){
		return((double)accVal+tmpVal);
	}

	private long COUNT(long accuCNT){
		return ++accuCNT;
	}

	private long MIN(long maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(long maxV, double maxTempV){
		if((double)maxV<=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, double maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}
	private long MAX(long maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(long maxV, double maxTempV){
		if((double)maxV>=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, double maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}

	private double AVG(double sumVal, long cntVal){
		return(sumVal/cntVal);
	}

	private double AVG(long sumVal, long cntVal){
		return((double)sumVal/(double)cntVal);
	}

	private String aiReplace(String strAll, String strSrc, String strDest) {
		while(strAll.indexOf(strSrc) != -1) {
			strAll = strAll.substring(0, strAll.indexOf(strSrc)) + strDest + strAll.substring(strAll.indexOf(strSrc) + strSrc.length(), strAll.length());
		}
		return strAll;
	}

	private String toDate() {
		SimpleDateFormat dateFormat=new SimpleDateFormat("'#SERVERDATE#'yyyy/MM/dd/HH/mm/ss");
		java.util.Date currentDate = new java.util.Date();
		return dateFormat.format(currentDate);
	}

	final String toKor (String en){
		if(en==null){
			return "";
		}
		try{
			return new String(en.getBytes("8859_1"), "KSC5601");
		}catch(Exception e){return en;}
	}
	//문자의 폭을 조사하여 데이터의 출력 높이를 자동적으로 조정하는 함수
	private int getPrintHeight(String data, int[] charWidth, int fontSize, int cellWidth, int cellHeight, int nMaxHeight){
		int ch;
		int len = 95;
		int width = 0;
		int asciiWidth = 0;
		int linePitch = (int)(fontSize*1.4);
		int height = linePitch;
		int size = data.length();
		cellWidth = cellWidth-4;
		for (int i = 0; i < size; i++) {
			ch = data.charAt(i);

			if(ch<32 && !(ch==10 || ch==20 || ch==13)){
				continue;
			}

			if(ch>0x7F){
				width += asciiWidth;

				if (width > cellWidth) {
					width = asciiWidth;
					height += linePitch;
				}
				asciiWidth = 0;

				width += charWidth[len];
				if (width > cellWidth) {
					width = charWidth[len];
					height += linePitch;
				}
			} else if (ch==10 || ch==20) {
				width = 0;
				asciiWidth = 0;
				height += linePitch;
			} else if (ch==13) {
				width = 0;
				asciiWidth = 0;
				height += linePitch;
				if ((i != size-1) && (10 == (int)data.charAt(i+1))) {
					i++;
				}
			} else {
				if ((ch>64 && ch<91) || (ch>96 && ch<123)) {
					asciiWidth += charWidth[ch-32];
					if (i==size-1){
						width = width + asciiWidth;
						if (width>cellWidth){
							height += linePitch;
						}
					}
				} else {
					width += asciiWidth;

					if (width > cellWidth) {
						width = asciiWidth;
						height += linePitch;
					}

					asciiWidth = 0;

					width += charWidth[ch-32];
					if (width > cellWidth) {
						width = charWidth[ch-32];
						height += linePitch;
					}
				}
			}
		}

		if (height>cellHeight) {
			height=height-cellHeight;
		}else{
			height=0;
		}

		height = (int)MAX((long)height,(long)nMaxHeight);
		return height;
	}
}
%>
