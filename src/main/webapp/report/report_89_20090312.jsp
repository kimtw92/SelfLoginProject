<%
/* ### Generated by AIDesigner 3.7.1.23 ### */
%>

<%@ page language="java" import="java.sql.*,java.io.*,java.text.*" %>
<%@ page contentType="text/plain; charset=euc-kr" %>

<%
Object[] userObj = null;
ReportHandler handler = new ReportHandler(request,response,userObj);
handler.service(out);
%>

<%!
class ReportHandler{
	//공통 변수 선언
	private Object[] userObj = null;
	private int nStartPage;		//각 쉬트별 시작 페이지 저장
	private int nMaxPage;		//한 쉬트가 실행된 후 생성된 최대 페이지 번호 저장
	private int nPageNum;		//현재 페이지 번호
	private int nYStartPos;		//쉬트에서 Y 시작 좌표
	private int nYEndPos;		//쉬트에서 Y 끝 좌표
	private int nYCurPos;		//현재 Y 좌표
	private int nYSavePos;		//연결된 멀티 프레임 쉬트에서 시작 Y 좌표 저장
	private int nYLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 Y 좌표 저장
	private int nXStartPos;		//쉬트에서 X 시작 좌표
	private int nXEndPos;		//쉬트에서 X 끝 좌표
	private int nXCurPos;		//현재 X 좌표
	private int nXSavePos;		//연결된 멀티 프레임 쉬트에서 시작 X 좌표 저장
	private int  nXLastPos;		//연결된 멀티 프레임 쉬트에서 각 프레임의 마지막 X 좌표 저장
	private boolean bIsBeforePageSkip;		//조건 밴드에서 페이지 넘기기 여부 판단
	private int nLoopRef;		//절대 양식에서 루프 참조 변수
	private String isEmpty="";		//빈 문자열 비교에 사용

	private HttpServletRequest request;
	private HttpServletResponse response;
	private JspWriter out;

	//-----데이터 변수 선언-----
	String sheet10_A1;
	String sheet10_A2;
	String sheet10_A4;
	String sheet10_A5;
	String sheet10_A6;
	double sheet10_L8;
	double sheet10_M8;
	long sheet10_A9;
	String sheet10_B9;
	String sheet10_A10;
	String sheet10_D10;
	String sheet10_A11;
	String sheet10_D11;
	long sheet10_L11;
	String sheet10_A12;
	String sheet10_D12;
	String sheet10_A13;
	String sheet10_D13;
	String sheet10_A14;
	String sheet10_D14;
	long sheet10_A16;
	String sheet10_B16;
	long sheet10_L17;
	String sheet10_A18;
	String sheet10_C18;
	String sheet10_E18;
	String sheet10_F18;
	String sheet10_K18;
	double sheet10_L18;
	String sheet10_F19;
	String sheet10_G19;
	String sheet10_H19;
	String sheet10_I19;
	String sheet10_A20;
	long sheet10_C20;
	double sheet10_E20;
	double sheet10_F20;
	double sheet10_G20;
	double sheet10_H20;
	double sheet10_I20;
	double sheet10_K20;
	String sheet10_A21;
	double sheet10_E21;
	double sheet10_F21;
	double sheet10_G21;
	double sheet10_H21;
	double sheet10_I21;
	double sheet10_K21;
	long sheet10_A23;
	String sheet10_B23;
	String sheet10_A25;
	String sheet10_D25;
	String sheet10_F25;
	String sheet10_H25;
	String sheet10_J25;
	String sheet10_A27;
	long sheet10_D27;
	double sheet10_F27;
	double sheet10_H27;
	double sheet10_J27;
	String sheet10_A26;
	long sheet10_D26;
	double sheet10_F26;
	double sheet10_H26;
	double sheet10_J26;
	int conPage;
	int conYPos;
	String sheet20_A1;
	int[] nAutoHeight_question_list=new int[2];
	String sheet20_A3;
	String sheet20_C3;
	String sheet20_D3;
	String sheet20_E3;
	String sheet20_F3;
	double sheet20_A5;
	String sheet20_B5;
	double sheet20_C5;
	long sheet20_D5;
	double sheet20_E5;
	String sheet20_F5;
	String sheet20_C6;
	String sheet20_D6;
	String sheet20_E6;
	String sheet30_A1;
	int[] nAutoHeight_list=new int[2];
	String sheet30_A3;
	String sheet30_B3;
	String sheet30_C3;
	String sheet30_G3;
	String sheet30_K3;
	String sheet30_O3;
	String sheet30_C4;
	String sheet30_D4;
	String sheet30_E4;
	String sheet30_F4;
	String sheet30_G4;
	String sheet30_H4;
	String sheet30_I4;
	String sheet30_J4;
	String sheet30_K4;
	String sheet30_L4;
	String sheet30_M4;
	String sheet30_N4;
	String sheet30_A5;
	String sheet30_B5;
	long sheet30_C5;
	long sheet30_D5;
	long sheet30_E5;
	String sheet30_F5;
	long sheet30_G5;
	long sheet30_H5;
	long sheet30_I5;
	String sheet30_J5;
	long sheet30_K5;
	long sheet30_L5;
	long sheet30_M5;
	String sheet30_N5;
	String sheet30_O5;
	String sheet30_C6;
	String sheet30_D6;
	String sheet30_E6;
	String sheet30_G6;
	String sheet30_H6;
	String sheet30_I6;
	String sheet30_K6;
	String sheet30_L6;
	String sheet30_M6;
	long sheet40_A1;
	String sheet40_B1;

	//-----Connection, Statement, ResultSet 객체 선언-----
	private Connection conn_DUNET;		//DSN DUNET Connection 객체
	private java.sql.Statement stat_GR_INFO;		//ResultSet GR_INFO 객체를 생성하기 위한 Statement 객체
	private ResultSet GR_INFO;		//ResultSet GR_INFO 객체
	private java.sql.Statement stat_GR_BASIC_INFO;		//ResultSet GR_BASIC_INFO 객체를 생성하기 위한 Statement 객체
	private ResultSet GR_BASIC_INFO;		//ResultSet GR_BASIC_INFO 객체
	private java.sql.Statement stat_GR_TYPE_INFO;		//ResultSet GR_TYPE_INFO 객체를 생성하기 위한 Statement 객체
	private ResultSet GR_TYPE_INFO;		//ResultSet GR_TYPE_INFO 객체
	private java.sql.Statement stat_CATEGORY;		//ResultSet CATEGORY 객체를 생성하기 위한 Statement 객체
	private ResultSet CATEGORY;		//ResultSet CATEGORY 객체
	private java.sql.Statement stat_tutor_list;		//ResultSet tutor_list 객체를 생성하기 위한 Statement 객체
	private ResultSet tutor_list;		//ResultSet tutor_list 객체
	private java.sql.Statement stat_QUESTION;		//ResultSet QUESTION 객체를 생성하기 위한 Statement 객체
	private ResultSet QUESTION;		//ResultSet QUESTION 객체
	private java.sql.Statement stat_GR_MALE;		//ResultSet GR_MALE 객체를 생성하기 위한 Statement 객체
	private ResultSet GR_MALE;		//ResultSet GR_MALE 객체
	private java.sql.Statement stat_GR_FEMALE;		//ResultSet GR_FEMALE 객체를 생성하기 위한 Statement 객체
	private ResultSet GR_FEMALE;		//ResultSet GR_FEMALE 객체
	private java.sql.Statement stat_QUEST;		//ResultSet QUEST 객체를 생성하기 위한 Statement 객체
	private ResultSet QUEST;		//ResultSet QUEST 객체
	private java.sql.Statement stat_ANS;		//ResultSet ANS 객체를 생성하기 위한 Statement 객체
	private ResultSet ANS;		//ResultSet ANS 객체
	private java.sql.Statement stat_QUESTION3;		//ResultSet QUESTION3 객체를 생성하기 위한 Statement 객체
	private ResultSet QUESTION3;		//ResultSet QUESTION3 객체
	private java.sql.Statement stat_QUESTION4;		//ResultSet QUESTION4 객체를 생성하기 위한 Statement 객체
	private ResultSet QUESTION4;		//ResultSet QUESTION4 객체
	private java.sql.Statement stat_QUESTION5_1;		//ResultSet QUESTION5_1 객체를 생성하기 위한 Statement 객체
	private ResultSet QUESTION5_1;		//ResultSet QUESTION5_1 객체
	private java.sql.Statement stat_QUESTION5_2;		//ResultSet QUESTION5_2 객체를 생성하기 위한 Statement 객체
	private ResultSet QUESTION5_2;		//ResultSet QUESTION5_2 객체
	private java.sql.Statement stat_QUESTION5_3;		//ResultSet QUESTION5_3 객체를 생성하기 위한 Statement 객체
	private ResultSet QUESTION5_3;		//ResultSet QUESTION5_3 객체
	private java.sql.Statement stat_QUESTION_JU;		//ResultSet QUESTION_JU 객체를 생성하기 위한 Statement 객체
	private ResultSet QUESTION_JU;		//ResultSet QUESTION_JU 객체
	private java.sql.Statement stat_grgubun_info;		//ResultSet grgubun_info 객체를 생성하기 위한 Statement 객체
	private ResultSet grgubun_info;		//ResultSet grgubun_info 객체
	private java.sql.Statement stat_GR_DETAIL_INFO;		//ResultSet GR_DETAIL_INFO 객체를 생성하기 위한 Statement 객체
	private ResultSet GR_DETAIL_INFO;		//ResultSet GR_DETAIL_INFO 객체
	private java.sql.Statement stat_qry_QUESTION_LIST;		//ResultSet qry_QUESTION_LIST 객체를 생성하기 위한 Statement 객체
	private ResultSet qry_QUESTION_LIST;		//ResultSet qry_QUESTION_LIST 객체
	private java.sql.Statement stat_QUESTION_LIST;		//ResultSet QUESTION_LIST 객체를 생성하기 위한 Statement 객체
	private ResultSet QUESTION_LIST;		//ResultSet QUESTION_LIST 객체
	private java.sql.Statement stat_LIST;		//ResultSet LIST 객체를 생성하기 위한 Statement 객체
	private ResultSet LIST;		//ResultSet LIST 객체
	private java.sql.Statement stat_QUESTION1;		//ResultSet QUESTION1 객체를 생성하기 위한 Statement 객체
	private ResultSet QUESTION1;		//ResultSet QUESTION1 객체
	private java.sql.Statement stat_QUESTION2;		//ResultSet QUESTION2 객체를 생성하기 위한 Statement 객체
	private ResultSet QUESTION2;		//ResultSet QUESTION2 객체

	//-----SQL 변수 선언-----
	private String sql_GR_INFO;		//ResultSet GR_INFO 객체를 생성하기 위한 쿼리문 저장
	private String sql_GR_BASIC_INFO;		//ResultSet GR_BASIC_INFO 객체를 생성하기 위한 쿼리문 저장
	private String sql_GR_TYPE_INFO;		//ResultSet GR_TYPE_INFO 객체를 생성하기 위한 쿼리문 저장
	private String sql_CATEGORY;		//ResultSet CATEGORY 객체를 생성하기 위한 쿼리문 저장
	private String sql_tutor_list;		//ResultSet tutor_list 객체를 생성하기 위한 쿼리문 저장
	private String sql_QUESTION;		//ResultSet QUESTION 객체를 생성하기 위한 쿼리문 저장
	private String sql_GR_MALE;		//ResultSet GR_MALE 객체를 생성하기 위한 쿼리문 저장
	private String sql_GR_FEMALE;		//ResultSet GR_FEMALE 객체를 생성하기 위한 쿼리문 저장
	private String sql_QUEST;		//ResultSet QUEST 객체를 생성하기 위한 쿼리문 저장
	private String sql_ANS;		//ResultSet ANS 객체를 생성하기 위한 쿼리문 저장
	private String sql_QUESTION3;		//ResultSet QUESTION3 객체를 생성하기 위한 쿼리문 저장
	private String sql_QUESTION4;		//ResultSet QUESTION4 객체를 생성하기 위한 쿼리문 저장
	private String sql_QUESTION5_1;		//ResultSet QUESTION5_1 객체를 생성하기 위한 쿼리문 저장
	private String sql_QUESTION5_2;		//ResultSet QUESTION5_2 객체를 생성하기 위한 쿼리문 저장
	private String sql_QUESTION5_3;		//ResultSet QUESTION5_3 객체를 생성하기 위한 쿼리문 저장
	private String sql_QUESTION_JU;		//ResultSet QUESTION_JU 객체를 생성하기 위한 쿼리문 저장
	private String sql_grgubun_info;		//ResultSet grgubun_info 객체를 생성하기 위한 쿼리문 저장
	private String sql_GR_DETAIL_INFO;		//ResultSet GR_DETAIL_INFO 객체를 생성하기 위한 쿼리문 저장
	private String sql_qry_QUESTION_LIST;		//ResultSet qry_QUESTION_LIST 객체를 생성하기 위한 쿼리문 저장
	private String sql_QUESTION_LIST;		//ResultSet QUESTION_LIST 객체를 생성하기 위한 쿼리문 저장
	private String sql_LIST;		//ResultSet LIST 객체를 생성하기 위한 쿼리문 저장
	private String sql_QUESTION1;		//ResultSet QUESTION1 객체를 생성하기 위한 쿼리문 저장
	private String sql_QUESTION2;		//ResultSet QUESTION2 객체를 생성하기 위한 쿼리문 저장

	//-----쿼리 필드 변수 선언-----
	//ResultSet GR_INFO 객체에서 필드 값을 받는 쿼리 필드 변수
	private String GR_INFO_GRCODENM;
	private String GR_INFO_STARTED;
	private String GR_INFO_ENDDATE;

	//ResultSet GR_BASIC_INFO 객체에서 필드 값을 받는 쿼리 필드 변수
	private String GR_BASIC_INFO_GOAL;
	private String GR_BASIC_INFO_TARGET;
	private String GR_BASIC_INFO_SIGANGE;
	private String GR_BASIC_INFO_SIBUNYA;
	private String GR_BASIC_INFO_SISOGE;
	private String GR_BASIC_INFO_SICOMMON;
	private String GR_BASIC_INFO_SIJUNMUN;
	private String GR_BASIC_INFO_SIETC;

	//ResultSet GR_TYPE_INFO 객체에서 필드 값을 받는 쿼리 필드 변수
	private String GR_TYPE_INFO_GR_TYPE;

	//ResultSet CATEGORY 객체에서 필드 값을 받는 쿼리 필드 변수
	private String CATEGORY_CATEGORY;

	//ResultSet tutor_list 객체에서 필드 값을 받는 쿼리 필드 변수
	private double tutor_list_TLGUBUN;
	private String tutor_list_TLGUBUNNM;
	private double tutor_list_TOT_CNT;
	private double tutor_list_SBGUBUN01;
	private double tutor_list_SBGUBUN02;
	private double tutor_list_SBGUBUN03;

	//ResultSet QUESTION 객체에서 필드 값을 받는 쿼리 필드 변수
	private double QUESTION_QUESTION_NO;
	private String QUESTION_QUESTION;
	private String QUESTION_ENOUGH_RAT;
	private String QUESTION_REGULAR_RAT;

	//ResultSet GR_MALE 객체에서 필드 값을 받는 쿼리 필드 변수
	private double GR_MALE_CNT;

	//ResultSet GR_FEMALE 객체에서 필드 값을 받는 쿼리 필드 변수
	private double GR_FEMALE_CNT;

	//ResultSet QUEST 객체에서 필드 값을 받는 쿼리 필드 변수
	private double QUEST_NO;
	private String QUEST_REGDATE;
	private String QUEST_USERNO;
	private String QUEST_NAME;
	private double QUEST_DEPTH;
	private double QUEST_REF_NO;
	private String QUEST_TITLE;
	private String QUEST_CATEGORY;
	private String QUEST_CONTENT;

	//ResultSet ANS 객체에서 필드 값을 받는 쿼리 필드 변수
	private String ANS_CONTENT;

	//ResultSet QUESTION3 객체에서 필드 값을 받는 쿼리 필드 변수
	private double QUESTION3_QUESTION_NO;
	private String QUESTION3_QUESTION;
	private String QUESTION3_ENOUGH_RAT;
	private String QUESTION3_REGULAR_RAT;

	//ResultSet QUESTION4 객체에서 필드 값을 받는 쿼리 필드 변수
	private double QUESTION4_QUESTION_NO;
	private String QUESTION4_QUESTION;
	private String QUESTION4_ENOUGH_RAT;
	private String QUESTION4_REGULAR_RAT;

	//ResultSet QUESTION5_1 객체에서 필드 값을 받는 쿼리 필드 변수
	private double QUESTION5_1_QUESTION_NO;
	private String QUESTION5_1_QUESTION;
	private String QUESTION5_1_ENOUGH_RAT;
	private String QUESTION5_1_REGULAR_RAT;

	//ResultSet QUESTION5_2 객체에서 필드 값을 받는 쿼리 필드 변수
	private String QUESTION5_2_NAME;
	private String QUESTION5_2_SUBJNM;
	private String QUESTION5_2_TUTOR_RAT;

	//ResultSet QUESTION5_3 객체에서 필드 값을 받는 쿼리 필드 변수
	private String QUESTION5_3_NAME;
	private String QUESTION5_3_SUBJNM;
	private String QUESTION5_3_TUTOR_RAT;

	//ResultSet QUESTION_JU 객체에서 필드 값을 받는 쿼리 필드 변수
	private String QUESTION_JU_QUESTION;

	//ResultSet grgubun_info 객체에서 필드 값을 받는 쿼리 필드 변수
	private double grgubun_info_SBGUBUN01;
	private double grgubun_info_SBGUBUNPE01;
	private double grgubun_info_SBGUBUN02;
	private double grgubun_info_SBGUBUNPE02;
	private double grgubun_info_SBGUBUN02_1;
	private double grgubun_info_SBGUBUNPE02_1;
	private double grgubun_info_SBGUBUN02_2;
	private double grgubun_info_SBGUBUNPE02_2;
	private double grgubun_info_SBGUBUN02_3;
	private double grgubun_info_SBGUBUNPE02_3;
	private double grgubun_info_SBGUBUN03;
	private double grgubun_info_SBGUBUNPE03;

	//ResultSet GR_DETAIL_INFO 객체에서 필드 값을 받는 쿼리 필드 변수
	private String GR_DETAIL_INFO_PERIOD;
	private String GR_DETAIL_INFO_CLASSROOM;
	private String GR_DETAIL_INFO_GRSEQMAN_NAME;

	//ResultSet qry_QUESTION_LIST 객체에서 필드 값을 받는 쿼리 필드 변수
	private double qry_QUESTION_LIST_QUESTION_NO;
	private double qry_QUESTION_LIST_TOTAL_CNT;
	private String qry_QUESTION_LIST_QUESTION;
	private String qry_QUESTION_LIST_QUESTION_GUBUN;
	private double qry_QUESTION_LIST_ANSCNT1_RAT;
	private double qry_QUESTION_LIST_ANSCNT2_RAT;
	private double qry_QUESTION_LIST_ANSCNT3_RAT;
	private double qry_QUESTION_LIST_RAT;

	//ResultSet QUESTION_LIST 객체에서 필드 값을 받는 쿼리 필드 변수
	private double QUESTION_LIST_QUESTION_NO;
	private double QUESTION_LIST_TOTAL_CNT;
	private String QUESTION_LIST_QUESTION;
	private String QUESTION_LIST_QUESTION_GUBUN;
	private String QUESTION_LIST_ANSCNT1;
	private String QUESTION_LIST_ANSCNT2;
	private String QUESTION_LIST_ANSCNT3;
	private String QUESTION_LIST_ANSCNT4;
	private String QUESTION_LIST_ANSCNT5;
	private double QUESTION_LIST_ANSCNT11;
	private double QUESTION_LIST_ANSCNT22;
	private double QUESTION_LIST_ANSCNT33;
	private String QUESTION_LIST_ANSCNT1_RAT;
	private String QUESTION_LIST_ANSCNT2_RAT;
	private String QUESTION_LIST_ANSCNT3_RAT;
	private String QUESTION_LIST_RAT;

	//ResultSet LIST 객체에서 필드 값을 받는 쿼리 필드 변수
	private String LIST_NAME;
	private String LIST_SUBJNM;
	private double LIST_SUBJ_ANS1;
	private double LIST_SUBJ_ANS2;
	private double LIST_SUBJ_ANS3;
	private double LIST_SUBJ_ANS4;
	private double LIST_SUBJ_ANS5;
	private double LIST_SUBJ_ANS1_RAT;
	private double LIST_SUBJ_ANS2_RAT;
	private double LIST_SUBJ_ANS3_RAT;
	private double LIST_SUBJ_ANS4_RAT;
	private double LIST_SUBJ_ANS5_RAT;
	private double LIST_SUBJ_ANS11;
	private double LIST_SUBJ_ANS22;
	private double LIST_SUBJ_ANS33;
	private String LIST_SUBJ_ANS11_RAT;
	private String LIST_SUBJ_ANS22_RAT;
	private String LIST_SUBJ_ANS33_RAT;
	private String LIST_SUBJ_ANS_AVG;
	private double LIST_STIME_ANS1;
	private double LIST_STIME_ANS2;
	private double LIST_STIME_ANS3;
	private double LIST_STIME_ANS4;
	private double LIST_STIME_ANS5;
	private double LIST_STIME_ANS1_RAT;
	private double LIST_STIME_ANS2_RAT;
	private double LIST_STIME_ANS3_RAT;
	private double LIST_STIME_ANS4_RAT;
	private double LIST_STIME_ANS5_RAT;
	private double LIST_STIME_ANS11;
	private double LIST_STIME_ANS22;
	private double LIST_STIME_ANS33;
	private String LIST_STIME_ANS11_RAT;
	private String LIST_STIME_ANS22_RAT;
	private String LIST_STIME_ANS33_RAT;
	private String LIST_STIME_ANS_AVG;
	private double LIST_TUTOR_ANS1;
	private double LIST_TUTOR_ANS2;
	private double LIST_TUTOR_ANS3;
	private double LIST_TUTOR_ANS4;
	private double LIST_TUTOR_ANS5;
	private double LIST_TUTOR_ANS1_RAT;
	private double LIST_TUTOR_ANS2_RAT;
	private double LIST_TUTOR_ANS3_RAT;
	private double LIST_TUTOR_ANS4_RAT;
	private double LIST_TUTOR_ANS5_RAT;
	private double LIST_TUTOR_ANS11;
	private double LIST_TUTOR_ANS22;
	private double LIST_TUTOR_ANS33;
	private String LIST_TUTOR_ANS11_RAT;
	private String LIST_TUTOR_ANS22_RAT;
	private String LIST_TUTOR_ANS33_RAT;
	private double LIST_SUBJ_ANS_TOTAL;
	private double LIST_STIME_ANS_TOTAL;
	private double LIST_TUTOR_ANS_TOTAL;
	private String LIST_TUTOR_ANS_AVG;
	private String LIST_TOTAL_AVG;

	//ResultSet QUESTION1 객체에서 필드 값을 받는 쿼리 필드 변수
	private double QUESTION1_QUESTION_NO;
	private String QUESTION1_QUESTION;
	private String QUESTION1_ENOUGH_RAT;
	private String QUESTION1_REGULAR_RAT;

	//ResultSet QUESTION2 객체에서 필드 값을 받는 쿼리 필드 변수
	private double QUESTION2_QUESTION_NO;
	private String QUESTION2_QUESTION;
	private double QUESTION2_SUB_CNT1;
	private String QUESTION2_SUB_CNT1_RAT;
	private String QUESTION2_SUB_CNT1_ANS;
	private double QUESTION2_SUB_CNT2;
	private String QUESTION2_SUB_CNT2_RAT;
	private String QUESTION2_SUB_CNT2_ANS;
	private double QUESTION2_SUB_CNT3;
	private String QUESTION2_SUB_CNT3_RAT;
	private String QUESTION2_SUB_CNT3_ANS;
	private double QUESTION2_SUB_CNT4;
	private String QUESTION2_SUB_CNT4_RAT;
	private String QUESTION2_SUB_CNT4_ANS;
	private double QUESTION2_SUB_CNT5;
	private String QUESTION2_SUB_CNT5_RAT;
	private String QUESTION2_SUB_CNT5_ANS;
	private String QUESTION2_ENOUGH_RAT;
	private String QUESTION2_REGULAR_RAT;

	//파라미터 변수 선언
	String p_grcode_Param;
	String p_grseq_Param;
	String p_set_no_Param;
	String p_title_no_Param;

	//-----사용자 정의 변수 및 함수-----
	private String removeHtmlTag(String srcText) {
		//대체(치환)하고 하는 문자열이 더 있는 경우 아래의 배열에 쌍으로 추가
		String[] relSrc = {"&NBSP;", "&lt;", "&gt;", "&amp;", "&quot;"};
		String[] relTgt = {" ", "<", ">", "&", "\"" };

		int pointer = 0, st = 0, ed = 0;
		int size = srcText.length();
		StringBuffer buf = new StringBuffer(size);

		while (st != -1) {
			st = srcText.indexOf("<", st);
			if (st != -1) {
				ed = srcText.indexOf(">", st+1);
				if (ed == -1) {
					break;
				} 
				buf.append(srcText.substring(pointer, st));
				pointer = st = ed + 1;
			}
		}
		if (pointer < size) {
			buf.append(srcText.substring(pointer));
		}

		srcText = buf.toString();
		// 특수문자열의 대체가 불필요한 경우 아래의 for 문을 주석처리 가능
		for (int i = 0; i < relSrc.length; i++) {
			pointer = st = 0;
			if (srcText.indexOf(relSrc[i], pointer) == -1) continue;

			buf.setLength(0);
			size = srcText.length();
			int len = relSrc[i].length();

			while ((pointer = srcText.indexOf(relSrc[i], pointer)) != -1) {
				buf.append(srcText.substring(st, pointer));
				buf.append(relTgt[i]);
				pointer += len;
				st = pointer;
			}
			if (st < size) {
				buf.append(srcText.substring(st));
			}
			srcText = buf.toString();
		}

		return srcText;
	}


	//ReportHandler 생성자 함수
	ReportHandler(HttpServletRequest request,HttpServletResponse response,Object[] userObj){
		this.request=request;
		this.response=response;
		this.userObj=userObj;
	}

	//ReportHandler 서비스 함수
	void service(JspWriter out) throws Exception{
		try{    //try 구문
			this.out=out;
			nMaxPage=0;    //nMaxPage 초기화

			//스크립트 헤더 함수 호출
			getScriptHeader("A4", "2100x2970", "9", "VERTICAL");

			//파라미터 설정 함수 호출
			setParam();

			//고정 데이터 초기화 함수 호출
			initConstVarient();

			//Connection 및 Statement 객체 생성 함수 호출
			createConnAndStateObject();

			//쿼리문 초기화 함수 호출
			initSQLConst();

			//쉬트 함수 호출
			//SHEET=Sheet1   FRAME=0 함수 호출
			executeSheet10();
			//SHEET=Sheet2   FRAME=0 함수 호출
			executeSheet20();
			//SHEET=Sheet3   FRAME=0 함수 호출
			executeSheet30();
			//SHEET=Sheet4   FRAME=0 함수 호출
			executeSheet40();

			//---------------스크립트 종료---------------
			out.print("--SCRIPT_END--\r");
		}catch(Exception e){    //catch 구문
			out.print(e);
			out.print("AI!REPORT JSP ERROR!!!!\r");
		}finally{    //finally 구문
			try{    //finally try 구문
				//DataSet Close
				if(QUESTION2!=null) QUESTION2.close();
				if(stat_QUESTION2!=null) stat_QUESTION2.close();
				if(QUESTION1!=null) QUESTION1.close();
				if(stat_QUESTION1!=null) stat_QUESTION1.close();
				if(LIST!=null) LIST.close();
				if(stat_LIST!=null) stat_LIST.close();
				if(QUESTION_LIST!=null) QUESTION_LIST.close();
				if(stat_QUESTION_LIST!=null) stat_QUESTION_LIST.close();
				if(qry_QUESTION_LIST!=null) qry_QUESTION_LIST.close();
				if(stat_qry_QUESTION_LIST!=null) stat_qry_QUESTION_LIST.close();
				if(GR_DETAIL_INFO!=null) GR_DETAIL_INFO.close();
				if(stat_GR_DETAIL_INFO!=null) stat_GR_DETAIL_INFO.close();
				if(grgubun_info!=null) grgubun_info.close();
				if(stat_grgubun_info!=null) stat_grgubun_info.close();
				if(QUESTION_JU!=null) QUESTION_JU.close();
				if(stat_QUESTION_JU!=null) stat_QUESTION_JU.close();
				if(QUESTION5_3!=null) QUESTION5_3.close();
				if(stat_QUESTION5_3!=null) stat_QUESTION5_3.close();
				if(QUESTION5_2!=null) QUESTION5_2.close();
				if(stat_QUESTION5_2!=null) stat_QUESTION5_2.close();
				if(QUESTION5_1!=null) QUESTION5_1.close();
				if(stat_QUESTION5_1!=null) stat_QUESTION5_1.close();
				if(QUESTION4!=null) QUESTION4.close();
				if(stat_QUESTION4!=null) stat_QUESTION4.close();
				if(QUESTION3!=null) QUESTION3.close();
				if(stat_QUESTION3!=null) stat_QUESTION3.close();
				if(stat_ANS!=null) stat_ANS.close();
				if(stat_QUEST!=null) stat_QUEST.close();
				if(GR_FEMALE!=null) GR_FEMALE.close();
				if(stat_GR_FEMALE!=null) stat_GR_FEMALE.close();
				if(GR_MALE!=null) GR_MALE.close();
				if(stat_GR_MALE!=null) stat_GR_MALE.close();
				if(QUESTION!=null) QUESTION.close();
				if(stat_QUESTION!=null) stat_QUESTION.close();
				if(tutor_list!=null) tutor_list.close();
				if(stat_tutor_list!=null) stat_tutor_list.close();
				if(CATEGORY!=null) CATEGORY.close();
				if(stat_CATEGORY!=null) stat_CATEGORY.close();
				if(GR_TYPE_INFO!=null) GR_TYPE_INFO.close();
				if(stat_GR_TYPE_INFO!=null) stat_GR_TYPE_INFO.close();
				if(GR_BASIC_INFO!=null) GR_BASIC_INFO.close();
				if(stat_GR_BASIC_INFO!=null) stat_GR_BASIC_INFO.close();
				if(GR_INFO!=null) GR_INFO.close();
				if(stat_GR_INFO!=null) stat_GR_INFO.close();
				if(conn_DUNET!=null) conn_DUNET.close();
			}catch(Exception e){    //finally catch 구문
			}    //end finally try
		}    //end try
	}

	//-----쉬트 함수-----
	//-----SHEET=Sheet1   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet10( ) throws Exception{
		//쉬트 초기화 함수 호출
		initSheetVariant(57, 69, 534, 784, true);

		//시작 페이지 번호 출력
		out.print("-- " + nPageNum + " PAGE --\r");

		//밴드 함수 호출
		getScriptFrompage1(true, true);    //Void 밴드 호출
		getScriptFromtutor_list(true);    //반복 밴드 호출
		getScriptFromVoidBand102(true, true);    //Void 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기
	}

	//-----SHEET=Sheet2   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet20( ) throws Exception{
		//쉬트 초기화 함수 호출
		initSheetVariant(57, 69, 534, 784, true);

		//시작 페이지 번호 출력
		out.print("-- " + nPageNum + " PAGE --\r");

		//밴드 함수 호출
		getScriptFrompage_2(true, true);    //Void 밴드 호출
		getScriptFromVoidBand206(true, true);    //Void 밴드 호출
		getScriptFromquestion_list(true);    //반복 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기
	}

	//-----SHEET=Sheet3   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet30( ) throws Exception{
		//쉬트 초기화 함수 호출
		initSheetVariant(57, 69, 534, 784, true);

		//시작 페이지 번호 출력
		out.print("-- " + nPageNum + " PAGE --\r");

		//밴드 함수 호출
		getScriptFrompage_3(true, true);    //Void 밴드 호출
		getScriptFromVoidBand307(true, true);    //Void 밴드 호출
		getScriptFromlist(true);    //반복 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기
	}

	//-----SHEET=Sheet4   FRAME=Frame0 Start
	//-----폼 형식 : 상대 양식
	private void executeSheet40( ) throws Exception{
		//쉬트 초기화 함수 호출
		initSheetVariant(57, 69, 534, 784, true);

		//시작 페이지 번호 출력
		out.print("-- " + nPageNum + " PAGE --\r");

		//밴드 함수 호출
		getScriptFrompage5(true, true);    //Void 밴드 호출

		//페이지 및 좌표 설정
		nMaxPage=(int)MAX((long)nMaxPage, (long)nPageNum);    //생성된 최대 페이지 번호 구하기
	}

	//-----밴드 함수-----
	//----page1 VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : page1
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFrompage1(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=616;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//DataSet 객체 생성
			//ResultSet GR_INFO 객체의 생성
			if(GR_INFO==null){
				GR_INFO = stat_GR_INFO.executeQuery(sql_GR_INFO);
			}else{
				GR_INFO.beforeFirst();
			}
			//ResultSet GR_MALE 객체의 생성
			if(GR_MALE==null){
				GR_MALE = stat_GR_MALE.executeQuery(sql_GR_MALE);
			}else{
				GR_MALE.beforeFirst();
			}
			//ResultSet GR_FEMALE 객체의 생성
			if(GR_FEMALE==null){
				GR_FEMALE = stat_GR_FEMALE.executeQuery(sql_GR_FEMALE);
			}else{
				GR_FEMALE.beforeFirst();
			}
			//ResultSet GR_DETAIL_INFO 객체의 생성
			if(GR_DETAIL_INFO==null){
				GR_DETAIL_INFO = stat_GR_DETAIL_INFO.executeQuery(sql_GR_DETAIL_INFO);
			}else{
				GR_DETAIL_INFO.beforeFirst();
			}
			//ResultSet GR_TYPE_INFO 객체의 생성
			if(GR_TYPE_INFO==null){
				GR_TYPE_INFO = stat_GR_TYPE_INFO.executeQuery(sql_GR_TYPE_INFO);
			}else{
				GR_TYPE_INFO.beforeFirst();
			}
			//ResultSet grgubun_info 객체의 생성
			if(grgubun_info==null){
				grgubun_info = stat_grgubun_info.executeQuery(sql_grgubun_info);
			}else{
				grgubun_info.beforeFirst();
			}

			//데이터 fetch
			if(GR_INFO.next()){
				setFieldVariableFromGR_INFO();	//ResultSet GR_INFO에서 필드 값 설정
			}else{
				setFieldInitFromGR_INFO();	//ResultSet GR_INFO의 필드 값 초기화
			}
			if(GR_MALE.next()){
				setFieldVariableFromGR_MALE();	//ResultSet GR_MALE에서 필드 값 설정
			}else{
				setFieldInitFromGR_MALE();	//ResultSet GR_MALE의 필드 값 초기화
			}
			if(GR_FEMALE.next()){
				setFieldVariableFromGR_FEMALE();	//ResultSet GR_FEMALE에서 필드 값 설정
			}else{
				setFieldInitFromGR_FEMALE();	//ResultSet GR_FEMALE의 필드 값 초기화
			}
			if(GR_DETAIL_INFO.next()){
				setFieldVariableFromGR_DETAIL_INFO();	//ResultSet GR_DETAIL_INFO에서 필드 값 설정
			}else{
				setFieldInitFromGR_DETAIL_INFO();	//ResultSet GR_DETAIL_INFO의 필드 값 초기화
			}
			if(GR_TYPE_INFO.next()){
				setFieldVariableFromGR_TYPE_INFO();	//ResultSet GR_TYPE_INFO에서 필드 값 설정
			}else{
				setFieldInitFromGR_TYPE_INFO();	//ResultSet GR_TYPE_INFO의 필드 값 초기화
			}
			if(grgubun_info.next()){
				setFieldVariableFromgrgubun_info();	//ResultSet grgubun_info에서 필드 값 설정
			}else{
				setFieldInitFromgrgubun_info();	//ResultSet grgubun_info의 필드 값 초기화
			}

			//데이터 변수 초기화
			sheet10_A1="";
			sheet10_A4="";
			sheet10_L8=0;
			sheet10_M8=0;
			sheet10_D10="";
			sheet10_D11="";
			sheet10_L11=0L;
			sheet10_D12="";
			sheet10_D13="";
			sheet10_D14="";
			sheet10_L17=0L;
			sheet10_L18=0;
			sheet10_C20=0L;
			sheet10_E20=0;
			sheet10_F20=0;
			sheet10_G20=0;
			sheet10_H20=0;
			sheet10_I20=0;
			sheet10_K20=0;
			sheet10_E21=0;
			sheet10_F21=0;
			sheet10_G21=0;
			sheet10_H21=0;
			sheet10_I21=0;
			sheet10_K21=0;

			//데이터 변수 할당
			sheet10_A1=GR_INFO_GRCODENM;
			sheet10_A4= "  " + GR_INFO_GRCODENM + "의 교육운영 전반에 대한 설문조사를";
			sheet10_L8=GR_MALE_CNT;
			sheet10_M8=GR_FEMALE_CNT;
			sheet10_D10=GR_DETAIL_INFO_PERIOD;
			sheet10_D11=GR_DETAIL_INFO_CLASSROOM;
			sheet10_L11=(long)GR_MALE_CNT + (long)GR_FEMALE_CNT;
			sheet10_D12= sheet10_L11 + "명 (男 "+ (long)GR_MALE_CNT + "명, 女 " + (long)GR_FEMALE_CNT+  "명)";
			sheet10_D13=GR_TYPE_INFO_GR_TYPE;
			sheet10_D14=GR_DETAIL_INFO_GRSEQMAN_NAME;
			sheet10_L17= (long)grgubun_info_SBGUBUN01+(long)grgubun_info_SBGUBUN02+(long)grgubun_info_SBGUBUN03;
			sheet10_L18= (double)grgubun_info_SBGUBUNPE01+(double)grgubun_info_SBGUBUNPE02+(double)grgubun_info_SBGUBUNPE03;
			sheet10_C20=sheet10_L17;
			sheet10_E20=grgubun_info_SBGUBUN01;
			sheet10_F20=grgubun_info_SBGUBUN02;
			sheet10_G20=grgubun_info_SBGUBUN02_1;
			sheet10_H20=grgubun_info_SBGUBUN02_2;
			sheet10_I20=grgubun_info_SBGUBUN02_3;
			sheet10_K20=grgubun_info_SBGUBUN03;
			sheet10_E21=grgubun_info_SBGUBUNPE01;
			sheet10_F21=grgubun_info_SBGUBUNPE02;
			sheet10_G21=grgubun_info_SBGUBUNPE02_1;
			sheet10_H21=grgubun_info_SBGUBUNPE02_2;
			sheet10_I21=grgubun_info_SBGUBUNPE02_3;
			sheet10_K21=grgubun_info_SBGUBUNPE03;
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(10);
			}

			//스크립트 출력 함수 호출
			writeScriptpage1();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//----con ConditionBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : con
	//----밴드 종류 : 조건 밴드
	//----bIsFrist : 부모 밴드 함수에서 최초로 호출될 때 true
	//----bIsLast : 부모 밴드 함수에서 마지막으로 호출될 때 true
	//----bIsTrue : 부모 밴드 함수에서 조건 밴드 출력 조건 플래그 값
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromcon(boolean bIsFirst, boolean bIsLast, boolean bIsTrue, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;	//밴드 출력 높이
		int nSaveYPos=0;

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
			//데이터 변수 초기화
			sheet10_D26=0L;
			sheet10_F26=0;
			sheet10_H26=0;
			sheet10_J26=0;

			//출력 좌표 및 페이지 설정
			if(bIsPrint){   //현재 Y좌표와 페이지 번호를 저장
				repositionPageOvercon();
			}
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsTrue){   //조건 밴드 출력 플래그 값이 true인 경우
			//조건 밴드의 참 값
			if(bIsPrint){   //WriteBandObj() 함수 대체 코드
				nSaveYPos=nYCurPos;   //현재 Y좌표 임시변수에 저장
				nYCurPos=conYPos;   //조건 밴드 출력 Y좌표 설정
				out.print("-- " + conPage + " PAGE --\r");
				writeScriptcon();   //스크립트문 출력
				out.print("-- " + nPageNum + " PAGE --\r");
				nYCurPos=nSaveYPos;
				sheet10_D26=0L;
				sheet10_F26=0;
				sheet10_H26=0;
				sheet10_J26=0;
			}
		}else{   //조건 밴드 출력 플래그 값이 false인 경우
		}   //end if(bIsTrue)

		if(!bIsLast){   //bIsLast가 false인 경우 - 조건 밴드의 수식 계산
			//데이터 변수 할당
			sheet10_D26=(long)SUM(sheet10_D27, sheet10_D26);
			sheet10_F26=SUM(sheet10_F27, sheet10_F26);
			sheet10_H26=SUM(sheet10_H27, sheet10_H26);
			sheet10_J26=SUM(sheet10_J27, sheet10_J26);
		}   //end if(!bIsLast)
	}

	//----con 조건 밴드 출력 영역 설정 혹은 페이지 넘기기 함수----
	private void repositionPageOvercon( ) throws Exception{
		//스크립트 출력 영역 검사
		if(isPageSkip(nYCurPos+20)){
			pageSkip(10);
			bIsBeforePageSkip=true;
		}

		//출력 좌표 및 페이지 설정
		conYPos=nYCurPos;
		conPage=nPageNum;
		nYCurPos=nYCurPos+20;
	}

	//----line ConditionBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : line
	//----밴드 종류 : 조건 밴드
	//----bIsFrist : 부모 밴드 함수에서 최초로 호출될 때 true
	//----bIsLast : 부모 밴드 함수에서 마지막으로 호출될 때 true
	//----bIsTrue : 부모 밴드 함수에서 조건 밴드 출력 조건 플래그 값
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromline(boolean bIsFirst, boolean bIsLast, boolean bIsTrue, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;	//밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsTrue){   //조건 밴드 출력 플래그 값이 true인 경우
			//조건 밴드의 참 값
			if(bIsPrint){   //WriteBandObj() 함수 대체 코드
				if(isPageSkip(nYCurPos+nBandHeight)){
					pageSkip(10);
				}
				writeScriptline();	//스크립트문 출력
				nYCurPos=nYCurPos+nBandHeight;
			}
		}else{   //조건 밴드 출력 플래그 값이 false인 경우
		}   //end if(bIsTrue)

		if(!bIsLast){   //bIsLast가 false인 경우 - 조건 밴드의 수식 계산
		}   //end if(!bIsLast)
	}

	//-----tutor_list RepeatBand Start-----
	//-----소속 쉬트 : SHEET=Sheet1   FRAME=Frame0
	//-----밴드 이름 : tutor_list
	//-----밴드 종류 : 반복 밴드
	//-----bIsPrint : 감추기 속성 설정 여부 true면 출력, false면 스크립트를 생성하지 않음
	private void getScriptFromtutor_list(boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;    //밴드 출력 높이
		boolean bIsFirst=true;
		boolean bIsTrue_con=false;   //con 조건 밴드 플래그 선언
		boolean bIsTrue_line=false;   //line 조건 밴드 플래그 선언

		//데이터 변수 초기화
		sheet10_A27="";
		sheet10_D27=0L;
		sheet10_F27=0;
		sheet10_H27=0;
		sheet10_J27=0;

		//DataSet 객체 생성
		//ResultSet tutor_list 객체의 생성
		if(tutor_list==null){
			tutor_list = stat_tutor_list.executeQuery(sql_tutor_list);
		}else{
			tutor_list.beforeFirst();
		}

		while(tutor_list.next()){   //자동으로 생성되는 반복 밴드의 루프문
			//데이터 fetch
			setFieldVariableFromtutor_list();	//RecordSet tutor_list에서 필드 값 설정

			if(bIsFirst){   //밴드 호출 후 루프 내에서 한번 만 실행되는 코드
				//반복 헤더 호출 및 조건 플래그 초기화
				bIsTrue_con=false;    //con 조건 밴드 플래그 초기화
				bIsTrue_line=false;    //line 조건 밴드 플래그 초기화
			}   //end if(bIsFirst)

			//데이터 변수 할당
			sheet10_A27=tutor_list_TLGUBUNNM;
			sheet10_D27=(long)tutor_list_TOT_CNT;
			sheet10_F27=tutor_list_SBGUBUN01;
			sheet10_H27=tutor_list_SBGUBUN02;
			sheet10_J27=tutor_list_SBGUBUN03;

			//루프 내부 조건밴드 및 스타일 함수 호출
			getScriptFromcon(bIsFirst, false, bIsTrue_con, true);   //con 조건 밴드 호출
			getScriptFromline(bIsFirst, false, bIsTrue_line, true);   //line 조건 밴드 호출
			if(bIsTrue_con){    //con 조건 밴드 출력 후 다음 출력 좌표를 구하거나 페이지 넘기기
				repositionPageOvercon();
			}

			//AI 스크립트 출력
			if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
				if(isPageSkip(nYCurPos+nBandHeight)){   //스크립트 출력 영역 검사
					//페이지 스킵 함수 호출
					pageSkip(10);
				}   //end if(page skip test)

				//스크립트 출력 함수 호출
				writeScripttutor_list();

				//다음 출력 좌표 설정
				nYCurPos=nYCurPos+nBandHeight;
			}   //end if(bIsPrint)

			//bIsFirst 및 출력 라인 설정
			bIsFirst=false;
		}   //while end

		//루프 외부 조건밴드 및 스타일 함수 호출
		getScriptFromcon(bIsFirst, true, true, true);   //con 조건 밴드 호출
		getScriptFromline(bIsFirst, true, true, true);   //line 조건 밴드 호출
	}

	//----VoidBand102 VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet1    FRAME=Frame0
	//----밴드 이름 : VoidBand102
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFromVoidBand102(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=20;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 함수 호출
			//Empty Row만으로 구성되어 출력 위치를 조정하기 위한 VoidBand 함수 호출
			voidBandNoneData(nBandHeight, 10);
		}   //end if(bIsPrint)
	}

	//----page_2 VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet2    FRAME=Frame0
	//----밴드 이름 : page_2
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFrompage_2(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=31;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(20);
			}

			//스크립트 출력 함수 호출
			writeScriptpage_2();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//----VoidBand206 VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet2    FRAME=Frame0
	//----밴드 이름 : VoidBand206
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFromVoidBand206(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=27;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 함수 호출
			//Empty Row만으로 구성되어 출력 위치를 조정하기 위한 VoidBand 함수 호출
			voidBandNoneData(nBandHeight, 20);
		}   //end if(bIsPrint)
	}

	//----question_list_header RepeatHeader Start----
	//----소속 쉬트 : SHEET=Sheet2    FRAME=Frame0
	//----밴드 이름 : question_list_header
	//----밴드 종류 : 반복 헤더
	//----bIsFrist : 반복 밴드 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromquestion_list_header(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=40;	//밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(20);
			}

			//스크립트 출력 함수 호출
			writeScriptquestion_list_header();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----question_list RepeatBand Start-----
	//-----소속 쉬트 : SHEET=Sheet2   FRAME=Frame0
	//-----밴드 이름 : question_list
	//-----밴드 종류 : 반복 밴드
	//-----bIsPrint : 감추기 속성 설정 여부 true면 출력, false면 스크립트를 생성하지 않음
	private void getScriptFromquestion_list(boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=40;    //밴드 출력 높이
		boolean bIsFirst=true;
		//폰트명 : 바탕
		//폰트 사이즈 : 10
		//각 문자별 폭을 할당할 배열 선언
		int[] charWidth = {3,3,4,6,6,9,8,3,4,4,5,8,3,6,3,4,6,6,6,6,6,6,6,6,6,6,3,3,6,6,6,5,10,7,7,7,7,7,6,7,8,3,4,7,6,9,8,7,7,7,7,6,8,8,8,9,7,7,6,5,10,5,5,5,6,5,6,5,6,6,4,6,6,3,3,6,3,8,6,6,6,6,4,5,4,6,6,8,6,6,5,5,6,5,8,10};

		//데이터 변수 초기화
		sheet20_A5=0;
		sheet20_B5="";
		sheet20_C5=0;
		sheet20_D5=0L;
		sheet20_E5=0;
		sheet20_F5="";
		sheet20_C6="";
		sheet20_D6="";
		sheet20_E6="";

		//DataSet 객체 생성
		//ResultSet QUESTION_LIST 객체의 생성
		if(QUESTION_LIST==null){
			QUESTION_LIST = stat_QUESTION_LIST.executeQuery(sql_QUESTION_LIST);
		}else{
			QUESTION_LIST.beforeFirst();
		}

		while(QUESTION_LIST.next()){   //자동으로 생성되는 반복 밴드의 루프문
			//데이터 fetch
			setFieldVariableFromQUESTION_LIST();	//RecordSet QUESTION_LIST에서 필드 값 설정

			if(bIsFirst){   //밴드 호출 후 루프 내에서 한번 만 실행되는 코드
				//반복 헤더 호출 및 조건 플래그 초기화
				getScriptFromquestion_list_header(bIsFirst, true);	//반복 헤더 호출
			}   //end if(bIsFirst)

			//데이터 변수 할당
			sheet20_A5=QUESTION_LIST_QUESTION_NO;
			sheet20_B5=QUESTION_LIST_QUESTION;
			sheet20_C5=QUESTION_LIST_ANSCNT33;
			sheet20_D5=(long)QUESTION_LIST_ANSCNT22;
			sheet20_E5=QUESTION_LIST_ANSCNT11;
			sheet20_F5=QUESTION_LIST_RAT;
			sheet20_C6=QUESTION_LIST_ANSCNT3_RAT;
			sheet20_D6=QUESTION_LIST_ANSCNT2_RAT;
			sheet20_E6=QUESTION_LIST_ANSCNT1_RAT;

			//Auto Size Code
			int nHeightTmp;
			nAutoHeight_question_list[0]=0;
			nAutoHeight_question_list[1]=0;
			nHeightTmp=getPrintHeight(sheet20_B5, charWidth, 10, 266, 40, nAutoHeight_question_list[0]);
			nAutoHeight_question_list[0]=(int)MAX((long)nAutoHeight_question_list[0], (long)(nHeightTmp/2));
			nHeightTmp=nHeightTmp-nAutoHeight_question_list[0];
			nAutoHeight_question_list[1]=(int)MAX((long)nAutoHeight_question_list[1], (long)nHeightTmp);
			nAutoHeight_question_list[0]=nAutoHeight_question_list[0]+20;
			nAutoHeight_question_list[1]=nAutoHeight_question_list[0]+nAutoHeight_question_list[1]+20;
			nBandHeight=nAutoHeight_question_list[1];   //밴드 출력 높이 설정

			//AI 스크립트 출력
			if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
				if(isPageSkip(nYCurPos+nBandHeight)){   //스크립트 출력 영역 검사
					//페이지 스킵 함수 호출
					pageSkip(20);

					//반복 헤더 및 부모 반복단위 호출
					getScriptFromquestion_list_header(false, true);	//반복 헤더 호출
				}   //end if(page skip test)

				//스크립트 출력 함수 호출
				writeScriptquestion_list();

				//다음 출력 좌표 설정
				nYCurPos=nYCurPos+nBandHeight;
			}   //end if(bIsPrint)

			//bIsFirst 및 출력 라인 설정
			bIsFirst=false;
		}   //while end
	}

	//----page_3 VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet3    FRAME=Frame0
	//----밴드 이름 : page_3
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFrompage_3(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=31;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(30);
			}

			//스크립트 출력 함수 호출
			writeScriptpage_3();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//----VoidBand307 VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet3    FRAME=Frame0
	//----밴드 이름 : VoidBand307
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFromVoidBand307(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=27;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 함수 호출
			//Empty Row만으로 구성되어 출력 위치를 조정하기 위한 VoidBand 함수 호출
			voidBandNoneData(nBandHeight, 30);
		}   //end if(bIsPrint)
	}

	//----list_header RepeatHeader Start----
	//----소속 쉬트 : SHEET=Sheet3    FRAME=Frame0
	//----밴드 이름 : list_header
	//----밴드 종류 : 반복 헤더
	//----bIsFrist : 반복 밴드 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	private void getScriptFromlist_header(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=88;	//밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}   //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(30);
			}

			//스크립트 출력 함수 호출
			writeScriptlist_header();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----list RepeatBand Start-----
	//-----소속 쉬트 : SHEET=Sheet3   FRAME=Frame0
	//-----밴드 이름 : list
	//-----밴드 종류 : 반복 밴드
	//-----bIsPrint : 감추기 속성 설정 여부 true면 출력, false면 스크립트를 생성하지 않음
	private void getScriptFromlist(boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=40;    //밴드 출력 높이
		boolean bIsFirst=true;
		//폰트명 : 바탕
		//폰트 사이즈 : 10
		//각 문자별 폭을 할당할 배열 선언
		int[] charWidth = {3,3,4,6,6,9,8,3,4,4,5,8,3,6,3,4,6,6,6,6,6,6,6,6,6,6,3,3,6,6,6,5,10,7,7,7,7,7,6,7,8,3,4,7,6,9,8,7,7,7,7,6,8,8,8,9,7,7,6,5,10,5,5,5,6,5,6,5,6,6,4,6,6,3,3,6,3,8,6,6,6,6,4,5,4,6,6,8,6,6,5,5,6,5,8,10};

		//데이터 변수 초기화
		sheet30_A5="";
		sheet30_B5="";
		sheet30_C5=0L;
		sheet30_D5=0L;
		sheet30_E5=0L;
		sheet30_F5="";
		sheet30_G5=0L;
		sheet30_H5=0L;
		sheet30_I5=0L;
		sheet30_J5="";
		sheet30_K5=0L;
		sheet30_L5=0L;
		sheet30_M5=0L;
		sheet30_N5="";
		sheet30_O5="";
		sheet30_C6="";
		sheet30_D6="";
		sheet30_E6="";
		sheet30_G6="";
		sheet30_H6="";
		sheet30_I6="";
		sheet30_K6="";
		sheet30_L6="";
		sheet30_M6="";

		//DataSet 객체 생성
		//ResultSet LIST 객체의 생성
		if(LIST==null){
			LIST = stat_LIST.executeQuery(sql_LIST);
		}else{
			LIST.beforeFirst();
		}

		while(LIST.next()){   //자동으로 생성되는 반복 밴드의 루프문
			//데이터 fetch
			setFieldVariableFromLIST();	//RecordSet LIST에서 필드 값 설정

			if(bIsFirst){   //밴드 호출 후 루프 내에서 한번 만 실행되는 코드
				//반복 헤더 호출 및 조건 플래그 초기화
				getScriptFromlist_header(bIsFirst, true);	//반복 헤더 호출
			}   //end if(bIsFirst)

			//데이터 변수 할당
			sheet30_A5=LIST_SUBJNM;
			sheet30_B5=LIST_NAME;
			sheet30_C5=(long)LIST_SUBJ_ANS33;
			sheet30_D5=(long)LIST_SUBJ_ANS22;
			sheet30_E5=(long)LIST_SUBJ_ANS11;
			sheet30_F5=LIST_SUBJ_ANS_AVG;
			sheet30_G5=(long)LIST_STIME_ANS33;
			sheet30_H5=(long)LIST_STIME_ANS22;
			sheet30_I5=(long)LIST_STIME_ANS11;
			sheet30_J5=LIST_STIME_ANS_AVG;
			sheet30_K5=(long)LIST_TUTOR_ANS33;
			sheet30_L5=(long)LIST_TUTOR_ANS22;
			sheet30_M5=(long)LIST_TUTOR_ANS11;
			sheet30_N5=LIST_TUTOR_ANS_AVG;
			sheet30_O5=LIST_TOTAL_AVG;
			sheet30_C6=LIST_SUBJ_ANS33_RAT;
			sheet30_D6=LIST_SUBJ_ANS22_RAT;
			sheet30_E6=LIST_SUBJ_ANS11_RAT;
			sheet30_G6=LIST_STIME_ANS33_RAT;
			sheet30_H6=LIST_STIME_ANS22_RAT;
			sheet30_I6=LIST_STIME_ANS11_RAT;
			sheet30_K6=LIST_TUTOR_ANS33_RAT;
			sheet30_L6=LIST_TUTOR_ANS22_RAT;
			sheet30_M6=LIST_TUTOR_ANS11_RAT;

			//Auto Size Code
			int nHeightTmp;
			nAutoHeight_list[0]=0;
			nAutoHeight_list[1]=0;
			nHeightTmp=getPrintHeight(sheet30_A5, charWidth, 10, 69, 40, nAutoHeight_list[0]);
			nAutoHeight_list[0]=(int)MAX((long)nAutoHeight_list[0], (long)(nHeightTmp/2));
			nHeightTmp=nHeightTmp-nAutoHeight_list[0];
			nAutoHeight_list[1]=(int)MAX((long)nAutoHeight_list[1], (long)nHeightTmp);
			nAutoHeight_list[0]=nAutoHeight_list[0]+20;
			nAutoHeight_list[1]=nAutoHeight_list[0]+nAutoHeight_list[1]+20;
			nBandHeight=nAutoHeight_list[1];   //밴드 출력 높이 설정

			//AI 스크립트 출력
			if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
				if(isPageSkip(nYCurPos+nBandHeight)){   //스크립트 출력 영역 검사
					//페이지 스킵 함수 호출
					pageSkip(30);

					//반복 헤더 및 부모 반복단위 호출
					getScriptFromlist_header(false, true);	//반복 헤더 호출
				}   //end if(page skip test)

				//스크립트 출력 함수 호출
				writeScriptlist();

				//다음 출력 좌표 설정
				nYCurPos=nYCurPos+nBandHeight;
			}   //end if(bIsPrint)

			//bIsFirst 및 출력 라인 설정
			bIsFirst=false;
		}   //while end
	}

	//----page5 VoidBand Start----
	//----소속 쉬트 : SHEET=Sheet4    FRAME=Frame0
	//----밴드 이름 : page5
	//----밴드 종류 : Void 밴드
	//----bIsFrist : 부모 밴드 함수나 쉬트 함수에서 최초로 호출될 때 true, 그 이후 호출될 때 false
	//----bIsPrint : 감추기 속성 설정 여부. true면 출력, false면 AI 스크립트를 생성하지 않음.
	//----nRepeatCnt : 부모 반복 밴드 수행 횟수와 연동 옵션 설정시 void 밴드가 수행할 반복 횟수 전달
	private void getScriptFrompage5(boolean bIsFirst, boolean bIsPrint) throws Exception{
		//지역 변수 선언 및 초기화
		int nBandHeight=30;    //밴드 출력 높이

		if(bIsFirst){   //밴드 최초 호출 시에만 실행되는 코드
		}    //end if(bIsFirst)

		//AI 스크립트 출력
		if(bIsPrint){   //감추기 속성이 지정되지 않으면 bIsPrint는 true
			//스크립트 출력 영역 검사
			if(isPageSkip(nYCurPos+nBandHeight)){
				pageSkip(40);
			}

			//스크립트 출력 함수 호출
			writeScriptpage5();

			//다음 출력 좌표 설정
			nYCurPos=nYCurPos+nBandHeight;
		}   //end if(bIsPrint)
	}

	//-----스크립트 출력 함수-----
	//----page1 스크립트 문 출력 함수----
	private void writeScriptpage1( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",476,1,18,0/,바탕체,RGB[0,0,255],BOLD, , ,NONE,39,1)");
		out.println(sheet10_A1+"\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+39)+",476,1,24,0/,돋움,RGB[0,0,0],BOLD, , ,NONE,38,1)");
		out.println(sheet10_A2+"\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+77)+",476,10,0,RGB[0,0,255],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+77)+",476,10,0,RGB[0,0,255],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+77)+",476,10,0,RGB[0,0,255],3)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+87)+",476,20,0,RGB[0,0,255],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+87)+",476,20,0,RGB[0,0,255],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+87)+",476,0,13,0/,바탕체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A4+"\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+107)+",476,20,0,RGB[0,0,255],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+107)+",476,20,0,RGB[0,0,255],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+107)+",476,0,13,0/,바탕체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A5+"\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+127)+",476,20,0,RGB[0,0,255],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+127)+",476,20,0,RGB[0,0,255],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+127)+",476,0,13,0/,바탕체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A6+"\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+147)+",476,10,0,RGB[0,0,255],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+147)+",476,10,0,RGB[0,0,255],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+147)+",476,10,0,RGB[0,0,255],3)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+186)+",28,30,0,RGB[0,0,255],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+186)+",28,30,0,RGB[0,0,255],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+186)+",28,30,0,RGB[0,0,255],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+186)+",28,30,0,RGB[0,0,255],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+186)+",28,1,20,1/0/0,바탕체,RGB[0,0,255],BOLD, , ,NONE,30,1)");
		out.println(sheet10_A9+"\r");
		out.print("^PRINT("+(nXCurPos+28)+","+(nYCurPos+186)+",448,0,20,0/,돋움,RGB[0,0,255],BOLD, , ,NONE,30,1)");
		out.println(sheet10_B9+"\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+216)+",108,2,13,0/,바탕체,RGB[0,0,0], , , ,NONE,25,1)");
		out.println(sheet10_A10+"\r");
		out.print("^PRINT("+(nXCurPos+108)+","+(nYCurPos+216)+",368,0,13,0/,바탕체,RGB[0,0,0], , , ,NONE,25,1)");
		out.println(sheet10_D10+"\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+241)+",108,2,13,0/,바탕체,RGB[0,0,0], , , ,NONE,25,1)");
		out.println(sheet10_A11+"\r");
		out.print("^PRINT("+(nXCurPos+108)+","+(nYCurPos+241)+",368,0,13,0/,바탕체,RGB[0,0,0], , , ,NONE,25,1)");
		out.println(sheet10_D11+"\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+266)+",108,2,13,0/,바탕체,RGB[0,0,0], , , ,NONE,25,1)");
		out.println(sheet10_A12+"\r");
		out.print("^PRINT("+(nXCurPos+108)+","+(nYCurPos+266)+",368,0,13,0/,바탕체,RGB[0,0,0], , , ,NONE,25,1)");
		out.println(sheet10_D12+"\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+291)+",108,2,13,0/,바탕체,RGB[0,0,0], , , ,NONE,25,1)");
		out.println(sheet10_A13+"\r");
		out.print("^PRINT("+(nXCurPos+108)+","+(nYCurPos+291)+",368,0,13,0/,바탕체,RGB[0,0,0], , , ,NONE,25,1)");
		out.println(sheet10_D13+"\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+316)+",108,2,13,0/,바탕체,RGB[0,0,0], , , ,NONE,25,1)");
		out.println(sheet10_A14+"\r");
		out.print("^PRINT("+(nXCurPos+108)+","+(nYCurPos+316)+",368,0,13,0/,바탕체,RGB[0,0,0], , , ,NONE,25,1)");
		out.println(sheet10_D14+"\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+381)+",28,30,0,RGB[0,0,255],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+381)+",28,30,0,RGB[0,0,255],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+381)+",28,30,0,RGB[0,0,255],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+381)+",28,30,0,RGB[0,0,255],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+381)+",28,1,20,1/0/0,바탕체,RGB[0,0,255],BOLD, , ,NONE,30,1)");
		out.println(sheet10_A16+"\r");
		out.print("^PRINT("+(nXCurPos+28)+","+(nYCurPos+381)+",448,0,20,0/,돋움,RGB[0,0,255],BOLD, , ,NONE,30,1)");
		out.println(sheet10_B16+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+431)+",70,40,1,RGB[247,89,251],RGB[247,89,251],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+431)+",70,40,1,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+431)+",70,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+431)+",70,40,1,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+431)+",70,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+431)+",70,1,11,0/,바탕,RGB[0,0,0],BOLD, , ,NONE,40,1)");
		out.println(sheet10_A18+"\r");
		out.println("^CELLBG("+(nXCurPos+70)+","+(nYCurPos+431)+",57,40,1,RGB[247,89,251],RGB[247,89,251],0)\r");
		out.println("^CELLLINE("+(nXCurPos+70)+","+(nYCurPos+431)+",57,40,1,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+70)+","+(nYCurPos+431)+",57,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+70)+","+(nYCurPos+431)+",57,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+70)+","+(nYCurPos+431)+",57,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+70)+","+(nYCurPos+431)+",57,1,11,0/,바탕,RGB[0,0,0],BOLD, , ,NONE,40,1)");
		out.println(sheet10_C18+"\r");
		out.println("^CELLBG("+(nXCurPos+127)+","+(nYCurPos+431)+",62,40,1,RGB[247,89,251],RGB[247,89,251],0)\r");
		out.println("^CELLLINE("+(nXCurPos+127)+","+(nYCurPos+431)+",62,40,1,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+127)+","+(nYCurPos+431)+",62,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+127)+","+(nYCurPos+431)+",62,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+127)+","+(nYCurPos+431)+",62,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+127)+","+(nYCurPos+431)+",62,1,11,0/,바탕,RGB[0,0,0],BOLD, , ,NONE,40,1)");
		out.println(sheet10_E18+"\r");
		out.println("^CELLBG("+(nXCurPos+189)+","+(nYCurPos+431)+",224,20,1,RGB[247,89,251],RGB[247,89,251],0)\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos+431)+",224,20,1,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos+431)+",224,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos+431)+",224,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos+431)+",224,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+189)+","+(nYCurPos+431)+",224,1,11,0/,바탕,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_F18+"\r");
		out.println("^CELLBG("+(nXCurPos+413)+","+(nYCurPos+431)+",63,40,1,RGB[247,89,251],RGB[247,89,251],0)\r");
		out.println("^CELLLINE("+(nXCurPos+413)+","+(nYCurPos+431)+",63,40,1,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+413)+","+(nYCurPos+431)+",63,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+413)+","+(nYCurPos+431)+",63,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+413)+","+(nYCurPos+431)+",63,40,1,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+413)+","+(nYCurPos+431)+",63,1,11,0/,바탕,RGB[0,0,0],BOLD, , ,NONE,40,1)");
		out.println(sheet10_K18+"\r");
		out.println("^CELLBG("+(nXCurPos+189)+","+(nYCurPos+451)+",54,20,1,RGB[247,89,251],RGB[247,89,251],0)\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos+451)+",54,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos+451)+",54,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos+451)+",54,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos+451)+",54,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+189)+","+(nYCurPos+451)+",54,1,11,0/,바탕,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_F19+"\r");
		out.println("^CELLBG("+(nXCurPos+243)+","+(nYCurPos+451)+",54,20,1,RGB[247,89,251],RGB[247,89,251],0)\r");
		out.println("^CELLLINE("+(nXCurPos+243)+","+(nYCurPos+451)+",54,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+243)+","+(nYCurPos+451)+",54,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+243)+","+(nYCurPos+451)+",54,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+243)+","+(nYCurPos+451)+",54,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+243)+","+(nYCurPos+451)+",54,1,11,0/,바탕,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_G19+"\r");
		out.println("^CELLBG("+(nXCurPos+297)+","+(nYCurPos+451)+",54,20,1,RGB[247,89,251],RGB[247,89,251],0)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos+451)+",54,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos+451)+",54,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos+451)+",54,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos+451)+",54,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+297)+","+(nYCurPos+451)+",54,1,11,0/,바탕,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_H19+"\r");
		out.println("^CELLBG("+(nXCurPos+351)+","+(nYCurPos+451)+",62,20,1,RGB[247,89,251],RGB[247,89,251],0)\r");
		out.print("^PRINT("+(nXCurPos+351)+","+(nYCurPos+451)+",62,1,11,0/,바탕,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_I19+"\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+471)+",70,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+471)+",70,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+471)+",70,20,1,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+471)+",70,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+471)+",70,1,13,0/,바탕,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A20+"\r");
		out.println("^CELLLINE("+(nXCurPos+70)+","+(nYCurPos+471)+",57,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+70)+","+(nYCurPos+471)+",57,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+70)+","+(nYCurPos+471)+",57,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+70)+","+(nYCurPos+471)+",57,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+70)+","+(nYCurPos+471)+",57,1,11,0/,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_C20+"\r");
		out.println("^CELLLINE("+(nXCurPos+127)+","+(nYCurPos+471)+",62,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+127)+","+(nYCurPos+471)+",62,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+127)+","+(nYCurPos+471)+",62,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+127)+","+(nYCurPos+471)+",62,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+127)+","+(nYCurPos+471)+",62,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E20+"\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos+471)+",54,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos+471)+",54,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos+471)+",54,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos+471)+",54,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+189)+","+(nYCurPos+471)+",54,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F20+"\r");
		out.println("^CELLLINE("+(nXCurPos+243)+","+(nYCurPos+471)+",54,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+243)+","+(nYCurPos+471)+",54,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+243)+","+(nYCurPos+471)+",54,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+243)+","+(nYCurPos+471)+",54,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+243)+","+(nYCurPos+471)+",54,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_G20+"\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos+471)+",54,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos+471)+",54,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos+471)+",54,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos+471)+",54,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+297)+","+(nYCurPos+471)+",54,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_H20+"\r");
		out.println("^CELLLINE("+(nXCurPos+351)+","+(nYCurPos+471)+",62,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+351)+","+(nYCurPos+471)+",62,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+351)+","+(nYCurPos+471)+",62,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+351)+","+(nYCurPos+471)+",62,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+351)+","+(nYCurPos+471)+",62,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_I20+"\r");
		out.println("^CELLLINE("+(nXCurPos+413)+","+(nYCurPos+471)+",63,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+413)+","+(nYCurPos+471)+",63,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+413)+","+(nYCurPos+471)+",63,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+413)+","+(nYCurPos+471)+",63,20,1,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+413)+","+(nYCurPos+471)+",63,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_K20+"\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+491)+",70,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+491)+",70,20,1,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+491)+",70,20,1,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+491)+",70,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+491)+",70,1,13,0/,바탕,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A21+"\r");
		out.println("^CELLLINE("+(nXCurPos+70)+","+(nYCurPos+491)+",57,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+70)+","+(nYCurPos+491)+",57,20,1,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+70)+","+(nYCurPos+491)+",57,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+70)+","+(nYCurPos+491)+",57,20,0,RGB[0,0,0],3)\r");
		out.println("^CELLLINE("+(nXCurPos+127)+","+(nYCurPos+491)+",62,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+127)+","+(nYCurPos+491)+",62,20,1,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+127)+","+(nYCurPos+491)+",62,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+127)+","+(nYCurPos+491)+",62,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+127)+","+(nYCurPos+491)+",62,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_E21+"\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos+491)+",54,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos+491)+",54,20,1,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos+491)+",54,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos+491)+",54,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+189)+","+(nYCurPos+491)+",54,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F21+"\r");
		out.println("^CELLLINE("+(nXCurPos+243)+","+(nYCurPos+491)+",54,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+243)+","+(nYCurPos+491)+",54,20,1,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+243)+","+(nYCurPos+491)+",54,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+243)+","+(nYCurPos+491)+",54,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+243)+","+(nYCurPos+491)+",54,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_G21+"\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos+491)+",54,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos+491)+",54,20,1,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos+491)+",54,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos+491)+",54,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+297)+","+(nYCurPos+491)+",54,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_H21+"\r");
		out.println("^CELLLINE("+(nXCurPos+351)+","+(nYCurPos+491)+",62,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+351)+","+(nYCurPos+491)+",62,20,1,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+351)+","+(nYCurPos+491)+",62,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+351)+","+(nYCurPos+491)+",62,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+351)+","+(nYCurPos+491)+",62,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_I21+"\r");
		out.println("^CELLLINE("+(nXCurPos+413)+","+(nYCurPos+491)+",63,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+413)+","+(nYCurPos+491)+",63,20,1,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+413)+","+(nYCurPos+491)+",63,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+413)+","+(nYCurPos+491)+",63,20,1,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+413)+","+(nYCurPos+491)+",63,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_K21+"\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+551)+",28,35,0,RGB[0,0,255],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+551)+",28,35,0,RGB[0,0,255],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+551)+",28,35,0,RGB[0,0,255],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+551)+",28,35,0,RGB[0,0,255],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+551)+",28,1,20,1/0/0,바탕체,RGB[0,0,255],BOLD, , ,NONE,35,1)");
		out.println(sheet10_A23+"\r");
		out.print("^PRINT("+(nXCurPos+28)+","+(nYCurPos+551)+",448,0,20,0/,돋움,RGB[0,0,255],BOLD, , ,NONE,35,1)");
		out.println(sheet10_B23+"\r");
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos+596)+",108,20,1,RGB[247,89,251],RGB[247,89,251],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+596)+",108,20,1,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+596)+",108,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+596)+",108,20,1,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos+596)+",108,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos+596)+",108,1,11,0/,바탕,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_A25+"\r");
		out.println("^CELLBG("+(nXCurPos+108)+","+(nYCurPos+596)+",81,20,1,RGB[247,89,251],RGB[247,89,251],0)\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos+596)+",81,20,1,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos+596)+",81,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos+596)+",81,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos+596)+",81,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+108)+","+(nYCurPos+596)+",81,1,11,0/,바탕,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_D25+"\r");
		out.println("^CELLBG("+(nXCurPos+189)+","+(nYCurPos+596)+",108,20,1,RGB[247,89,251],RGB[247,89,251],0)\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos+596)+",108,20,1,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos+596)+",108,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos+596)+",108,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos+596)+",108,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+189)+","+(nYCurPos+596)+",108,1,11,0/,바탕,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_F25+"\r");
		out.println("^CELLBG("+(nXCurPos+297)+","+(nYCurPos+596)+",83,20,1,RGB[247,89,251],RGB[247,89,251],0)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos+596)+",83,20,1,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos+596)+",83,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos+596)+",83,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos+596)+",83,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+297)+","+(nYCurPos+596)+",83,1,11,0/,바탕,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_H25+"\r");
		out.println("^CELLBG("+(nXCurPos+380)+","+(nYCurPos+596)+",96,20,1,RGB[247,89,251],RGB[247,89,251],0)\r");
		out.println("^CELLLINE("+(nXCurPos+380)+","+(nYCurPos+596)+",96,20,1,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+380)+","+(nYCurPos+596)+",96,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+380)+","+(nYCurPos+596)+",96,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+380)+","+(nYCurPos+596)+",96,20,1,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+380)+","+(nYCurPos+596)+",96,1,11,0/,바탕,RGB[0,0,0],BOLD, , ,NONE,20,1)");
		out.println(sheet10_J25+"\r");
	}

	//----con 스크립트 문 출력 함수----
	private void writeScriptcon( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",108,20,1,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",108,1,13,0/,바탕,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A26+"\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos)+",81,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos)+",81,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos)+",81,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+108)+","+(nYCurPos)+",81,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_D26+"\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+189)+","+(nYCurPos)+",108,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F26+"\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos)+",83,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos)+",83,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos)+",83,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+297)+","+(nYCurPos)+",83,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_H26+"\r");
		out.println("^CELLLINE("+(nXCurPos+380)+","+(nYCurPos)+",96,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+380)+","+(nYCurPos)+",96,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+380)+","+(nYCurPos)+",96,20,1,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+380)+","+(nYCurPos)+",96,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_J26+"\r");
	}

	//----line 스크립트 문 출력 함수----
	private void writeScriptline( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",28,20,1,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+28)+","+(nYCurPos)+",42,20,1,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+70)+","+(nYCurPos)+",38,20,1,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos)+",19,20,1,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+127)+","+(nYCurPos)+",62,20,1,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos)+",54,20,1,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+243)+","+(nYCurPos)+",54,20,1,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos)+",54,20,1,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+351)+","+(nYCurPos)+",29,20,1,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+380)+","+(nYCurPos)+",33,20,1,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+413)+","+(nYCurPos)+",63,20,1,RGB[0,0,0],0)\r");
	}

	//----tutor_list 스크립트 문 출력 함수----
	private void writeScripttutor_list( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",108,20,1,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",108,1,13,0/,바탕,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_A27+"\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos)+",81,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos)+",81,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos)+",81,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos)+",81,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+108)+","+(nYCurPos)+",81,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_D27+"\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+189)+","+(nYCurPos)+",108,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+189)+","+(nYCurPos)+",108,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_F27+"\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos)+",83,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos)+",83,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos)+",83,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+297)+","+(nYCurPos)+",83,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+297)+","+(nYCurPos)+",83,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_H27+"\r");
		out.println("^CELLLINE("+(nXCurPos+380)+","+(nYCurPos)+",96,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+380)+","+(nYCurPos)+",96,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+380)+","+(nYCurPos)+",96,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+380)+","+(nYCurPos)+",96,20,1,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+380)+","+(nYCurPos)+",96,1,11,1/0/0,굴림체,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet10_J27+"\r");
	}

	//----page_2 스크립트 문 출력 함수----
	private void writeScriptpage_2( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",294,0,16,0/,바탕체,RGB[0,0,255],BOLD, , ,NONE,31,1)");
		out.println(sheet20_A1+"\r");
	}

	//----question_list_header 스크립트 문 출력 함수----
	private void writeScriptquestion_list_header( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos)+",294,40,1,RGB[255,192,203],RGB[255,192,203],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",294,40,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",294,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",294,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",294,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",294,1,12,0/,바탕,RGB[0,0,0],BOLD, , ,NONE,40,1)");
		out.println(sheet20_A3+"\r");
		out.println("^CELLBG("+(nXCurPos+294)+","+(nYCurPos)+",45,40,1,RGB[255,192,203],RGB[255,192,203],0)\r");
		out.println("^CELLLINE("+(nXCurPos+294)+","+(nYCurPos)+",45,40,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+294)+","+(nYCurPos)+",45,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+294)+","+(nYCurPos)+",45,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+294)+","+(nYCurPos)+",45,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+294)+","+(nYCurPos)+",45,1,11,0/,굴림체,RGB[0,0,0], , , ,NONE,40,1)");
		out.println(sheet20_C3+"\r");
		out.println("^CELLBG("+(nXCurPos+339)+","+(nYCurPos)+",45,40,1,RGB[255,192,203],RGB[255,192,203],0)\r");
		out.println("^CELLLINE("+(nXCurPos+339)+","+(nYCurPos)+",45,40,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+339)+","+(nYCurPos)+",45,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+339)+","+(nYCurPos)+",45,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+339)+","+(nYCurPos)+",45,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+339)+","+(nYCurPos)+",45,1,11,0/,굴림체,RGB[0,0,0], , , ,NONE,40,1)");
		out.println(sheet20_D3+"\r");
		out.println("^CELLBG("+(nXCurPos+384)+","+(nYCurPos)+",45,40,1,RGB[255,192,203],RGB[255,192,203],0)\r");
		out.println("^CELLLINE("+(nXCurPos+384)+","+(nYCurPos)+",45,40,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+384)+","+(nYCurPos)+",45,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+384)+","+(nYCurPos)+",45,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+384)+","+(nYCurPos)+",45,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+384)+","+(nYCurPos)+",45,1,11,0/,굴림체,RGB[0,0,0], , , ,NONE,40,1)");
		out.println(sheet20_E3+"\r");
		out.println("^CELLBG("+(nXCurPos+429)+","+(nYCurPos)+",45,40,1,RGB[255,192,203],RGB[255,192,203],0)\r");
		out.println("^CELLLINE("+(nXCurPos+429)+","+(nYCurPos)+",45,40,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+429)+","+(nYCurPos)+",45,40,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+429)+","+(nYCurPos)+",45,40,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+429)+","+(nYCurPos)+",45,40,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+429)+","+(nYCurPos)+",45,1,12,0/,바탕,RGB[0,0,0],BOLD, , ,NONE,40,1)");
		out.println(sheet20_F3+"\r");
	}

	//----question_list 스크립트 문 출력 함수----
	private void writeScriptquestion_list( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",28,"+(nAutoHeight_question_list[1])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",28,"+(nAutoHeight_question_list[1])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",28,"+(nAutoHeight_question_list[1])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",28,"+(nAutoHeight_question_list[1])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",28,1,10,1/0/0,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_question_list[1])+",1)");
		out.println(sheet20_A5+"\r");
		out.println("^CELLLINE("+(nXCurPos+28)+","+(nYCurPos)+",266,"+(nAutoHeight_question_list[1])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+28)+","+(nYCurPos)+",266,"+(nAutoHeight_question_list[1])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+28)+","+(nYCurPos)+",266,"+(nAutoHeight_question_list[1])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+28)+","+(nYCurPos)+",266,"+(nAutoHeight_question_list[1])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+28)+","+(nYCurPos)+",266,0,10,0/,바탕,RGB[0,0,0], , , ,XL,"+(nAutoHeight_question_list[1])+",1)");
		out.println(sheet20_B5+"\r");
		out.println("^CELLLINE("+(nXCurPos+294)+","+(nYCurPos)+",45,"+(nAutoHeight_question_list[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+294)+","+(nYCurPos)+",45,"+(nAutoHeight_question_list[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+294)+","+(nYCurPos)+",45,"+(nAutoHeight_question_list[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+294)+","+(nYCurPos)+",45,"+(nAutoHeight_question_list[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+294)+","+(nYCurPos)+",45,1,10,1/0/0,바탕,RGB[255,0,0], , , ,NONE,"+(nAutoHeight_question_list[0])+",1)");
		out.println(sheet20_C5+"\r");
		out.println("^CELLLINE("+(nXCurPos+339)+","+(nYCurPos)+",45,"+(nAutoHeight_question_list[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+339)+","+(nYCurPos)+",45,"+(nAutoHeight_question_list[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+339)+","+(nYCurPos)+",45,"+(nAutoHeight_question_list[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+339)+","+(nYCurPos)+",45,"+(nAutoHeight_question_list[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+339)+","+(nYCurPos)+",45,1,10,1/0/0,바탕,RGB[255,0,0], , , ,NONE,"+(nAutoHeight_question_list[0])+",1)");
		out.println(sheet20_D5+"\r");
		out.println("^CELLLINE("+(nXCurPos+384)+","+(nYCurPos)+",45,"+(nAutoHeight_question_list[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+384)+","+(nYCurPos)+",45,"+(nAutoHeight_question_list[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+384)+","+(nYCurPos)+",45,"+(nAutoHeight_question_list[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+384)+","+(nYCurPos)+",45,"+(nAutoHeight_question_list[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+384)+","+(nYCurPos)+",45,1,10,1/0/0,바탕,RGB[255,0,0], , , ,NONE,"+(nAutoHeight_question_list[0])+",1)");
		out.println(sheet20_E5+"\r");
		out.println("^CELLLINE("+(nXCurPos+429)+","+(nYCurPos)+",45,"+(nAutoHeight_question_list[1])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+429)+","+(nYCurPos)+",45,"+(nAutoHeight_question_list[1])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+429)+","+(nYCurPos)+",45,"+(nAutoHeight_question_list[1])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+429)+","+(nYCurPos)+",45,"+(nAutoHeight_question_list[1])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+429)+","+(nYCurPos)+",45,1,10,0/,바탕,RGB[0,0,255], , , ,NONE,"+(nAutoHeight_question_list[1])+",1)");
		out.println(sheet20_F5+"\r");
		out.println("^CELLLINE("+(nXCurPos+294)+","+(nYCurPos+nAutoHeight_question_list[0])+",45,"+(nAutoHeight_question_list[1]-nAutoHeight_question_list[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+294)+","+(nYCurPos+nAutoHeight_question_list[0])+",45,"+(nAutoHeight_question_list[1]-nAutoHeight_question_list[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+294)+","+(nYCurPos+nAutoHeight_question_list[0])+",45,"+(nAutoHeight_question_list[1]-nAutoHeight_question_list[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+294)+","+(nYCurPos+nAutoHeight_question_list[0])+",45,"+(nAutoHeight_question_list[1]-nAutoHeight_question_list[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+294)+","+(nYCurPos+nAutoHeight_question_list[0])+",45,1,10,0/,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_question_list[1]-nAutoHeight_question_list[0])+",1)");
		out.println(sheet20_C6+"\r");
		out.println("^CELLLINE("+(nXCurPos+339)+","+(nYCurPos+nAutoHeight_question_list[0])+",45,"+(nAutoHeight_question_list[1]-nAutoHeight_question_list[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+339)+","+(nYCurPos+nAutoHeight_question_list[0])+",45,"+(nAutoHeight_question_list[1]-nAutoHeight_question_list[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+339)+","+(nYCurPos+nAutoHeight_question_list[0])+",45,"+(nAutoHeight_question_list[1]-nAutoHeight_question_list[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+339)+","+(nYCurPos+nAutoHeight_question_list[0])+",45,"+(nAutoHeight_question_list[1]-nAutoHeight_question_list[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+339)+","+(nYCurPos+nAutoHeight_question_list[0])+",45,1,10,0/,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_question_list[1]-nAutoHeight_question_list[0])+",1)");
		out.println(sheet20_D6+"\r");
		out.println("^CELLLINE("+(nXCurPos+384)+","+(nYCurPos+nAutoHeight_question_list[0])+",45,"+(nAutoHeight_question_list[1]-nAutoHeight_question_list[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+384)+","+(nYCurPos+nAutoHeight_question_list[0])+",45,"+(nAutoHeight_question_list[1]-nAutoHeight_question_list[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+384)+","+(nYCurPos+nAutoHeight_question_list[0])+",45,"+(nAutoHeight_question_list[1]-nAutoHeight_question_list[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+384)+","+(nYCurPos+nAutoHeight_question_list[0])+",45,"+(nAutoHeight_question_list[1]-nAutoHeight_question_list[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+384)+","+(nYCurPos+nAutoHeight_question_list[0])+",45,1,10,0/,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_question_list[1]-nAutoHeight_question_list[0])+",1)");
		out.println(sheet20_E6+"\r");
	}

	//----page_3 스크립트 문 출력 함수----
	private void writeScriptpage_3( ) throws Exception{
		//스크립트문 생성
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",360,0,16,0/,바탕체,RGB[0,0,255],BOLD, , ,NONE,31,1)");
		out.println(sheet30_A1+"\r");
	}

	//----list_header 스크립트 문 출력 함수----
	private void writeScriptlist_header( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLBG("+(nXCurPos)+","+(nYCurPos)+",69,88,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",69,88,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",69,88,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",69,88,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",69,88,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",69,1,10,0/,바탕,RGB[0,0,0], , , ,NONE,88,1)");
		out.println(sheet30_A3+"\r");
		out.println("^CELLBG("+(nXCurPos+69)+","+(nYCurPos)+",39,88,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+69)+","+(nYCurPos)+",39,88,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+69)+","+(nYCurPos)+",39,88,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+69)+","+(nYCurPos)+",39,88,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+69)+","+(nYCurPos)+",39,88,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+69)+","+(nYCurPos)+",39,1,10,0/,바탕,RGB[0,0,0], , , ,NONE,88,1)");
		out.println(sheet30_B3+"\r");
		out.println("^CELLBG("+(nXCurPos+108)+","+(nYCurPos)+",112,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos)+",112,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos)+",112,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos)+",112,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos)+",112,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+108)+","+(nYCurPos)+",112,1,10,0/,바탕,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_C3+"\r");
		out.println("^CELLBG("+(nXCurPos+220)+","+(nYCurPos)+",112,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+220)+","+(nYCurPos)+",112,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+220)+","+(nYCurPos)+",112,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+220)+","+(nYCurPos)+",112,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+220)+","+(nYCurPos)+",112,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+220)+","+(nYCurPos)+",112,1,10,0/,바탕,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_G3+"\r");
		out.println("^CELLBG("+(nXCurPos+332)+","+(nYCurPos)+",112,20,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+332)+","+(nYCurPos)+",112,20,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+332)+","+(nYCurPos)+",112,20,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+332)+","+(nYCurPos)+",112,20,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+332)+","+(nYCurPos)+",112,20,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+332)+","+(nYCurPos)+",112,1,10,0/,바탕,RGB[0,0,0], , , ,NONE,20,1)");
		out.println(sheet30_K3+"\r");
		out.println("^CELLBG("+(nXCurPos+444)+","+(nYCurPos)+",31,88,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+444)+","+(nYCurPos)+",31,88,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+444)+","+(nYCurPos)+",31,88,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+444)+","+(nYCurPos)+",31,88,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+444)+","+(nYCurPos)+",31,88,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+444)+","+(nYCurPos)+",31,1,10,0/,바탕,RGB[0,0,0], , , ,NONE,88,1)");
		out.println(sheet30_O3+"\r");
		out.println("^CELLBG("+(nXCurPos+108)+","+(nYCurPos+20)+",28,68,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+108)+","+(nYCurPos+20)+",28,1,10,0/,바탕,RGB[0,0,0], , , ,NONE,68,1)");
		out.println(sheet30_C4+"\r");
		out.println("^CELLBG("+(nXCurPos+136)+","+(nYCurPos+20)+",28,68,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+136)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+136)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+136)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+136)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+136)+","+(nYCurPos+20)+",28,1,10,0/,바탕,RGB[0,0,0], , , ,NONE,68,1)");
		out.println(sheet30_D4+"\r");
		out.println("^CELLBG("+(nXCurPos+164)+","+(nYCurPos+20)+",28,68,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+164)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+164)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+164)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+164)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+164)+","+(nYCurPos+20)+",28,1,10,0/,바탕,RGB[0,0,0], , , ,NONE,68,1)");
		out.println(sheet30_E4+"\r");
		out.println("^CELLBG("+(nXCurPos+192)+","+(nYCurPos+20)+",28,68,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+192)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+192)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+192)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+192)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+192)+","+(nYCurPos+20)+",28,1,10,0/,바탕,RGB[0,0,0], , , ,NONE,68,1)");
		out.println(sheet30_F4+"\r");
		out.println("^CELLBG("+(nXCurPos+220)+","+(nYCurPos+20)+",28,68,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+220)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+220)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+220)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+220)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+220)+","+(nYCurPos+20)+",28,1,10,0/,바탕,RGB[0,0,0], , , ,NONE,68,1)");
		out.println(sheet30_G4+"\r");
		out.println("^CELLBG("+(nXCurPos+248)+","+(nYCurPos+20)+",28,68,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+248)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+248)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+248)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+248)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+248)+","+(nYCurPos+20)+",28,1,10,0/,바탕,RGB[0,0,0], , , ,NONE,68,1)");
		out.println(sheet30_H4+"\r");
		out.println("^CELLBG("+(nXCurPos+276)+","+(nYCurPos+20)+",28,68,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+276)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+276)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+276)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+276)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+276)+","+(nYCurPos+20)+",28,1,10,0/,바탕,RGB[0,0,0], , , ,NONE,68,1)");
		out.println(sheet30_I4+"\r");
		out.println("^CELLBG("+(nXCurPos+304)+","+(nYCurPos+20)+",28,68,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+304)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+304)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+304)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+304)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+304)+","+(nYCurPos+20)+",28,1,10,0/,바탕,RGB[0,0,0], , , ,NONE,68,1)");
		out.println(sheet30_J4+"\r");
		out.println("^CELLBG("+(nXCurPos+332)+","+(nYCurPos+20)+",28,68,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+332)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+332)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+332)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+332)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+332)+","+(nYCurPos+20)+",28,1,10,0/,바탕,RGB[0,0,0], , , ,NONE,68,1)");
		out.println(sheet30_K4+"\r");
		out.println("^CELLBG("+(nXCurPos+360)+","+(nYCurPos+20)+",28,68,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+360)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+360)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+360)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+360)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+360)+","+(nYCurPos+20)+",28,1,10,0/,바탕,RGB[0,0,0], , , ,NONE,68,1)");
		out.println(sheet30_L4+"\r");
		out.println("^CELLBG("+(nXCurPos+388)+","+(nYCurPos+20)+",28,68,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+388)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+388)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+388)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+388)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+388)+","+(nYCurPos+20)+",28,1,10,0/,바탕,RGB[0,0,0], , , ,NONE,68,1)");
		out.println(sheet30_M4+"\r");
		out.println("^CELLBG("+(nXCurPos+416)+","+(nYCurPos+20)+",28,68,1,RGB[230,230,250],RGB[230,230,250],0)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos+20)+",28,68,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+416)+","+(nYCurPos+20)+",28,1,10,0/,바탕,RGB[0,0,0], , , ,NONE,68,1)");
		out.println(sheet30_N4+"\r");
	}

	//----list 스크립트 문 출력 함수----
	private void writeScriptlist( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",69,"+(nAutoHeight_list[1])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",69,"+(nAutoHeight_list[1])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",69,"+(nAutoHeight_list[1])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",69,"+(nAutoHeight_list[1])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",69,0,10,0/,바탕,RGB[0,0,0], , , ,XL,"+(nAutoHeight_list[1])+",1)");
		out.println(sheet30_A5+"\r");
		out.println("^CELLLINE("+(nXCurPos+69)+","+(nYCurPos)+",39,"+(nAutoHeight_list[1])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+69)+","+(nYCurPos)+",39,"+(nAutoHeight_list[1])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+69)+","+(nYCurPos)+",39,"+(nAutoHeight_list[1])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+69)+","+(nYCurPos)+",39,"+(nAutoHeight_list[1])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+69)+","+(nYCurPos)+",39,1,10,0/,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_list[1])+",1)");
		out.println(sheet30_B5+"\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+108)+","+(nYCurPos)+",28,1,10,1/0/0,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_list[0])+",1)");
		out.println(sheet30_C5+"\r");
		out.println("^CELLLINE("+(nXCurPos+136)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+136)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+136)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+136)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+136)+","+(nYCurPos)+",28,1,10,1/0/0,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_list[0])+",1)");
		out.println(sheet30_D5+"\r");
		out.println("^CELLLINE("+(nXCurPos+164)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+164)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+164)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+164)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+164)+","+(nYCurPos)+",28,1,10,1/0/0,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_list[0])+",1)");
		out.println(sheet30_E5+"\r");
		out.println("^CELLLINE("+(nXCurPos+192)+","+(nYCurPos)+",28,"+(nAutoHeight_list[1])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+192)+","+(nYCurPos)+",28,"+(nAutoHeight_list[1])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+192)+","+(nYCurPos)+",28,"+(nAutoHeight_list[1])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+192)+","+(nYCurPos)+",28,"+(nAutoHeight_list[1])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+192)+","+(nYCurPos)+",28,1,9,0/,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_list[1])+",1)");
		out.println(sheet30_F5+"\r");
		out.println("^CELLLINE("+(nXCurPos+220)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+220)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+220)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+220)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+220)+","+(nYCurPos)+",28,1,10,1/0/0,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_list[0])+",1)");
		out.println(sheet30_G5+"\r");
		out.println("^CELLLINE("+(nXCurPos+248)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+248)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+248)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+248)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+248)+","+(nYCurPos)+",28,1,10,1/0/0,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_list[0])+",1)");
		out.println(sheet30_H5+"\r");
		out.println("^CELLLINE("+(nXCurPos+276)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+276)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+276)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+276)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+276)+","+(nYCurPos)+",28,1,10,1/0/0,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_list[0])+",1)");
		out.println(sheet30_I5+"\r");
		out.println("^CELLLINE("+(nXCurPos+304)+","+(nYCurPos)+",28,"+(nAutoHeight_list[1])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+304)+","+(nYCurPos)+",28,"+(nAutoHeight_list[1])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+304)+","+(nYCurPos)+",28,"+(nAutoHeight_list[1])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+304)+","+(nYCurPos)+",28,"+(nAutoHeight_list[1])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+304)+","+(nYCurPos)+",28,1,9,0/,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_list[1])+",1)");
		out.println(sheet30_J5+"\r");
		out.println("^CELLLINE("+(nXCurPos+332)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+332)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+332)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+332)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+332)+","+(nYCurPos)+",28,1,10,1/0/0,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_list[0])+",1)");
		out.println(sheet30_K5+"\r");
		out.println("^CELLLINE("+(nXCurPos+360)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+360)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+360)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+360)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+360)+","+(nYCurPos)+",28,1,10,1/0/0,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_list[0])+",1)");
		out.println(sheet30_L5+"\r");
		out.println("^CELLLINE("+(nXCurPos+388)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+388)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+388)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+388)+","+(nYCurPos)+",28,"+(nAutoHeight_list[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+388)+","+(nYCurPos)+",28,1,10,1/0/0,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_list[0])+",1)");
		out.println(sheet30_M5+"\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos)+",28,"+(nAutoHeight_list[1])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos)+",28,"+(nAutoHeight_list[1])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos)+",28,"+(nAutoHeight_list[1])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+416)+","+(nYCurPos)+",28,"+(nAutoHeight_list[1])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+416)+","+(nYCurPos)+",28,1,9,0/,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_list[1])+",1)");
		out.println(sheet30_N5+"\r");
		out.println("^CELLLINE("+(nXCurPos+444)+","+(nYCurPos)+",31,"+(nAutoHeight_list[1])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+444)+","+(nYCurPos)+",31,"+(nAutoHeight_list[1])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+444)+","+(nYCurPos)+",31,"+(nAutoHeight_list[1])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+444)+","+(nYCurPos)+",31,"+(nAutoHeight_list[1])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+444)+","+(nYCurPos)+",31,1,10,0/,바탕,RGB[0,0,255], , , ,NONE,"+(nAutoHeight_list[1])+",1)");
		out.println(sheet30_O5+"\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+108)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+108)+","+(nYCurPos+nAutoHeight_list[0])+",28,1,9,0/,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",1)");
		out.println(sheet30_C6+"\r");
		out.println("^CELLLINE("+(nXCurPos+136)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+136)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+136)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+136)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+136)+","+(nYCurPos+nAutoHeight_list[0])+",28,1,9,0/,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",1)");
		out.println(sheet30_D6+"\r");
		out.println("^CELLLINE("+(nXCurPos+164)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+164)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+164)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+164)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+164)+","+(nYCurPos+nAutoHeight_list[0])+",28,1,9,0/,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",1)");
		out.println(sheet30_E6+"\r");
		out.println("^CELLLINE("+(nXCurPos+220)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+220)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+220)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+220)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+220)+","+(nYCurPos+nAutoHeight_list[0])+",28,1,9,0/,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",1)");
		out.println(sheet30_G6+"\r");
		out.println("^CELLLINE("+(nXCurPos+248)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+248)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+248)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+248)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+248)+","+(nYCurPos+nAutoHeight_list[0])+",28,1,9,0/,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",1)");
		out.println(sheet30_H6+"\r");
		out.println("^CELLLINE("+(nXCurPos+276)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+276)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+276)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+276)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+276)+","+(nYCurPos+nAutoHeight_list[0])+",28,1,9,0/,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",1)");
		out.println(sheet30_I6+"\r");
		out.println("^CELLLINE("+(nXCurPos+332)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+332)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+332)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+332)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+332)+","+(nYCurPos+nAutoHeight_list[0])+",28,1,9,0/,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",1)");
		out.println(sheet30_K6+"\r");
		out.println("^CELLLINE("+(nXCurPos+360)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+360)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+360)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+360)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+360)+","+(nYCurPos+nAutoHeight_list[0])+",28,1,9,0/,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",1)");
		out.println(sheet30_L6+"\r");
		out.println("^CELLLINE("+(nXCurPos+388)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],0)\r");
		out.println("^CELLLINE("+(nXCurPos+388)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],1)\r");
		out.println("^CELLLINE("+(nXCurPos+388)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],2)\r");
		out.println("^CELLLINE("+(nXCurPos+388)+","+(nYCurPos+nAutoHeight_list[0])+",28,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos+388)+","+(nYCurPos+nAutoHeight_list[0])+",28,1,9,0/,바탕,RGB[0,0,0], , , ,NONE,"+(nAutoHeight_list[1]-nAutoHeight_list[0])+",1)");
		out.println(sheet30_M6+"\r");
	}

	//----page5 스크립트 문 출력 함수----
	private void writeScriptpage5( ) throws Exception{
		//스크립트문 생성
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",29,30,0,RGB[0,0,255],0)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",29,30,0,RGB[0,0,255],1)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",29,30,0,RGB[0,0,255],2)\r");
		out.println("^CELLLINE("+(nXCurPos)+","+(nYCurPos)+",29,30,0,RGB[0,0,0],3)\r");
		out.print("^PRINT("+(nXCurPos)+","+(nYCurPos)+",29,1,20,1/0/0,바탕체,RGB[0,0,255],BOLD, , ,NONE,30,1)");
		out.println(sheet40_A1+"\r");
		out.print("^PRINT("+(nXCurPos+29)+","+(nYCurPos)+",447,0,20,0/,돋움,RGB[0,0,255],BOLD, , ,NONE,30,1)");
		out.println(sheet40_B1+"\r");
	}

	//파라미터 설정 함수
	private void setParam(){
		p_grcode_Param=toKor(GetB(request.getParameter("p_grcode")));
		p_grseq_Param=toKor(GetB(request.getParameter("p_grseq")));
		p_set_no_Param=toKor(GetB(request.getParameter("p_set_no")));
		p_title_no_Param=toKor(GetB(request.getParameter("p_title_no")));
	}

	//-----Connection 및 Statement 객체 생성 함수-----
	private void createConnAndStateObject() throws Exception{
		//DUNET Connection 객체 생성
		Class.forName("oracle.jdbc.driver.OracleDriver");
		conn_DUNET = DriverManager.getConnection("jdbc:oracle:thin:@192.168.12.203:1521:LOTI1","inchlms","fhxl21");stat_GR_INFO=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_GR_BASIC_INFO=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_GR_TYPE_INFO=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_CATEGORY=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_tutor_list=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_QUESTION=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_GR_MALE=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_GR_FEMALE=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_QUEST=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_ANS=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_QUESTION3=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_QUESTION4=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_QUESTION5_1=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_QUESTION5_2=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_QUESTION5_3=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_QUESTION_JU=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_grgubun_info=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_GR_DETAIL_INFO=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_qry_QUESTION_LIST=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_QUESTION_LIST=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_LIST=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_QUESTION1=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
		stat_QUESTION2=conn_DUNET.createStatement(ResultSet.TYPE_SCROLL_INSENSITIVE,ResultSet.CONCUR_READ_ONLY);
	}

	//-----SQL문 변수 초기화 함수-----
	private void initSQLConst(){
		sql_GR_INFO = "SELECT SUBSTR(GRSEQ,1,4) || '년 ' || TO_NUMBER(SUBSTR(GRSEQ, 5,2)) || '기 ' || GRCODENIKNM  AS GRCODENM, TO_CHAR(STARTED,'YYYY.MM.DD') AS STARTED, TO_CHAR(ENDDATE,'YYYY.MM.DD') AS ENDDATE FROM TB_GRSEQ WHERE GRCODE='" + p_grcode_Param + "' AND GRSEQ= '" + p_grseq_Param + "'";
		sql_GR_BASIC_INFO = "SELECT GOAL, TARGET, SIGANGE, SIBUNYA, SISOGE, SICOMMON, SIJUNMUN, SIETC FROM TB_GRANNAE ";
		sql_GR_BASIC_INFO = sql_GR_BASIC_INFO + "WHERE GRCODE = '" + p_grcode_Param + "' AND YEAR = SUBSTR('" + p_grseq_Param + "', 1, 4)";
		sql_GR_TYPE_INFO = "SELECT B.MCODE_NAME || ' ' || C.SCODE_NAME || ' 교육' AS GR_TYPE FROM TB_GRCODE A, TB_MAINCODE B, TB_SUBCODE C WHERE A.GRTYPE = B.MAJOR_CODE AND B.MAJOR_CODE = C.MAJOR_CODE AND  A.GRSUBCD = C.MINOR_CODE AND A.GRCODE = '" + p_grcode_Param + "' AND A.USE_YN = 'Y'";
		sql_CATEGORY = "SELECT DISTINCT CATEGORY FROM TB_GRSUGGESTION WHERE FINISH_YN = 'Y'";
		sql_tutor_list = "select  ";
		sql_tutor_list = sql_tutor_list + "tlgubun, decode(tlgubun, '1', '공무원', '2', '교수', '3', '전문가', '4', '자체교관', '기타')  tlgubunnm, ";
		sql_tutor_list = sql_tutor_list + "sum(tcnt) tot_cnt, ";
		sql_tutor_list = sql_tutor_list + "sum(decode(sbgubun, '01', tcnt, 0)) sbgubun01, ";
		sql_tutor_list = sql_tutor_list + "sum(decode(sbgubun, '02', tcnt, 0)) sbgubun02, ";
		sql_tutor_list = sql_tutor_list + "sum(decode(sbgubun, '03', tcnt, 0)) sbgubun03 ";
		sql_tutor_list = sql_tutor_list + "from ( ";
		sql_tutor_list = sql_tutor_list + "select  ";
		sql_tutor_list = sql_tutor_list + "nvl(b.subjgubun,'03') sbgubun, decode(c.tlevel, 'A1', 2, 'A', 2, 'B', 2, 'C1', 3, 'C2', 1, 'Z', 4, 5) tlgubun, count(distinct a.userno) tcnt ";
		sql_tutor_list = sql_tutor_list + "from tb_timetable_tu a, tb_subj b, tb_tutor c ";
		sql_tutor_list = sql_tutor_list + "where a.subj=b.subj and a.userno=c.userno  ";
		sql_tutor_list = sql_tutor_list + "and a.grcode='" + p_grcode_Param + "' and a.grseq = '" + p_grseq_Param + "' ";
		sql_tutor_list = sql_tutor_list + "group by nvl(b.subjgubun,'03'), decode(c.tlevel, 'A1', 2, 'A', 2, 'B', 2, 'C1', 3, 'C2', 1, 'Z', 4, 5)  ";
		sql_tutor_list = sql_tutor_list + ") group by tlgubun";
		sql_QUESTION = "select ";
		sql_QUESTION = sql_QUESTION + "    a.question_no as question_no, ";
		sql_QUESTION = sql_QUESTION + "    min(a.question) as question, ";
		sql_QUESTION = sql_QUESTION + "    case when min(c.question_comm_gubun) = 5 and a.question_no > 11 and mod(a.question_no,3) = 1 then ";
		sql_QUESTION = sql_QUESTION + "	round((nvl(sum(decode(ans_no, 1, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION = sql_QUESTION + "	when min(c.question_comm_gubun) = 3 and a.question_no > 8 and mod(a.question_no,3) = 1 then ";
		sql_QUESTION = sql_QUESTION + "	round((nvl(sum(decode(ans_no, 1, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION = sql_QUESTION + "	else ";
		sql_QUESTION = sql_QUESTION + "	round((nvl(sum(decode(ans_no, 1, 1, 0)),0)+nvl(sum(decode(ans_no, 2, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION = sql_QUESTION + "	end||'%' ";
		sql_QUESTION = sql_QUESTION + "	as enough_rat, ";
		sql_QUESTION = sql_QUESTION + "	'(보통: '|| ";
		sql_QUESTION = sql_QUESTION + "	case when min(c.question_comm_gubun) = 5 and a.question_no > 11 and mod(a.question_no,3) = 1 then ";
		sql_QUESTION = sql_QUESTION + "	round((nvl(sum(decode(ans_no, 2, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION = sql_QUESTION + "	when min(c.question_comm_gubun) = 3 and a.question_no > 8 and mod(a.question_no,3) = 1 then ";
		sql_QUESTION = sql_QUESTION + "	round((nvl(sum(decode(ans_no, 2, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION = sql_QUESTION + "	else ";
		sql_QUESTION = sql_QUESTION + "	round((nvl(sum(decode(ans_no, 3, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION = sql_QUESTION + "	end||'%)' ";
		sql_QUESTION = sql_QUESTION + "	as regular_rat ";
		sql_QUESTION = sql_QUESTION + "from ";
		sql_QUESTION = sql_QUESTION + "	tb_grinq_question_set a,tb_grinq_ttl c,tb_grinq_samp_set d,tb_grinq_answer e ";
		sql_QUESTION = sql_QUESTION + "where ";
		sql_QUESTION = sql_QUESTION + "    a.title_no= '" + p_title_no_Param + "' ";
		sql_QUESTION = sql_QUESTION + "    AND a.set_no= '" + p_set_no_Param + "' ";
		sql_QUESTION = sql_QUESTION + "    AND a.title_no = c.title_no  ";
		sql_QUESTION = sql_QUESTION + "    AND a.title_no = d.title_no ";
		sql_QUESTION = sql_QUESTION + "    AND a.set_no = d.set_no  ";
		sql_QUESTION = sql_QUESTION + "    AND a.question_no = d.question_no  ";
		sql_QUESTION = sql_QUESTION + "    AND a.title_no = e.title_no(+)  ";
		sql_QUESTION = sql_QUESTION + "    AND a.set_no = e.set_no(+)  ";
		sql_QUESTION = sql_QUESTION + "    AND a.question_no = e.question_no(+) ";
		sql_QUESTION = sql_QUESTION + "    AND ans_no != 0 ";
		sql_QUESTION = sql_QUESTION + "group by  ";
		sql_QUESTION = sql_QUESTION + "    a.title_no,a.set_no,a.question_no ";
		sql_QUESTION = sql_QUESTION + "order by  ";
		sql_QUESTION = sql_QUESTION + "    a.question_no";
		sql_GR_MALE = "SELECT COUNT(USERNO) AS CNT FROM TB_GRRESULT WHERE GRCODE = '" + p_grcode_Param + "' AND GRSEQ = '" + p_grseq_Param + "' AND (SUBSTR(RRESNO,7,1) = '1' OR SUBSTR(RRESNO,7,1) = '3')";
		sql_GR_FEMALE = "SELECT COUNT(USERNO) AS CNT FROM TB_GRRESULT WHERE GRCODE = '" + p_grcode_Param + "' AND GRSEQ = '" + p_grseq_Param + "' AND (SUBSTR(RRESNO,7,1) = '2' OR SUBSTR(RRESNO,7,1) = '4')";
		sql_QUESTION3 = "select ";
		sql_QUESTION3 = sql_QUESTION3 + "    a.question_no as question_no, ";
		sql_QUESTION3 = sql_QUESTION3 + "    min(a.question) as question, ";
		sql_QUESTION3 = sql_QUESTION3 + "    case when min(c.question_comm_gubun) = 5 and a.question_no > 11 and mod(a.question_no,3) = 1 then ";
		sql_QUESTION3 = sql_QUESTION3 + "	round((nvl(sum(decode(ans_no, 1, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION3 = sql_QUESTION3 + "	when min(c.question_comm_gubun) = 3 and a.question_no > 8 and mod(a.question_no,3) = 1 then ";
		sql_QUESTION3 = sql_QUESTION3 + "	round((nvl(sum(decode(ans_no, 1, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION3 = sql_QUESTION3 + "	else ";
		sql_QUESTION3 = sql_QUESTION3 + "	round((nvl(sum(decode(ans_no, 1, 1, 0)),0)+nvl(sum(decode(ans_no, 2, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION3 = sql_QUESTION3 + "	end||'%' ";
		sql_QUESTION3 = sql_QUESTION3 + "	as enough_rat, ";
		sql_QUESTION3 = sql_QUESTION3 + "	'(보통: '|| ";
		sql_QUESTION3 = sql_QUESTION3 + "	case when min(c.question_comm_gubun) = 5 and a.question_no > 11 and mod(a.question_no,3) = 1 then ";
		sql_QUESTION3 = sql_QUESTION3 + "	round((nvl(sum(decode(ans_no, 2, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION3 = sql_QUESTION3 + "	when min(c.question_comm_gubun) = 3 and a.question_no > 8 and mod(a.question_no,3) = 1 then ";
		sql_QUESTION3 = sql_QUESTION3 + "	round((nvl(sum(decode(ans_no, 2, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION3 = sql_QUESTION3 + "	else ";
		sql_QUESTION3 = sql_QUESTION3 + "	round((nvl(sum(decode(ans_no, 3, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION3 = sql_QUESTION3 + "	end||'%)' ";
		sql_QUESTION3 = sql_QUESTION3 + "	as regular_rat ";
		sql_QUESTION3 = sql_QUESTION3 + "from ";
		sql_QUESTION3 = sql_QUESTION3 + "	tb_grinq_question_set a,tb_grinq_ttl c,tb_grinq_samp_set d,tb_grinq_answer e ";
		sql_QUESTION3 = sql_QUESTION3 + "where ";
		sql_QUESTION3 = sql_QUESTION3 + "    a.title_no= '" + p_title_no_Param + "' ";
		sql_QUESTION3 = sql_QUESTION3 + "    AND a.set_no= '" + p_set_no_Param + "' ";
		sql_QUESTION3 = sql_QUESTION3 + "    AND a.title_no = c.title_no  ";
		sql_QUESTION3 = sql_QUESTION3 + "    AND a.title_no = d.title_no ";
		sql_QUESTION3 = sql_QUESTION3 + "    AND a.set_no = d.set_no  ";
		sql_QUESTION3 = sql_QUESTION3 + "    AND a.question_no = d.question_no  ";
		sql_QUESTION3 = sql_QUESTION3 + "    AND a.title_no = e.title_no(+)  ";
		sql_QUESTION3 = sql_QUESTION3 + "    AND a.set_no = e.set_no(+)  ";
		sql_QUESTION3 = sql_QUESTION3 + "    AND a.question_no = e.question_no(+) ";
		sql_QUESTION3 = sql_QUESTION3 + "    AND ans_no != 0 ";
		sql_QUESTION3 = sql_QUESTION3 + "    AND a.question_no = (decode(c.question_comm_gubun,5,4,3,3,4)) ";
		sql_QUESTION3 = sql_QUESTION3 + "group by  ";
		sql_QUESTION3 = sql_QUESTION3 + "    a.title_no,a.set_no,a.question_no ";
		sql_QUESTION3 = sql_QUESTION3 + "order by  ";
		sql_QUESTION3 = sql_QUESTION3 + "    a.question_no";
		sql_QUESTION4 = "select ";
		sql_QUESTION4 = sql_QUESTION4 + "    a.question_no as question_no, ";
		sql_QUESTION4 = sql_QUESTION4 + "    min(a.question) as question, ";
		sql_QUESTION4 = sql_QUESTION4 + "    case when min(c.question_comm_gubun) = 5 and a.question_no > 11 and mod(a.question_no,3) = 1 then ";
		sql_QUESTION4 = sql_QUESTION4 + "	round((nvl(sum(decode(ans_no, 1, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION4 = sql_QUESTION4 + "	when min(c.question_comm_gubun) = 3 and a.question_no > 8 and mod(a.question_no,3) = 1 then ";
		sql_QUESTION4 = sql_QUESTION4 + "	round((nvl(sum(decode(ans_no, 1, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION4 = sql_QUESTION4 + "	else ";
		sql_QUESTION4 = sql_QUESTION4 + "	round((nvl(sum(decode(ans_no, 1, 1, 0)),0)+nvl(sum(decode(ans_no, 2, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION4 = sql_QUESTION4 + "	end||'%' ";
		sql_QUESTION4 = sql_QUESTION4 + "	as enough_rat, ";
		sql_QUESTION4 = sql_QUESTION4 + "	'(보통: '|| ";
		sql_QUESTION4 = sql_QUESTION4 + "	case when min(c.question_comm_gubun) = 5 and a.question_no > 11 and mod(a.question_no,3) = 1 then ";
		sql_QUESTION4 = sql_QUESTION4 + "	round((nvl(sum(decode(ans_no, 2, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION4 = sql_QUESTION4 + "	when min(c.question_comm_gubun) = 3 and a.question_no > 8 and mod(a.question_no,3) = 1 then ";
		sql_QUESTION4 = sql_QUESTION4 + "	round((nvl(sum(decode(ans_no, 2, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION4 = sql_QUESTION4 + "	else ";
		sql_QUESTION4 = sql_QUESTION4 + "	round((nvl(sum(decode(ans_no, 3, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION4 = sql_QUESTION4 + "	end||'%)' ";
		sql_QUESTION4 = sql_QUESTION4 + "	as regular_rat ";
		sql_QUESTION4 = sql_QUESTION4 + "from ";
		sql_QUESTION4 = sql_QUESTION4 + "	tb_grinq_question_set a,tb_grinq_ttl c,tb_grinq_samp_set d,tb_grinq_answer e ";
		sql_QUESTION4 = sql_QUESTION4 + "where ";
		sql_QUESTION4 = sql_QUESTION4 + "    a.title_no= '" + p_title_no_Param + "' ";
		sql_QUESTION4 = sql_QUESTION4 + "    AND a.set_no= '" + p_set_no_Param + "' ";
		sql_QUESTION4 = sql_QUESTION4 + "    AND a.title_no = c.title_no  ";
		sql_QUESTION4 = sql_QUESTION4 + "    AND a.title_no = d.title_no ";
		sql_QUESTION4 = sql_QUESTION4 + "    AND a.set_no = d.set_no  ";
		sql_QUESTION4 = sql_QUESTION4 + "    AND a.question_no = d.question_no  ";
		sql_QUESTION4 = sql_QUESTION4 + "    AND a.title_no = e.title_no(+)  ";
		sql_QUESTION4 = sql_QUESTION4 + "    AND a.set_no = e.set_no(+)  ";
		sql_QUESTION4 = sql_QUESTION4 + "    AND a.question_no = e.question_no(+) ";
		sql_QUESTION4 = sql_QUESTION4 + "    AND ans_no != 0 ";
		sql_QUESTION4 = sql_QUESTION4 + "    AND a.question_gubun = 2 ";
		sql_QUESTION4 = sql_QUESTION4 + "    AND mod(a.question_no,3) in (0,1) ";
		sql_QUESTION4 = sql_QUESTION4 + "group by  ";
		sql_QUESTION4 = sql_QUESTION4 + "    a.title_no,a.set_no,a.question_no ";
		sql_QUESTION4 = sql_QUESTION4 + "order by  ";
		sql_QUESTION4 = sql_QUESTION4 + "    a.question_no";
		sql_QUESTION5_1 = "select ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "    a.question_no as question_no, ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "    min(a.question) as question, ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "    case when min(c.question_comm_gubun) = 5 and a.question_no > 11 and mod(a.question_no,3) = 1 then ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "	round((nvl(sum(decode(ans_no, 1, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "	when min(c.question_comm_gubun) = 3 and a.question_no > 8 and mod(a.question_no,3) = 1 then ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "	round((nvl(sum(decode(ans_no, 1, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "	else ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "	round((nvl(sum(decode(ans_no, 1, 1, 0)),0)+nvl(sum(decode(ans_no, 2, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "	end||'%' ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "	as enough_rat, ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "	'(보통: '|| ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "	case when min(c.question_comm_gubun) = 5 and a.question_no > 11 and mod(a.question_no,3) = 1 then ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "	round((nvl(sum(decode(ans_no, 2, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "	when min(c.question_comm_gubun) = 3 and a.question_no > 8 and mod(a.question_no,3) = 1 then ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "	round((nvl(sum(decode(ans_no, 2, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "	else ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "	round((nvl(sum(decode(ans_no, 3, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "	end||'%)' ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "	as regular_rat ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "from ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "	tb_grinq_question_set a,tb_grinq_ttl c,tb_grinq_samp_set d,tb_grinq_answer e ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "where ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "    a.title_no= '" + p_title_no_Param + "' ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "    AND a.set_no= '" + p_set_no_Param + "' ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "    AND a.title_no = c.title_no  ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "    AND a.title_no = d.title_no ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "    AND a.set_no = d.set_no  ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "    AND a.question_no = d.question_no  ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "    AND a.title_no = e.title_no(+)  ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "    AND a.set_no = e.set_no(+)  ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "    AND a.question_no = e.question_no(+) ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "    AND ans_no != 0 ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "    AND a.question_gubun = 2 ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "    AND mod(a.question_no,3) = 2 ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "group by  ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "    a.title_no,a.set_no,a.question_no ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "order by  ";
		sql_QUESTION5_1 = sql_QUESTION5_1 + "    a.question_no";
		sql_QUESTION5_2 = "select   ";
		sql_QUESTION5_2 = sql_QUESTION5_2 + "    min(name) as name, ";
		sql_QUESTION5_2 = sql_QUESTION5_2 + "    min(searchlecnm(grcode,grseq,tsubj)) as subjnm, ";
		sql_QUESTION5_2 = sql_QUESTION5_2 + "    round((nvl(sum(decode(ans_no,1,1,0)),0)+nvl(sum(decode(ans_no,2,1,0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2)||'%' as tutor_rat ";
		sql_QUESTION5_2 = sql_QUESTION5_2 + "from ";
		sql_QUESTION5_2 = sql_QUESTION5_2 + "    tb_grinq_question_set a,tb_tutor b,tb_grinq_ttl c ,tb_grinq_answer d ";
		sql_QUESTION5_2 = sql_QUESTION5_2 + "where  ";
		sql_QUESTION5_2 = sql_QUESTION5_2 + "    a.title_no='" + p_title_no_Param + "' ";
		sql_QUESTION5_2 = sql_QUESTION5_2 + "    AND a.set_no='" + p_set_no_Param + "' ";
		sql_QUESTION5_2 = sql_QUESTION5_2 + "    AND question_gubun=2  ";
		sql_QUESTION5_2 = sql_QUESTION5_2 + "    AND tsubj is not null  ";
		sql_QUESTION5_2 = sql_QUESTION5_2 + "    AND tuserno is not null ";
		sql_QUESTION5_2 = sql_QUESTION5_2 + "    AND a.tuserno = b.userno  ";
		sql_QUESTION5_2 = sql_QUESTION5_2 + "    AND a.title_no = c.title_no ";
		sql_QUESTION5_2 = sql_QUESTION5_2 + "    AND a.title_no = d.title_no ";
		sql_QUESTION5_2 = sql_QUESTION5_2 + "    AND a.set_no = d.set_no ";
		sql_QUESTION5_2 = sql_QUESTION5_2 + "    AND a.question_no = d.question_no ";
		sql_QUESTION5_2 = sql_QUESTION5_2 + "    AND ans_no != 0 ";
		sql_QUESTION5_2 = sql_QUESTION5_2 + "group by  ";
		sql_QUESTION5_2 = sql_QUESTION5_2 + "    a.title_no,a.set_no,a.question_no ";
		sql_QUESTION5_2 = sql_QUESTION5_2 + "having  ";
		sql_QUESTION5_2 = sql_QUESTION5_2 + "    round((nvl(sum(decode(ans_no,1,1,0)),0)+nvl(sum(decode(ans_no,2,1,0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) >= 60 ";
		sql_QUESTION5_2 = sql_QUESTION5_2 + "order by  ";
		sql_QUESTION5_2 = sql_QUESTION5_2 + "    a.question_no";
		sql_QUESTION5_3 = "select   ";
		sql_QUESTION5_3 = sql_QUESTION5_3 + "    min(name) as name, ";
		sql_QUESTION5_3 = sql_QUESTION5_3 + "    min(searchlecnm(grcode,grseq,tsubj)) as subjnm, ";
		sql_QUESTION5_3 = sql_QUESTION5_3 + "    round((nvl(sum(decode(ans_no,1,1,0)),0)+nvl(sum(decode(ans_no,2,1,0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2)||'%' as tutor_rat ";
		sql_QUESTION5_3 = sql_QUESTION5_3 + "from ";
		sql_QUESTION5_3 = sql_QUESTION5_3 + "    tb_grinq_question_set a,tb_tutor b,tb_grinq_ttl c ,tb_grinq_answer d ";
		sql_QUESTION5_3 = sql_QUESTION5_3 + "where  ";
		sql_QUESTION5_3 = sql_QUESTION5_3 + "    a.title_no='" + p_title_no_Param + "' ";
		sql_QUESTION5_3 = sql_QUESTION5_3 + "    AND a.set_no='" + p_set_no_Param + "' ";
		sql_QUESTION5_3 = sql_QUESTION5_3 + "    AND question_gubun=2  ";
		sql_QUESTION5_3 = sql_QUESTION5_3 + "    AND tsubj is not null  ";
		sql_QUESTION5_3 = sql_QUESTION5_3 + "    AND tuserno is not null ";
		sql_QUESTION5_3 = sql_QUESTION5_3 + "    AND a.tuserno = b.userno  ";
		sql_QUESTION5_3 = sql_QUESTION5_3 + "    AND a.title_no = c.title_no ";
		sql_QUESTION5_3 = sql_QUESTION5_3 + "    AND a.title_no = d.title_no ";
		sql_QUESTION5_3 = sql_QUESTION5_3 + "    AND a.set_no = d.set_no ";
		sql_QUESTION5_3 = sql_QUESTION5_3 + "    AND a.question_no = d.question_no ";
		sql_QUESTION5_3 = sql_QUESTION5_3 + "    AND ans_no != 0 ";
		sql_QUESTION5_3 = sql_QUESTION5_3 + "group by  ";
		sql_QUESTION5_3 = sql_QUESTION5_3 + "    a.title_no,a.set_no,a.question_no ";
		sql_QUESTION5_3 = sql_QUESTION5_3 + "having  ";
		sql_QUESTION5_3 = sql_QUESTION5_3 + "    round((nvl(sum(decode(ans_no,1,1,0)),0)+nvl(sum(decode(ans_no,2,1,0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) < 60 ";
		sql_QUESTION5_3 = sql_QUESTION5_3 + "order by  ";
		sql_QUESTION5_3 = sql_QUESTION5_3 + "    a.question_no";
		sql_QUESTION_JU = "SELECT question  ";
		sql_QUESTION_JU = sql_QUESTION_JU + "FROM  ";
		sql_QUESTION_JU = sql_QUESTION_JU + "tb_grinq_bank_question a, ";
		sql_QUESTION_JU = sql_QUESTION_JU + "tb_grinq_bank_samp b ";
		sql_QUESTION_JU = sql_QUESTION_JU + "WHERE  ";
		sql_QUESTION_JU = sql_QUESTION_JU + "a.question_no = b.question_no ";
		sql_QUESTION_JU = sql_QUESTION_JU + "AND ";
		sql_QUESTION_JU = sql_QUESTION_JU + "a.question_comm_gubun in (5,3) ";
		sql_QUESTION_JU = sql_QUESTION_JU + "AND  ";
		sql_QUESTION_JU = sql_QUESTION_JU + "b.answer_kind = '4' ";
		sql_QUESTION_JU = sql_QUESTION_JU + "ORDER BY a.question_no";
		sql_grgubun_info = "SELECT sbgubun01, ";
		sql_grgubun_info = sql_grgubun_info + "       DECODE (NVL (sbgubun01 + sbgubun02 + sbgubun03, 0), ";
		sql_grgubun_info = sql_grgubun_info + "               0, 0, ";
		sql_grgubun_info = sql_grgubun_info + "               ROUND (sbgubun01 / (sbgubun01 + sbgubun02 + sbgubun03) * 100, ";
		sql_grgubun_info = sql_grgubun_info + "                      2) ";
		sql_grgubun_info = sql_grgubun_info + "              ) sbgubunpe01, ";
		sql_grgubun_info = sql_grgubun_info + "       sbgubun02, ";
		sql_grgubun_info = sql_grgubun_info + "       DECODE (NVL (sbgubun01 + sbgubun02 + sbgubun03, 0), ";
		sql_grgubun_info = sql_grgubun_info + "               0, 0, ";
		sql_grgubun_info = sql_grgubun_info + "               ROUND (sbgubun02 / (sbgubun01 + sbgubun02 + sbgubun03) * 100, ";
		sql_grgubun_info = sql_grgubun_info + "                      2) ";
		sql_grgubun_info = sql_grgubun_info + "              ) sbgubunpe02, ";
		sql_grgubun_info = sql_grgubun_info + "       sbgubun02_1, ";
		sql_grgubun_info = sql_grgubun_info + "       DECODE (NVL (sbgubun01 + sbgubun02 + sbgubun03, 0), ";
		sql_grgubun_info = sql_grgubun_info + "               0, 0, ";
		sql_grgubun_info = sql_grgubun_info + "               ROUND (sbgubun02_1 / (sbgubun01 + sbgubun02 + sbgubun03) * 100, ";
		sql_grgubun_info = sql_grgubun_info + "                      2 ";
		sql_grgubun_info = sql_grgubun_info + "                     ) ";
		sql_grgubun_info = sql_grgubun_info + "              ) sbgubunpe02_1, ";
		sql_grgubun_info = sql_grgubun_info + "       sbgubun02_2, ";
		sql_grgubun_info = sql_grgubun_info + "       DECODE (NVL (sbgubun01 + sbgubun02 + sbgubun03, 0), ";
		sql_grgubun_info = sql_grgubun_info + "               0, 0, ";
		sql_grgubun_info = sql_grgubun_info + "               ROUND (sbgubun02_2 / (sbgubun01 + sbgubun02 + sbgubun03) * 100, ";
		sql_grgubun_info = sql_grgubun_info + "                      2 ";
		sql_grgubun_info = sql_grgubun_info + "                     ) ";
		sql_grgubun_info = sql_grgubun_info + "              ) sbgubunpe02_2, ";
		sql_grgubun_info = sql_grgubun_info + "       sbgubun02_3, ";
		sql_grgubun_info = sql_grgubun_info + "       DECODE (NVL (sbgubun01 + sbgubun02 + sbgubun03, 0), ";
		sql_grgubun_info = sql_grgubun_info + "               0, 0, ";
		sql_grgubun_info = sql_grgubun_info + "               ROUND (sbgubun02_3 / (sbgubun01 + sbgubun02 + sbgubun03) * 100, ";
		sql_grgubun_info = sql_grgubun_info + "                      2 ";
		sql_grgubun_info = sql_grgubun_info + "                     ) ";
		sql_grgubun_info = sql_grgubun_info + "              ) sbgubunpe02_3,               ";
		sql_grgubun_info = sql_grgubun_info + "       sbgubun03, ";
		sql_grgubun_info = sql_grgubun_info + "       DECODE (NVL (sbgubun01 + sbgubun02 + sbgubun03, 0), ";
		sql_grgubun_info = sql_grgubun_info + "               0, 0, ";
		sql_grgubun_info = sql_grgubun_info + "               ROUND (sbgubun03 / (sbgubun01 + sbgubun02 + sbgubun03) * 100, ";
		sql_grgubun_info = sql_grgubun_info + "                      2) ";
		sql_grgubun_info = sql_grgubun_info + "              ) sbgubunpe03 ";
		sql_grgubun_info = sql_grgubun_info + "  FROM (SELECT SUM (DECODE (NVL (b.subjgubun, '03'), ";
		sql_grgubun_info = sql_grgubun_info + "                            '01', DECODE (b.subj, 'SUB1000026', 0.5, 1), ";
		sql_grgubun_info = sql_grgubun_info + "                            0 ";
		sql_grgubun_info = sql_grgubun_info + "                           ) ";
		sql_grgubun_info = sql_grgubun_info + "                   ) sbgubun01, ";
		sql_grgubun_info = sql_grgubun_info + "               SUM (DECODE (NVL (b.subjgubun, '03'), ";
		sql_grgubun_info = sql_grgubun_info + "                            '02', DECODE (b.subj, 'SUB1000026', 0.5, 1), ";
		sql_grgubun_info = sql_grgubun_info + "                            0 ";
		sql_grgubun_info = sql_grgubun_info + "                           ) ";
		sql_grgubun_info = sql_grgubun_info + "                   ) sbgubun02, ";
		sql_grgubun_info = sql_grgubun_info + "               SUM ";
		sql_grgubun_info = sql_grgubun_info + "                  (CASE ";
		sql_grgubun_info = sql_grgubun_info + "                      WHEN NVL (b.subjgubun, '03') = '02' AND b.subjtype = 'N' ";
		sql_grgubun_info = sql_grgubun_info + "                         THEN DECODE (b.subj, 'SUB1000026', 0.5, 1) ";
		sql_grgubun_info = sql_grgubun_info + "                      ELSE 0 ";
		sql_grgubun_info = sql_grgubun_info + "                   END ";
		sql_grgubun_info = sql_grgubun_info + "                  ) sbgubun02_1, ";
		sql_grgubun_info = sql_grgubun_info + "               SUM ";
		sql_grgubun_info = sql_grgubun_info + "                  (CASE ";
		sql_grgubun_info = sql_grgubun_info + "                      WHEN NVL (b.subjgubun, '03') = '02' AND b.subjtype = 'Y' ";
		sql_grgubun_info = sql_grgubun_info + "                         THEN DECODE (b.subj, 'SUB1000026', 0.5, 1) ";
		sql_grgubun_info = sql_grgubun_info + "                      ELSE 0 ";
		sql_grgubun_info = sql_grgubun_info + "                   END ";
		sql_grgubun_info = sql_grgubun_info + "                  ) sbgubun02_2, ";
		sql_grgubun_info = sql_grgubun_info + "               SUM ";
		sql_grgubun_info = sql_grgubun_info + "                  (CASE ";
		sql_grgubun_info = sql_grgubun_info + "                      WHEN NVL (b.subjgubun, '03') = '02' AND b.subjtype = 'S' ";
		sql_grgubun_info = sql_grgubun_info + "                         THEN DECODE (b.subj, 'SUB1000026', 0.5, 1) ";
		sql_grgubun_info = sql_grgubun_info + "                      ELSE 0 ";
		sql_grgubun_info = sql_grgubun_info + "                   END ";
		sql_grgubun_info = sql_grgubun_info + "                  ) sbgubun02_3,                   ";
		sql_grgubun_info = sql_grgubun_info + "               SUM (DECODE (NVL (b.subjgubun, '03'), '03', 1, 0)) sbgubun03 ";
		sql_grgubun_info = sql_grgubun_info + "          FROM tb_timetable a, tb_subj b, tb_member c, tb_classtutor d ";
		sql_grgubun_info = sql_grgubun_info + "         WHERE a.grcode = '" + p_grcode_Param + "' ";
		sql_grgubun_info = sql_grgubun_info + "           AND a.grseq = '" + p_grseq_Param + "' ";
		sql_grgubun_info = sql_grgubun_info + "           AND a.subj = b.subj ";
		sql_grgubun_info = sql_grgubun_info + "           AND a.subj = d.subj(+) ";
		sql_grgubun_info = sql_grgubun_info + "           AND a.grcode = d.grcode(+) ";
		sql_grgubun_info = sql_grgubun_info + "           AND a.grseq = d.grseq(+) ";
		sql_grgubun_info = sql_grgubun_info + "           AND d.tuserno = c.userno(+) ";
		sql_grgubun_info = sql_grgubun_info + "           AND a.subj NOT IN ('SUB1000793'))";
		sql_GR_DETAIL_INFO = "/* Formatted on 2008/06/09 16:23 (Formatter Plus v4.8.8) */ ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "SELECT    TO_CHAR (a.started, 'YYYY.MM.DD') ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "       || ' ' ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "       || DECODE (TO_CHAR (a.started, 'D'), ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "                  '1', '(일)', ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "                  '2', '(월)', ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "                  '3', '(화)', ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "                  '4', '(수)', ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "                  '5', '(목)', ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "                  '6', '(금)', ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "                  '7', '(토)' ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "                 ) ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "       || ' ~ ' ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "       || TO_CHAR (a.enddate, 'MM.DD') ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "       || ' ' ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "       || DECODE (TO_CHAR (a.enddate, 'D'), ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "                  '1', '(일)', ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "                  '2', '(월)', ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "                  '3', '(화)', ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "                  '4', '(수)', ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "                  '5', '(목)', ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "                  '6', '(금)', ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "                  '7', '(토)' ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "                 ) period, ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "       decode(b.classroom_name, null, '정보없음', b.classroom_name || ' (' || b.classroom_place || ' ' || b.classroom_floor || ')') AS classroom, ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "       decode(searchname (a.grseqman_userno), null, '정보없음', searchname (a.grseqman_userno)) AS grseqman_name ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "  FROM tb_grseq a, tb_classroom b ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + " WHERE a.classroom_no = b.classroom_no(+) ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "   AND a.grcode = '" + p_grcode_Param + "' ";
		sql_GR_DETAIL_INFO = sql_GR_DETAIL_INFO + "   AND a.grseq = '" + p_grseq_Param + "'";
		sql_qry_QUESTION_LIST = "select ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        question_no, ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        total_cnt, ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        question, ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        question_gubun, ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        (anscnt1_rat + anscnt2_rat) as anscnt1_rat, --맞나요? 넵        ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        (anscnt4_rat + anscnt5_rat) as anscnt2_rat, --맞나요? 넵 ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        anscnt3_rat as anscnt3_rat, ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        round((anscnt1 * 5 +  anscnt2 * 4 + anscnt3 * 3 + anscnt4 * 2 + anscnt5 * 1) / total_cnt * 20 ,1) as rat ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "from ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "( ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "    select ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        a.question_no as question_no, ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        count(ans_no) as total_cnt, ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        min(a.question) as question, ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        min(question_gubun) as question_gubun, ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        nvl(sum(decode(ans_no,1,1,0)),0) as anscnt1, ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        round(nvl(sum(decode(ans_no,1,1,0)),0)/decode(count(ans_no),0,1,count(ans_no))*100,1)  as anscnt1_rat, ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        nvl(sum(decode(ans_no,2,1,0)),0) as anscnt2, ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        round(nvl(sum(decode(ans_no,2,1,0)),0)/decode(count(ans_no),0,1,count(ans_no))*100,1)  as anscnt2_rat, ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        nvl(sum(decode(ans_no,3,1,0)),0) as anscnt3, ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        round(nvl(sum(decode(ans_no,3,1,0)),0)/decode(count(ans_no),0,1,count(ans_no))*100,1)  as anscnt3_rat, ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        nvl(sum(decode(ans_no,4,1,0)),0) as anscnt4, ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        round(nvl(sum(decode(ans_no,4,1,0)),0)/decode(count(ans_no),0,1,count(ans_no))*100,1)  as anscnt4_rat, ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        nvl(sum(decode(ans_no,5,1,0)),0) as anscnt5, ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        round(nvl(sum(decode(ans_no,5,1,0)),0)/decode(count(ans_no),0,1,count(ans_no))*100,1)  as anscnt5_rat, ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        round((nvl(sum(decode(ans_no, 1, 1, 0)),0)+nvl(sum(decode(ans_no, 2, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) as rat ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "    from ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        tb_grinq_question_set a,tb_grinq_ttl c,tb_grinq_answer e ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "    where ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        a.title_no= '" + p_title_no_Param + "' ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        AND a.set_no= '" + p_set_no_Param + "' ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        AND a.title_no = c.title_no ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        AND a.title_no = e.title_no(+) ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        AND a.set_no = e.set_no(+) ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        AND a.question_no = e.question_no(+) ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        AND ans_no != 0 ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        AND a.question_no  <= decode(question_comm_gubun,5,11,3,8,11) ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "    group by ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        a.title_no,a.set_no,a.question_no ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "    order by ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + "        a.question_no ";
		sql_qry_QUESTION_LIST = sql_qry_QUESTION_LIST + ") A";
		sql_QUESTION_LIST = "select ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        question_no, ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        total_cnt, ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        question, ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        question_gubun, ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        to_char(anscnt1) as anscnt1, ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        to_char(anscnt2) as anscnt2, ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        to_char(anscnt3) as anscnt3, ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        to_char(anscnt4) as anscnt4, ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        to_char(anscnt5) as anscnt5, ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        (anscnt1 + anscnt2) as anscnt11, ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        anscnt3 as anscnt22,       ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        (anscnt4 + anscnt5) as anscnt33,  ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        (anscnt1_rat + anscnt2_rat) || '%' as anscnt1_rat, ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        anscnt3_rat || '%' as anscnt2_rat,       ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        (anscnt4_rat + anscnt5_rat) || '%' as anscnt3_rat,  ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + " ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        round((anscnt1 * 1 +  anscnt2 * 2 + anscnt3 * 3 + anscnt4 * 4 + anscnt5 * 5) / total_cnt *20,1) || '%'  as rat ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "from ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "( ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "    select ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        a.question_no as question_no, ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        count(ans_no) as total_cnt, ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        min(a.question) as question, ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        min(question_gubun) as question_gubun, ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        nvl(sum(decode(ans_no,1,1,0)),0) as anscnt1, ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        round(nvl(sum(decode(ans_no,1,1,0)),0)/decode(count(ans_no),0,1,count(ans_no))*100,1)  as anscnt1_rat, ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        nvl(sum(decode(ans_no,2,1,0)),0) as anscnt2, ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        round(nvl(sum(decode(ans_no,2,1,0)),0)/decode(count(ans_no),0,1,count(ans_no))*100,1)  as anscnt2_rat, ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        nvl(sum(decode(ans_no,3,1,0)),0) as anscnt3, ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        round(nvl(sum(decode(ans_no,3,1,0)),0)/decode(count(ans_no),0,1,count(ans_no))*100,1)  as anscnt3_rat, ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        nvl(sum(decode(ans_no,4,1,0)),0) as anscnt4, ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        round(nvl(sum(decode(ans_no,4,1,0)),0)/decode(count(ans_no),0,1,count(ans_no))*100,1)  as anscnt4_rat, ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        nvl(sum(decode(ans_no,5,1,0)),0) as anscnt5, ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        round(nvl(sum(decode(ans_no,5,1,0)),0)/decode(count(ans_no),0,1,count(ans_no))*100,1)  as anscnt5_rat, ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        round((nvl(sum(decode(ans_no, 1, 1, 0)),0)+nvl(sum(decode(ans_no, 2, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) as rat ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "    from ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        tb_grinq_question_set a,tb_grinq_ttl c,tb_grinq_answer e ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "    where ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        a.title_no= '" + p_title_no_Param + "' ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        AND a.set_no= '" + p_set_no_Param + "' ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        AND a.title_no = c.title_no ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        AND a.title_no = e.title_no(+) ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        AND a.set_no = e.set_no(+) ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        AND a.question_no = e.question_no(+) ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        AND ans_no != 0 ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        AND a.question_no  <= decode(question_comm_gubun,5,11,3,8,11) ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "    group by ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        a.title_no,a.set_no,a.question_no ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "    order by ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + "        a.question_no ";
		sql_QUESTION_LIST = sql_QUESTION_LIST + ") A";
		sql_LIST = "SELECT ";
		sql_LIST = sql_LIST + "      name, ";
		sql_LIST = sql_LIST + "    subjnm, ";
		sql_LIST = sql_LIST + "    subj_ans1, subj_ans2, subj_ans3, subj_ans4, subj_ans5, ";
		sql_LIST = sql_LIST + "    subj_ans1_rat, subj_ans2_rat, subj_ans3_rat, subj_ans4_rat, subj_ans5_rat, ";
		sql_LIST = sql_LIST + "    (subj_ans1 + subj_ans2) as subj_ans11, ";
		sql_LIST = sql_LIST + "    (subj_ans3) as subj_ans22, ";
		sql_LIST = sql_LIST + "    (subj_ans4 + subj_ans5) as subj_ans33, ";
		sql_LIST = sql_LIST + "    round((subj_ans1_rat + subj_ans2_rat),1) || '%' as subj_ans11_rat, ";
		sql_LIST = sql_LIST + "    round((subj_ans3_rat),1) || '%' as subj_ans22_rat, ";
		sql_LIST = sql_LIST + "    round((subj_ans4_rat + subj_ans5_rat),1) || '%' as subj_ans33_rat, ";
		sql_LIST = sql_LIST + "    round(case when subj_ans_total > 0 then round((subj_ans1 * 1 +  subj_ans2 * 2 + subj_ans3 * 3 + subj_ans4 * 4 + subj_ans5 * 5) / subj_ans_total * 20,1)  else 0 end, 1) || '%' as subj_ans_avg, ";
		sql_LIST = sql_LIST + " ";
		sql_LIST = sql_LIST + "    stime_ans1, stime_ans2, stime_ans3, stime_ans4, stime_ans5, ";
		sql_LIST = sql_LIST + "    stime_ans1_rat, stime_ans2_rat, stime_ans3_rat, stime_ans4_rat, stime_ans5_rat,     ";
		sql_LIST = sql_LIST + "    (stime_ans1 + stime_ans2) as stime_ans11, ";
		sql_LIST = sql_LIST + "    (stime_ans3) as stime_ans22, ";
		sql_LIST = sql_LIST + "    (stime_ans4 + stime_ans5) as stime_ans33,     ";
		sql_LIST = sql_LIST + " ";
		sql_LIST = sql_LIST + "    round((stime_ans1_rat + stime_ans2_rat),1) || '%' as stime_ans11_rat, ";
		sql_LIST = sql_LIST + "    round((stime_ans3_rat),1) || '%' as stime_ans22_rat, ";
		sql_LIST = sql_LIST + "    round((stime_ans4_rat + stime_ans5_rat),1) || '%' as stime_ans33_rat, ";
		sql_LIST = sql_LIST + " ";
		sql_LIST = sql_LIST + "    round(case when stime_ans_total > 0 then round((stime_ans1 * 1 + stime_ans2 * 2 + stime_ans3 * 3 + stime_ans4 * 4 + stime_ans5 * 5) / stime_ans_total * 20,1) else 0 end, 1) || '%'  as stime_ans_avg, ";
		sql_LIST = sql_LIST + " ";
		sql_LIST = sql_LIST + "    tutor_ans1, tutor_ans2, tutor_ans3, tutor_ans4, tutor_ans5, ";
		sql_LIST = sql_LIST + "    tutor_ans1_rat, tutor_ans2_rat, tutor_ans3_rat, tutor_ans4_rat, tutor_ans5_rat,         ";
		sql_LIST = sql_LIST + "    (tutor_ans1 + tutor_ans2) as tutor_ans11, ";
		sql_LIST = sql_LIST + "    (tutor_ans3) as tutor_ans22, ";
		sql_LIST = sql_LIST + "    (tutor_ans4 + tutor_ans5) as tutor_ans33,     ";
		sql_LIST = sql_LIST + " ";
		sql_LIST = sql_LIST + "    round((tutor_ans1_rat + tutor_ans2_rat),1) || '%' as tutor_ans11_rat, ";
		sql_LIST = sql_LIST + "    round((tutor_ans3_rat),1) || '%' as tutor_ans22_rat, ";
		sql_LIST = sql_LIST + "    round((tutor_ans4_rat + tutor_ans5_rat),1) || '%' as tutor_ans33_rat, ";
		sql_LIST = sql_LIST + "     ";
		sql_LIST = sql_LIST + "    subj_ans_total,     ";
		sql_LIST = sql_LIST + "    stime_ans_total, ";
		sql_LIST = sql_LIST + "    tutor_ans_total, ";
		sql_LIST = sql_LIST + " ";
		sql_LIST = sql_LIST + "    round(case when tutor_ans_total > 0 then round((tutor_ans1 * 1 + tutor_ans2 * 2 + tutor_ans3 * 3 + tutor_ans4 * 4 + tutor_ans5 * 5) / tutor_ans_total * 20,1) else 0 end, 1) || '%' as tutor_ans_avg, ";
		sql_LIST = sql_LIST + "   round(( case when subj_ans_total > 0 then round((subj_ans1 * 1 +  subj_ans2 * 2 + subj_ans3 * 3 + subj_ans4 * 4 + subj_ans5 * 5) / subj_ans_total * 20,1)  else 0 end  ";
		sql_LIST = sql_LIST + "    + ";
		sql_LIST = sql_LIST + "    case when stime_ans_total > 0 then round((stime_ans1 * 1 + stime_ans2 * 2 + stime_ans3 * 3 + stime_ans4 * 4 + stime_ans5 * 5) / stime_ans_total * 20,1) else 0 end ";
		sql_LIST = sql_LIST + "    + ";
		sql_LIST = sql_LIST + "    case when stime_ans_total > 0 then round((stime_ans1 * 1 + stime_ans2 * 2 + stime_ans3 * 3 + stime_ans4 * 4 + stime_ans5 * 5) / stime_ans_total * 20,1) else 0 end ";
		sql_LIST = sql_LIST + "    )/3, 1) || '%' as total_avg ";
		sql_LIST = sql_LIST + "FROM ";
		sql_LIST = sql_LIST + "( ";
		sql_LIST = sql_LIST + "    select ";
		sql_LIST = sql_LIST + "      name, ";
		sql_LIST = sql_LIST + "      searchlecnm(grcode,grseq,tsubj) as subjnm, ";
		sql_LIST = sql_LIST + "      (select nvl(sum(decode(ans_no,1,1,0)),0) from tb_grinq_answer where question_no = a.question_no - 2 and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as subj_ans1, ";
		sql_LIST = sql_LIST + "      (select round(nvl(sum(decode(ans_no,1,1,0)),0)/decode(count(ans_no),0,1,count(ans_no))*100,2) from tb_grinq_answer where question_no = a.question_no - 2 and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as subj_ans1_rat, ";
		sql_LIST = sql_LIST + "      (select nvl(sum(decode(ans_no,2,1,0)),0) from tb_grinq_answer where question_no = a.question_no - 2 and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as subj_ans2, ";
		sql_LIST = sql_LIST + "      (select round(nvl(sum(decode(ans_no,2,1,0)),0)/decode(count(ans_no),0,1,count(ans_no))*100,2) from tb_grinq_answer where question_no = a.question_no - 2 and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as subj_ans2_rat, ";
		sql_LIST = sql_LIST + "      (select nvl(sum(decode(ans_no,3,1,0)),0) from tb_grinq_answer where question_no = a.question_no - 2 and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as subj_ans3, ";
		sql_LIST = sql_LIST + "      (select round(nvl(sum(decode(ans_no,3,1,0)),0)/decode(count(ans_no),0,1,count(ans_no))*100,2) from tb_grinq_answer where question_no = a.question_no - 2 and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as subj_ans3_rat, ";
		sql_LIST = sql_LIST + "      (select nvl(sum(decode(ans_no,4,1,0)),0) from tb_grinq_answer where question_no = a.question_no - 2 and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as subj_ans4, ";
		sql_LIST = sql_LIST + "      (select round(nvl(sum(decode(ans_no,4,1,0)),0)/decode(count(ans_no),0,1,count(ans_no))*100,2) from tb_grinq_answer where question_no = a.question_no - 2 and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as subj_ans4_rat, ";
		sql_LIST = sql_LIST + "      (select nvl(sum(decode(ans_no,5,1,0)),0) from tb_grinq_answer where question_no = a.question_no - 2 and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as subj_ans5, ";
		sql_LIST = sql_LIST + "      (select round(nvl(sum(decode(ans_no,5,1,0)),0)/decode(count(ans_no),0,1,count(ans_no))*100,2) from tb_grinq_answer where question_no = a.question_no - 2 and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as subj_ans5_rat, ";
		sql_LIST = sql_LIST + "       ";
		sql_LIST = sql_LIST + "      nvl((select count(*) from tb_grinq_answer where question_no = a.question_no - 2 and title_no = a.title_no and set_no = a.set_no and ans_no !=0),0) as subj_ans_total, ";
		sql_LIST = sql_LIST + "       ";
		sql_LIST = sql_LIST + "      (select nvl(sum(decode(ans_no,1,1,0)),0) from tb_grinq_answer where question_no = a.question_no - 1 and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as stime_ans1, ";
		sql_LIST = sql_LIST + "      (select round(nvl(sum(decode(ans_no,1,1,0)),0)/decode(count(ans_no),0,1,count(ans_no))*100,2) from tb_grinq_answer where question_no = a.question_no - 1 and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as stime_ans1_rat, ";
		sql_LIST = sql_LIST + "      (select nvl(sum(decode(ans_no,2,1,0)),0) from tb_grinq_answer where question_no = a.question_no - 1 and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as stime_ans2, ";
		sql_LIST = sql_LIST + "      (select round(nvl(sum(decode(ans_no,2,1,0)),0)/decode(count(ans_no),0,1,count(ans_no))*100,2) from tb_grinq_answer where question_no = a.question_no - 1 and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as stime_ans2_rat, ";
		sql_LIST = sql_LIST + "      (select nvl(sum(decode(ans_no,3,1,0)),0) from tb_grinq_answer where question_no = a.question_no - 1 and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as stime_ans3, ";
		sql_LIST = sql_LIST + "      (select round(nvl(sum(decode(ans_no,3,1,0)),0)/decode(count(ans_no),0,1,count(ans_no))*100,2) from tb_grinq_answer where question_no = a.question_no - 1 and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as stime_ans3_rat, ";
		sql_LIST = sql_LIST + "      (select nvl(sum(decode(ans_no,4,1,0)),0) from tb_grinq_answer where question_no = a.question_no - 1 and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as stime_ans4, ";
		sql_LIST = sql_LIST + "      (select round(nvl(sum(decode(ans_no,4,1,0)),0)/decode(count(ans_no),0,1,count(ans_no))*100,2) from tb_grinq_answer where question_no = a.question_no - 1 and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as stime_ans4_rat, ";
		sql_LIST = sql_LIST + "      (select nvl(sum(decode(ans_no,5,1,0)),0) from tb_grinq_answer where question_no = a.question_no - 1 and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as stime_ans5, ";
		sql_LIST = sql_LIST + "      (select round(nvl(sum(decode(ans_no,5,1,0)),0)/decode(count(ans_no),0,1,count(ans_no))*100,2) from tb_grinq_answer where question_no = a.question_no - 1 and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as stime_ans5_rat, ";
		sql_LIST = sql_LIST + " ";
		sql_LIST = sql_LIST + "      nvl((select count(*) from tb_grinq_answer where question_no = a.question_no - 1 and title_no = a.title_no and set_no = a.set_no and ans_no !=0), 0) as stime_ans_total, ";
		sql_LIST = sql_LIST + "       ";
		sql_LIST = sql_LIST + "      (select nvl(sum(decode(ans_no,1,1,0)),0) from tb_grinq_answer where question_no = a.question_no and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as tutor_ans1, ";
		sql_LIST = sql_LIST + "      (select round(nvl(sum(decode(ans_no,1,1,0)),0)/decode(count(ans_no),0,1,count(ans_no))*100,2) from tb_grinq_answer where question_no = a.question_no and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as tutor_ans1_rat, ";
		sql_LIST = sql_LIST + "      (select nvl(sum(decode(ans_no,2,1,0)),0) from tb_grinq_answer where question_no = a.question_no and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as tutor_ans2, ";
		sql_LIST = sql_LIST + "      (select round(nvl(sum(decode(ans_no,2,1,0)),0)/decode(count(ans_no),0,1,count(ans_no))*100,2) from tb_grinq_answer where question_no = a.question_no and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as tutor_ans2_rat, ";
		sql_LIST = sql_LIST + "      (select nvl(sum(decode(ans_no,3,1,0)),0) from tb_grinq_answer where question_no = a.question_no and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as tutor_ans3, ";
		sql_LIST = sql_LIST + "      (select round(nvl(sum(decode(ans_no,3,1,0)),0)/decode(count(ans_no),0,1,count(ans_no))*100,2) from tb_grinq_answer where question_no = a.question_no and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as tutor_ans3_rat, ";
		sql_LIST = sql_LIST + "      (select nvl(sum(decode(ans_no,4,1,0)),0) from tb_grinq_answer where question_no = a.question_no and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as tutor_ans4, ";
		sql_LIST = sql_LIST + "      (select round(nvl(sum(decode(ans_no,4,1,0)),0)/decode(count(ans_no),0,1,count(ans_no))*100,2) from tb_grinq_answer where question_no = a.question_no and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as tutor_ans4_rat, ";
		sql_LIST = sql_LIST + "      (select nvl(sum(decode(ans_no,5,1,0)),0) from tb_grinq_answer where question_no = a.question_no and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as tutor_ans5, ";
		sql_LIST = sql_LIST + "      (select round(nvl(sum(decode(ans_no,5,1,0)),0)/decode(count(ans_no),0,1,count(ans_no))*100,2) from tb_grinq_answer where question_no = a.question_no and title_no = a.title_no and set_no = a.set_no and ans_no !=0) as tutor_ans5_rat,   ";
		sql_LIST = sql_LIST + " ";
		sql_LIST = sql_LIST + "      nvl((select count(*) from tb_grinq_answer where question_no = a.question_no and title_no = a.title_no and set_no = a.set_no and ans_no !=0), 0) as tutor_ans_total ";
		sql_LIST = sql_LIST + "       ";
		sql_LIST = sql_LIST + "      from tb_grinq_question_set a,tb_tutor b,tb_grinq_ttl c ";
		sql_LIST = sql_LIST + "      where a.title_no='" + p_title_no_Param + "' AND set_no='" + p_set_no_Param + "' AND question_gubun=2 AND tsubj is not null AND tuserno is not null ";
		sql_LIST = sql_LIST + "      AND a.tuserno = b.userno AND a.title_no = c.title_no ";
		sql_LIST = sql_LIST + "    order by question_no ";
		sql_LIST = sql_LIST + ") A";
		sql_QUESTION1 = "select ";
		sql_QUESTION1 = sql_QUESTION1 + "    a.question_no as question_no, ";
		sql_QUESTION1 = sql_QUESTION1 + "    min(a.question) as question, ";
		sql_QUESTION1 = sql_QUESTION1 + "    case when min(c.question_comm_gubun) = 5 and a.question_no > 11 and mod(a.question_no,3) = 1 then ";
		sql_QUESTION1 = sql_QUESTION1 + "	round((nvl(sum(decode(ans_no, 1, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION1 = sql_QUESTION1 + "	when min(c.question_comm_gubun) = 3 and a.question_no > 8 and mod(a.question_no,3) = 1 then ";
		sql_QUESTION1 = sql_QUESTION1 + "	round((nvl(sum(decode(ans_no, 1, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION1 = sql_QUESTION1 + "	else ";
		sql_QUESTION1 = sql_QUESTION1 + "	round((nvl(sum(decode(ans_no, 1, 1, 0)),0)+nvl(sum(decode(ans_no, 2, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION1 = sql_QUESTION1 + "	end||'%' ";
		sql_QUESTION1 = sql_QUESTION1 + "	as enough_rat, ";
		sql_QUESTION1 = sql_QUESTION1 + "	'(보통: '|| ";
		sql_QUESTION1 = sql_QUESTION1 + "	case when min(c.question_comm_gubun) = 5 and a.question_no > 11 and mod(a.question_no,3) = 1 then ";
		sql_QUESTION1 = sql_QUESTION1 + "	round((nvl(sum(decode(ans_no, 2, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION1 = sql_QUESTION1 + "	when min(c.question_comm_gubun) = 3 and a.question_no > 8 and mod(a.question_no,3) = 1 then ";
		sql_QUESTION1 = sql_QUESTION1 + "	round((nvl(sum(decode(ans_no, 2, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION1 = sql_QUESTION1 + "	else ";
		sql_QUESTION1 = sql_QUESTION1 + "	round((nvl(sum(decode(ans_no, 3, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION1 = sql_QUESTION1 + "	end||'%)' ";
		sql_QUESTION1 = sql_QUESTION1 + "	as regular_rat ";
		sql_QUESTION1 = sql_QUESTION1 + "from ";
		sql_QUESTION1 = sql_QUESTION1 + "	tb_grinq_question_set a,tb_grinq_ttl c,tb_grinq_samp_set d,tb_grinq_answer e ";
		sql_QUESTION1 = sql_QUESTION1 + "where ";
		sql_QUESTION1 = sql_QUESTION1 + "    a.title_no= '" + p_title_no_Param + "' ";
		sql_QUESTION1 = sql_QUESTION1 + "    AND a.set_no= '" + p_set_no_Param + "' ";
		sql_QUESTION1 = sql_QUESTION1 + "    AND a.title_no = c.title_no  ";
		sql_QUESTION1 = sql_QUESTION1 + "    AND a.title_no = d.title_no ";
		sql_QUESTION1 = sql_QUESTION1 + "    AND a.set_no = d.set_no  ";
		sql_QUESTION1 = sql_QUESTION1 + "    AND a.question_no = d.question_no  ";
		sql_QUESTION1 = sql_QUESTION1 + "    AND a.title_no = e.title_no(+)  ";
		sql_QUESTION1 = sql_QUESTION1 + "    AND a.set_no = e.set_no(+)  ";
		sql_QUESTION1 = sql_QUESTION1 + "    AND a.question_no = e.question_no(+) ";
		sql_QUESTION1 = sql_QUESTION1 + "    AND ans_no != 0 ";
		sql_QUESTION1 = sql_QUESTION1 + "    AND a.question_no <= (decode(c.question_comm_gubun,5,11,3,11,11)) ";
		sql_QUESTION1 = sql_QUESTION1 + "group by  ";
		sql_QUESTION1 = sql_QUESTION1 + "    a.title_no,a.set_no,a.question_no ";
		sql_QUESTION1 = sql_QUESTION1 + "order by  ";
		sql_QUESTION1 = sql_QUESTION1 + "    a.question_no";
		sql_QUESTION2 = "select ";
		sql_QUESTION2 = sql_QUESTION2 + "    a.question_no as question_no, ";
		sql_QUESTION2 = sql_QUESTION2 + "    min(a.question) as question, ";
		sql_QUESTION2 = sql_QUESTION2 + "	sum(case when ans_no = 1 then 1 else 0 end) as sub_cnt1, ";
		sql_QUESTION2 = sql_QUESTION2 + "	round(sum(case when ans_no = 1 then 1 else 0 end)/count(*)*100,1)  || '%' as sub_cnt1_rat, ";
		sql_QUESTION2 = sql_QUESTION2 + "	(select answer from tb_grinq_samp_set where title_no = a.title_no and set_no = a.set_no and question_no = a.question_no and answer_no = 1 )as sub_cnt1_ans, ";
		sql_QUESTION2 = sql_QUESTION2 + "	sum(case when ans_no = 2 then 1 else 0 end) as sub_cnt2, ";
		sql_QUESTION2 = sql_QUESTION2 + "	round(sum(case when ans_no = 2 then 1 else 0 end)/count(*)*100,1) || '%' as sub_cnt2_rat, ";
		sql_QUESTION2 = sql_QUESTION2 + "	(select answer from tb_grinq_samp_set where title_no = a.title_no and set_no = a.set_no and question_no = a.question_no and answer_no = 2 )as sub_cnt2_ans, ";
		sql_QUESTION2 = sql_QUESTION2 + "	sum(case when ans_no = 3 then 1 else 0 end) as sub_cnt3, ";
		sql_QUESTION2 = sql_QUESTION2 + "	round(sum(case when ans_no = 3 then 1 else 0 end)/count(*)*100,1) || '%' as sub_cnt3_rat, ";
		sql_QUESTION2 = sql_QUESTION2 + "	(select answer from tb_grinq_samp_set where title_no = a.title_no and set_no = a.set_no and question_no = a.question_no and answer_no = 3 )as sub_cnt3_ans, ";
		sql_QUESTION2 = sql_QUESTION2 + "	sum(case when ans_no = 4 then 1 else 0 end) as sub_cnt4, ";
		sql_QUESTION2 = sql_QUESTION2 + "	round(sum(case when ans_no = 4 then 1 else 0 end)/count(*)*100,1) || '%' as sub_cnt4_rat, ";
		sql_QUESTION2 = sql_QUESTION2 + "	(select answer from tb_grinq_samp_set where title_no = a.title_no and set_no = a.set_no and question_no = a.question_no and answer_no = 4 )as sub_cnt4_ans, ";
		sql_QUESTION2 = sql_QUESTION2 + "	sum(case when ans_no = 5 then 1 else 0 end) as sub_cnt5, ";
		sql_QUESTION2 = sql_QUESTION2 + "	round(sum(case when ans_no = 5 then 1 else 0 end)/count(*)*100,1) || '%' as sub_cnt5_rat, ";
		sql_QUESTION2 = sql_QUESTION2 + "	(select answer from tb_grinq_samp_set where title_no = a.title_no and set_no = a.set_no and question_no = a.question_no and answer_no = 5 )as sub_cnt5_ans, ";
		sql_QUESTION2 = sql_QUESTION2 + "	--min(answer) as answer, ";
		sql_QUESTION2 = sql_QUESTION2 + "            case when min(c.question_comm_gubun) = 5 and a.question_no > 11 and mod(a.question_no,3) = 1 then ";
		sql_QUESTION2 = sql_QUESTION2 + "	round((nvl(sum(decode(ans_no, 1, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION2 = sql_QUESTION2 + "	when min(c.question_comm_gubun) = 3 and a.question_no > 8 and mod(a.question_no,3) = 1 then ";
		sql_QUESTION2 = sql_QUESTION2 + "	round((nvl(sum(decode(ans_no, 1, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION2 = sql_QUESTION2 + "	else ";
		sql_QUESTION2 = sql_QUESTION2 + "	round((nvl(sum(decode(ans_no, 1, 1, 0)),0)+nvl(sum(decode(ans_no, 2, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION2 = sql_QUESTION2 + "	end||'%' ";
		sql_QUESTION2 = sql_QUESTION2 + "	as enough_rat, ";
		sql_QUESTION2 = sql_QUESTION2 + "	'(보통: '|| ";
		sql_QUESTION2 = sql_QUESTION2 + "	case when min(c.question_comm_gubun) = 5 and a.question_no > 11 and mod(a.question_no,3) = 1 then ";
		sql_QUESTION2 = sql_QUESTION2 + "	round((nvl(sum(decode(ans_no, 2, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION2 = sql_QUESTION2 + "	when min(c.question_comm_gubun) = 3 and a.question_no > 8 and mod(a.question_no,3) = 1 then ";
		sql_QUESTION2 = sql_QUESTION2 + "	round((nvl(sum(decode(ans_no, 2, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION2 = sql_QUESTION2 + "	else ";
		sql_QUESTION2 = sql_QUESTION2 + "	round((nvl(sum(decode(ans_no, 3, 1, 0)),0))/decode(count(ans_no),0,1,count(ans_no))*100,2) ";
		sql_QUESTION2 = sql_QUESTION2 + "	end||'%)' ";
		sql_QUESTION2 = sql_QUESTION2 + "	as regular_rat ";
		sql_QUESTION2 = sql_QUESTION2 + "from ";
		sql_QUESTION2 = sql_QUESTION2 + "	tb_grinq_question_set a,tb_grinq_ttl c,tb_grinq_samp_set d,tb_grinq_answer e ";
		sql_QUESTION2 = sql_QUESTION2 + "where ";
		sql_QUESTION2 = sql_QUESTION2 + "    a.title_no= '" + p_title_no_Param + "' ";
		sql_QUESTION2 = sql_QUESTION2 + "    AND a.set_no= '" + p_set_no_Param + "' ";
		sql_QUESTION2 = sql_QUESTION2 + "    AND a.title_no = c.title_no  ";
		sql_QUESTION2 = sql_QUESTION2 + "    AND a.title_no = d.title_no ";
		sql_QUESTION2 = sql_QUESTION2 + "    AND a.set_no = d.set_no  ";
		sql_QUESTION2 = sql_QUESTION2 + "    AND a.question_no = d.question_no  ";
		sql_QUESTION2 = sql_QUESTION2 + "    AND a.title_no = e.title_no(+)  ";
		sql_QUESTION2 = sql_QUESTION2 + "    AND a.set_no = e.set_no(+)  ";
		sql_QUESTION2 = sql_QUESTION2 + "    AND a.question_no = e.question_no(+) ";
		sql_QUESTION2 = sql_QUESTION2 + "    AND ans_no != 0 ";
		sql_QUESTION2 = sql_QUESTION2 + "    AND a.question_no  ";
		sql_QUESTION2 = sql_QUESTION2 + "    between (decode(c.question_comm_gubun,5,12,3,12,12)) ";
		sql_QUESTION2 = sql_QUESTION2 + "    and (decode(c.question_comm_gubun,5,16,3,16,16)) ";
		sql_QUESTION2 = sql_QUESTION2 + "group by  ";
		sql_QUESTION2 = sql_QUESTION2 + "    a.title_no,a.set_no,a.question_no ";
		sql_QUESTION2 = sql_QUESTION2 + "order by  ";
		sql_QUESTION2 = sql_QUESTION2 + "    a.question_no";
	}

	private void initSQLQUESTVarient(){
		sql_QUEST = "SELECT  NO ";
		sql_QUEST = sql_QUEST + ", REGDATE ";
		sql_QUEST = sql_QUEST + ", USERNO ";
		sql_QUEST = sql_QUEST + ", NAME ";
		sql_QUEST = sql_QUEST + ", DEPTH ";
		sql_QUEST = sql_QUEST + ", REF_NO ";
		sql_QUEST = sql_QUEST + ", TITLE ";
		sql_QUEST = sql_QUEST + ",  CATEGORY ";
		sql_QUEST = sql_QUEST + ", ''  AS CONTENT FROM TB_GRSUGGESTION  ";
		sql_QUEST = sql_QUEST + "WHERE GRCODE = '" + p_grcode_Param + "'  ";
		sql_QUEST = sql_QUEST + "AND GRSEQ = '" + p_grseq_Param + "'  ";
		sql_QUEST = sql_QUEST + "AND DEPTH=0  ";
		sql_QUEST = sql_QUEST + "AND CATEGORY='" + CATEGORY_CATEGORY + "' ";
		sql_QUEST = sql_QUEST + "ORDER BY NO";
	}

	private void initSQLANSVarient(){
		sql_ANS = "SELECT ''  AS CONTENT  ";
		sql_ANS = sql_ANS + "FROM TB_GRSUGGESTION  ";
		sql_ANS = sql_ANS + "WHERE GRCODE='" + p_grcode_Param + "'  ";
		sql_ANS = sql_ANS + "AND GRSEQ='" + p_grseq_Param + "'  ";
		sql_ANS = sql_ANS + "AND DEPTH=1  ";
		sql_ANS = sql_ANS + "AND  REF_NO = '" + QUEST_NO + "'";
	}

	//-----ResultSet 객체에서 필드 값 설정 함수-----
	//ResultSet GR_INFO 객체에서 필드 값 설정 함수
	private void setFieldVariableFromGR_INFO() throws Exception{
		GR_INFO_GRCODENM=GetB(GR_INFO.getString(1));
		GR_INFO_STARTED=GetB(GR_INFO.getString(2));
		GR_INFO_ENDDATE=GetB(GR_INFO.getString(3));
	}

	//ResultSet GR_INFO 객체의 필드 값 초기화 함수
	private void setFieldInitFromGR_INFO(){
		GR_INFO_GRCODENM="";
		GR_INFO_STARTED="";
		GR_INFO_ENDDATE="";
	}

	//ResultSet GR_BASIC_INFO 객체에서 필드 값 설정 함수
	private void setFieldVariableFromGR_BASIC_INFO() throws Exception{
		GR_BASIC_INFO_GOAL=GetB(GR_BASIC_INFO.getString(1));
		GR_BASIC_INFO_TARGET=GetB(GR_BASIC_INFO.getString(2));
		GR_BASIC_INFO_SIGANGE=GetB(GR_BASIC_INFO.getString(3));
		GR_BASIC_INFO_SIBUNYA=GetB(GR_BASIC_INFO.getString(4));
		GR_BASIC_INFO_SISOGE=GetB(GR_BASIC_INFO.getString(5));
		GR_BASIC_INFO_SICOMMON=GetB(GR_BASIC_INFO.getString(6));
		GR_BASIC_INFO_SIJUNMUN=GetB(GR_BASIC_INFO.getString(7));
		GR_BASIC_INFO_SIETC=GetB(GR_BASIC_INFO.getString(8));
	}

	//ResultSet GR_BASIC_INFO 객체의 필드 값 초기화 함수
	private void setFieldInitFromGR_BASIC_INFO(){
		GR_BASIC_INFO_GOAL="";
		GR_BASIC_INFO_TARGET="";
		GR_BASIC_INFO_SIGANGE="";
		GR_BASIC_INFO_SIBUNYA="";
		GR_BASIC_INFO_SISOGE="";
		GR_BASIC_INFO_SICOMMON="";
		GR_BASIC_INFO_SIJUNMUN="";
		GR_BASIC_INFO_SIETC="";
	}

	//ResultSet GR_TYPE_INFO 객체에서 필드 값 설정 함수
	private void setFieldVariableFromGR_TYPE_INFO() throws Exception{
		GR_TYPE_INFO_GR_TYPE=GetB(GR_TYPE_INFO.getString(1));
	}

	//ResultSet GR_TYPE_INFO 객체의 필드 값 초기화 함수
	private void setFieldInitFromGR_TYPE_INFO(){
		GR_TYPE_INFO_GR_TYPE="";
	}

	//ResultSet CATEGORY 객체에서 필드 값 설정 함수
	private void setFieldVariableFromCATEGORY() throws Exception{
		CATEGORY_CATEGORY=GetB(CATEGORY.getString(1));
	}

	//ResultSet CATEGORY 객체의 필드 값 초기화 함수
	private void setFieldInitFromCATEGORY(){
		CATEGORY_CATEGORY="";
	}

	//ResultSet tutor_list 객체에서 필드 값 설정 함수
	private void setFieldVariableFromtutor_list() throws Exception{
		tutor_list_TLGUBUN=tutor_list.getDouble(1);
		tutor_list_TLGUBUNNM=GetB(tutor_list.getString(2));
		tutor_list_TOT_CNT=tutor_list.getDouble(3);
		tutor_list_SBGUBUN01=tutor_list.getDouble(4);
		tutor_list_SBGUBUN02=tutor_list.getDouble(5);
		tutor_list_SBGUBUN03=tutor_list.getDouble(6);
	}

	//ResultSet tutor_list 객체의 필드 값 초기화 함수
	private void setFieldInitFromtutor_list(){
		tutor_list_TLGUBUN=0;
		tutor_list_TLGUBUNNM="";
		tutor_list_TOT_CNT=0;
		tutor_list_SBGUBUN01=0;
		tutor_list_SBGUBUN02=0;
		tutor_list_SBGUBUN03=0;
	}

	//ResultSet QUESTION 객체에서 필드 값 설정 함수
	private void setFieldVariableFromQUESTION() throws Exception{
		QUESTION_QUESTION_NO=QUESTION.getDouble(1);
		QUESTION_QUESTION=GetB(QUESTION.getString(2));
		QUESTION_ENOUGH_RAT=GetB(QUESTION.getString(3));
		QUESTION_REGULAR_RAT=GetB(QUESTION.getString(4));
	}

	//ResultSet QUESTION 객체의 필드 값 초기화 함수
	private void setFieldInitFromQUESTION(){
		QUESTION_QUESTION_NO=0;
		QUESTION_QUESTION="";
		QUESTION_ENOUGH_RAT="";
		QUESTION_REGULAR_RAT="";
	}

	//ResultSet GR_MALE 객체에서 필드 값 설정 함수
	private void setFieldVariableFromGR_MALE() throws Exception{
		GR_MALE_CNT=GR_MALE.getDouble(1);
	}

	//ResultSet GR_MALE 객체의 필드 값 초기화 함수
	private void setFieldInitFromGR_MALE(){
		GR_MALE_CNT=0;
	}

	//ResultSet GR_FEMALE 객체에서 필드 값 설정 함수
	private void setFieldVariableFromGR_FEMALE() throws Exception{
		GR_FEMALE_CNT=GR_FEMALE.getDouble(1);
	}

	//ResultSet GR_FEMALE 객체의 필드 값 초기화 함수
	private void setFieldInitFromGR_FEMALE(){
		GR_FEMALE_CNT=0;
	}

	//ResultSet QUEST 객체에서 필드 값 설정 함수
	private void setFieldVariableFromQUEST() throws Exception{
		QUEST_NO=QUEST.getDouble(1);
		QUEST_REGDATE=GetB(QUEST.getString(2));
		QUEST_USERNO=GetB(QUEST.getString(3));
		QUEST_NAME=GetB(QUEST.getString(4));
		QUEST_DEPTH=QUEST.getDouble(5);
		QUEST_REF_NO=QUEST.getDouble(6);
		QUEST_TITLE=GetB(QUEST.getString(7));
		QUEST_CATEGORY=GetB(QUEST.getString(8));
		QUEST_CONTENT=GetB(QUEST.getString(9));
	}

	//ResultSet QUEST 객체의 필드 값 초기화 함수
	private void setFieldInitFromQUEST(){
		QUEST_NO=0;
		QUEST_REGDATE="";
		QUEST_USERNO="";
		QUEST_NAME="";
		QUEST_DEPTH=0;
		QUEST_REF_NO=0;
		QUEST_TITLE="";
		QUEST_CATEGORY="";
		QUEST_CONTENT="";
	}

	//ResultSet ANS 객체에서 필드 값 설정 함수
	private void setFieldVariableFromANS() throws Exception{
		ANS_CONTENT=GetB(ANS.getString(1));
	}

	//ResultSet ANS 객체의 필드 값 초기화 함수
	private void setFieldInitFromANS(){
		ANS_CONTENT="";
	}

	//ResultSet QUESTION3 객체에서 필드 값 설정 함수
	private void setFieldVariableFromQUESTION3() throws Exception{
		QUESTION3_QUESTION_NO=QUESTION3.getDouble(1);
		QUESTION3_QUESTION=GetB(QUESTION3.getString(2));
		QUESTION3_ENOUGH_RAT=GetB(QUESTION3.getString(3));
		QUESTION3_REGULAR_RAT=GetB(QUESTION3.getString(4));
	}

	//ResultSet QUESTION3 객체의 필드 값 초기화 함수
	private void setFieldInitFromQUESTION3(){
		QUESTION3_QUESTION_NO=0;
		QUESTION3_QUESTION="";
		QUESTION3_ENOUGH_RAT="";
		QUESTION3_REGULAR_RAT="";
	}

	//ResultSet QUESTION4 객체에서 필드 값 설정 함수
	private void setFieldVariableFromQUESTION4() throws Exception{
		QUESTION4_QUESTION_NO=QUESTION4.getDouble(1);
		QUESTION4_QUESTION=GetB(QUESTION4.getString(2));
		QUESTION4_ENOUGH_RAT=GetB(QUESTION4.getString(3));
		QUESTION4_REGULAR_RAT=GetB(QUESTION4.getString(4));
	}

	//ResultSet QUESTION4 객체의 필드 값 초기화 함수
	private void setFieldInitFromQUESTION4(){
		QUESTION4_QUESTION_NO=0;
		QUESTION4_QUESTION="";
		QUESTION4_ENOUGH_RAT="";
		QUESTION4_REGULAR_RAT="";
	}

	//ResultSet QUESTION5_1 객체에서 필드 값 설정 함수
	private void setFieldVariableFromQUESTION5_1() throws Exception{
		QUESTION5_1_QUESTION_NO=QUESTION5_1.getDouble(1);
		QUESTION5_1_QUESTION=GetB(QUESTION5_1.getString(2));
		QUESTION5_1_ENOUGH_RAT=GetB(QUESTION5_1.getString(3));
		QUESTION5_1_REGULAR_RAT=GetB(QUESTION5_1.getString(4));
	}

	//ResultSet QUESTION5_1 객체의 필드 값 초기화 함수
	private void setFieldInitFromQUESTION5_1(){
		QUESTION5_1_QUESTION_NO=0;
		QUESTION5_1_QUESTION="";
		QUESTION5_1_ENOUGH_RAT="";
		QUESTION5_1_REGULAR_RAT="";
	}

	//ResultSet QUESTION5_2 객체에서 필드 값 설정 함수
	private void setFieldVariableFromQUESTION5_2() throws Exception{
		QUESTION5_2_NAME=GetB(QUESTION5_2.getString(1));
		QUESTION5_2_SUBJNM=GetB(QUESTION5_2.getString(2));
		QUESTION5_2_TUTOR_RAT=GetB(QUESTION5_2.getString(3));
	}

	//ResultSet QUESTION5_2 객체의 필드 값 초기화 함수
	private void setFieldInitFromQUESTION5_2(){
		QUESTION5_2_NAME="";
		QUESTION5_2_SUBJNM="";
		QUESTION5_2_TUTOR_RAT="";
	}

	//ResultSet QUESTION5_3 객체에서 필드 값 설정 함수
	private void setFieldVariableFromQUESTION5_3() throws Exception{
		QUESTION5_3_NAME=GetB(QUESTION5_3.getString(1));
		QUESTION5_3_SUBJNM=GetB(QUESTION5_3.getString(2));
		QUESTION5_3_TUTOR_RAT=GetB(QUESTION5_3.getString(3));
	}

	//ResultSet QUESTION5_3 객체의 필드 값 초기화 함수
	private void setFieldInitFromQUESTION5_3(){
		QUESTION5_3_NAME="";
		QUESTION5_3_SUBJNM="";
		QUESTION5_3_TUTOR_RAT="";
	}

	//ResultSet QUESTION_JU 객체에서 필드 값 설정 함수
	private void setFieldVariableFromQUESTION_JU() throws Exception{
		QUESTION_JU_QUESTION=GetB(QUESTION_JU.getString(1));
	}

	//ResultSet QUESTION_JU 객체의 필드 값 초기화 함수
	private void setFieldInitFromQUESTION_JU(){
		QUESTION_JU_QUESTION="";
	}

	//ResultSet grgubun_info 객체에서 필드 값 설정 함수
	private void setFieldVariableFromgrgubun_info() throws Exception{
		grgubun_info_SBGUBUN01=grgubun_info.getDouble(1);
		grgubun_info_SBGUBUNPE01=grgubun_info.getDouble(2);
		grgubun_info_SBGUBUN02=grgubun_info.getDouble(3);
		grgubun_info_SBGUBUNPE02=grgubun_info.getDouble(4);
		grgubun_info_SBGUBUN02_1=grgubun_info.getDouble(5);
		grgubun_info_SBGUBUNPE02_1=grgubun_info.getDouble(6);
		grgubun_info_SBGUBUN02_2=grgubun_info.getDouble(7);
		grgubun_info_SBGUBUNPE02_2=grgubun_info.getDouble(8);
		grgubun_info_SBGUBUN02_3=grgubun_info.getDouble(9);
		grgubun_info_SBGUBUNPE02_3=grgubun_info.getDouble(10);
		grgubun_info_SBGUBUN03=grgubun_info.getDouble(11);
		grgubun_info_SBGUBUNPE03=grgubun_info.getDouble(12);
	}

	//ResultSet grgubun_info 객체의 필드 값 초기화 함수
	private void setFieldInitFromgrgubun_info(){
		grgubun_info_SBGUBUN01=0;
		grgubun_info_SBGUBUNPE01=0;
		grgubun_info_SBGUBUN02=0;
		grgubun_info_SBGUBUNPE02=0;
		grgubun_info_SBGUBUN02_1=0;
		grgubun_info_SBGUBUNPE02_1=0;
		grgubun_info_SBGUBUN02_2=0;
		grgubun_info_SBGUBUNPE02_2=0;
		grgubun_info_SBGUBUN02_3=0;
		grgubun_info_SBGUBUNPE02_3=0;
		grgubun_info_SBGUBUN03=0;
		grgubun_info_SBGUBUNPE03=0;
	}

	//ResultSet GR_DETAIL_INFO 객체에서 필드 값 설정 함수
	private void setFieldVariableFromGR_DETAIL_INFO() throws Exception{
		GR_DETAIL_INFO_PERIOD=GetB(GR_DETAIL_INFO.getString(1));
		GR_DETAIL_INFO_CLASSROOM=GetB(GR_DETAIL_INFO.getString(2));
		GR_DETAIL_INFO_GRSEQMAN_NAME=GetB(GR_DETAIL_INFO.getString(3));
	}

	//ResultSet GR_DETAIL_INFO 객체의 필드 값 초기화 함수
	private void setFieldInitFromGR_DETAIL_INFO(){
		GR_DETAIL_INFO_PERIOD="";
		GR_DETAIL_INFO_CLASSROOM="";
		GR_DETAIL_INFO_GRSEQMAN_NAME="";
	}

	//ResultSet qry_QUESTION_LIST 객체에서 필드 값 설정 함수
	private void setFieldVariableFromqry_QUESTION_LIST() throws Exception{
		qry_QUESTION_LIST_QUESTION_NO=qry_QUESTION_LIST.getDouble(1);
		qry_QUESTION_LIST_TOTAL_CNT=qry_QUESTION_LIST.getDouble(2);
		qry_QUESTION_LIST_QUESTION=GetB(qry_QUESTION_LIST.getString(3));
		qry_QUESTION_LIST_QUESTION_GUBUN=GetB(qry_QUESTION_LIST.getString(4));
		qry_QUESTION_LIST_ANSCNT1_RAT=qry_QUESTION_LIST.getDouble(5);
		qry_QUESTION_LIST_ANSCNT2_RAT=qry_QUESTION_LIST.getDouble(6);
		qry_QUESTION_LIST_ANSCNT3_RAT=qry_QUESTION_LIST.getDouble(7);
		qry_QUESTION_LIST_RAT=qry_QUESTION_LIST.getDouble(8);
	}

	//ResultSet qry_QUESTION_LIST 객체의 필드 값 초기화 함수
	private void setFieldInitFromqry_QUESTION_LIST(){
		qry_QUESTION_LIST_QUESTION_NO=0;
		qry_QUESTION_LIST_TOTAL_CNT=0;
		qry_QUESTION_LIST_QUESTION="";
		qry_QUESTION_LIST_QUESTION_GUBUN="";
		qry_QUESTION_LIST_ANSCNT1_RAT=0;
		qry_QUESTION_LIST_ANSCNT2_RAT=0;
		qry_QUESTION_LIST_ANSCNT3_RAT=0;
		qry_QUESTION_LIST_RAT=0;
	}

	//ResultSet QUESTION_LIST 객체에서 필드 값 설정 함수
	private void setFieldVariableFromQUESTION_LIST() throws Exception{
		QUESTION_LIST_QUESTION_NO=QUESTION_LIST.getDouble(1);
		QUESTION_LIST_TOTAL_CNT=QUESTION_LIST.getDouble(2);
		QUESTION_LIST_QUESTION=GetB(QUESTION_LIST.getString(3));
		QUESTION_LIST_QUESTION_GUBUN=GetB(QUESTION_LIST.getString(4));
		QUESTION_LIST_ANSCNT1=GetB(QUESTION_LIST.getString(5));
		QUESTION_LIST_ANSCNT2=GetB(QUESTION_LIST.getString(6));
		QUESTION_LIST_ANSCNT3=GetB(QUESTION_LIST.getString(7));
		QUESTION_LIST_ANSCNT4=GetB(QUESTION_LIST.getString(8));
		QUESTION_LIST_ANSCNT5=GetB(QUESTION_LIST.getString(9));
		QUESTION_LIST_ANSCNT11=QUESTION_LIST.getDouble(10);
		QUESTION_LIST_ANSCNT22=QUESTION_LIST.getDouble(11);
		QUESTION_LIST_ANSCNT33=QUESTION_LIST.getDouble(12);
		QUESTION_LIST_ANSCNT1_RAT=GetB(QUESTION_LIST.getString(13));
		QUESTION_LIST_ANSCNT2_RAT=GetB(QUESTION_LIST.getString(14));
		QUESTION_LIST_ANSCNT3_RAT=GetB(QUESTION_LIST.getString(15));
		QUESTION_LIST_RAT=GetB(QUESTION_LIST.getString(16));
	}

	//ResultSet QUESTION_LIST 객체의 필드 값 초기화 함수
	private void setFieldInitFromQUESTION_LIST(){
		QUESTION_LIST_QUESTION_NO=0;
		QUESTION_LIST_TOTAL_CNT=0;
		QUESTION_LIST_QUESTION="";
		QUESTION_LIST_QUESTION_GUBUN="";
		QUESTION_LIST_ANSCNT1="";
		QUESTION_LIST_ANSCNT2="";
		QUESTION_LIST_ANSCNT3="";
		QUESTION_LIST_ANSCNT4="";
		QUESTION_LIST_ANSCNT5="";
		QUESTION_LIST_ANSCNT11=0;
		QUESTION_LIST_ANSCNT22=0;
		QUESTION_LIST_ANSCNT33=0;
		QUESTION_LIST_ANSCNT1_RAT="";
		QUESTION_LIST_ANSCNT2_RAT="";
		QUESTION_LIST_ANSCNT3_RAT="";
		QUESTION_LIST_RAT="";
	}

	//ResultSet LIST 객체에서 필드 값 설정 함수
	private void setFieldVariableFromLIST() throws Exception{
		LIST_NAME=GetB(LIST.getString(1));
		LIST_SUBJNM=GetB(LIST.getString(2));
		LIST_SUBJ_ANS1=LIST.getDouble(3);
		LIST_SUBJ_ANS2=LIST.getDouble(4);
		LIST_SUBJ_ANS3=LIST.getDouble(5);
		LIST_SUBJ_ANS4=LIST.getDouble(6);
		LIST_SUBJ_ANS5=LIST.getDouble(7);
		LIST_SUBJ_ANS1_RAT=LIST.getDouble(8);
		LIST_SUBJ_ANS2_RAT=LIST.getDouble(9);
		LIST_SUBJ_ANS3_RAT=LIST.getDouble(10);
		LIST_SUBJ_ANS4_RAT=LIST.getDouble(11);
		LIST_SUBJ_ANS5_RAT=LIST.getDouble(12);
		LIST_SUBJ_ANS11=LIST.getDouble(13);
		LIST_SUBJ_ANS22=LIST.getDouble(14);
		LIST_SUBJ_ANS33=LIST.getDouble(15);
		LIST_SUBJ_ANS11_RAT=GetB(LIST.getString(16));
		LIST_SUBJ_ANS22_RAT=GetB(LIST.getString(17));
		LIST_SUBJ_ANS33_RAT=GetB(LIST.getString(18));
		LIST_SUBJ_ANS_AVG=GetB(LIST.getString(19));
		LIST_STIME_ANS1=LIST.getDouble(20);
		LIST_STIME_ANS2=LIST.getDouble(21);
		LIST_STIME_ANS3=LIST.getDouble(22);
		LIST_STIME_ANS4=LIST.getDouble(23);
		LIST_STIME_ANS5=LIST.getDouble(24);
		LIST_STIME_ANS1_RAT=LIST.getDouble(25);
		LIST_STIME_ANS2_RAT=LIST.getDouble(26);
		LIST_STIME_ANS3_RAT=LIST.getDouble(27);
		LIST_STIME_ANS4_RAT=LIST.getDouble(28);
		LIST_STIME_ANS5_RAT=LIST.getDouble(29);
		LIST_STIME_ANS11=LIST.getDouble(30);
		LIST_STIME_ANS22=LIST.getDouble(31);
		LIST_STIME_ANS33=LIST.getDouble(32);
		LIST_STIME_ANS11_RAT=GetB(LIST.getString(33));
		LIST_STIME_ANS22_RAT=GetB(LIST.getString(34));
		LIST_STIME_ANS33_RAT=GetB(LIST.getString(35));
		LIST_STIME_ANS_AVG=GetB(LIST.getString(36));
		LIST_TUTOR_ANS1=LIST.getDouble(37);
		LIST_TUTOR_ANS2=LIST.getDouble(38);
		LIST_TUTOR_ANS3=LIST.getDouble(39);
		LIST_TUTOR_ANS4=LIST.getDouble(40);
		LIST_TUTOR_ANS5=LIST.getDouble(41);
		LIST_TUTOR_ANS1_RAT=LIST.getDouble(42);
		LIST_TUTOR_ANS2_RAT=LIST.getDouble(43);
		LIST_TUTOR_ANS3_RAT=LIST.getDouble(44);
		LIST_TUTOR_ANS4_RAT=LIST.getDouble(45);
		LIST_TUTOR_ANS5_RAT=LIST.getDouble(46);
		LIST_TUTOR_ANS11=LIST.getDouble(47);
		LIST_TUTOR_ANS22=LIST.getDouble(48);
		LIST_TUTOR_ANS33=LIST.getDouble(49);
		LIST_TUTOR_ANS11_RAT=GetB(LIST.getString(50));
		LIST_TUTOR_ANS22_RAT=GetB(LIST.getString(51));
		LIST_TUTOR_ANS33_RAT=GetB(LIST.getString(52));
		LIST_SUBJ_ANS_TOTAL=LIST.getDouble(53);
		LIST_STIME_ANS_TOTAL=LIST.getDouble(54);
		LIST_TUTOR_ANS_TOTAL=LIST.getDouble(55);
		LIST_TUTOR_ANS_AVG=GetB(LIST.getString(56));
		LIST_TOTAL_AVG=GetB(LIST.getString(57));
	}

	//ResultSet LIST 객체의 필드 값 초기화 함수
	private void setFieldInitFromLIST(){
		LIST_NAME="";
		LIST_SUBJNM="";
		LIST_SUBJ_ANS1=0;
		LIST_SUBJ_ANS2=0;
		LIST_SUBJ_ANS3=0;
		LIST_SUBJ_ANS4=0;
		LIST_SUBJ_ANS5=0;
		LIST_SUBJ_ANS1_RAT=0;
		LIST_SUBJ_ANS2_RAT=0;
		LIST_SUBJ_ANS3_RAT=0;
		LIST_SUBJ_ANS4_RAT=0;
		LIST_SUBJ_ANS5_RAT=0;
		LIST_SUBJ_ANS11=0;
		LIST_SUBJ_ANS22=0;
		LIST_SUBJ_ANS33=0;
		LIST_SUBJ_ANS11_RAT="";
		LIST_SUBJ_ANS22_RAT="";
		LIST_SUBJ_ANS33_RAT="";
		LIST_SUBJ_ANS_AVG="";
		LIST_STIME_ANS1=0;
		LIST_STIME_ANS2=0;
		LIST_STIME_ANS3=0;
		LIST_STIME_ANS4=0;
		LIST_STIME_ANS5=0;
		LIST_STIME_ANS1_RAT=0;
		LIST_STIME_ANS2_RAT=0;
		LIST_STIME_ANS3_RAT=0;
		LIST_STIME_ANS4_RAT=0;
		LIST_STIME_ANS5_RAT=0;
		LIST_STIME_ANS11=0;
		LIST_STIME_ANS22=0;
		LIST_STIME_ANS33=0;
		LIST_STIME_ANS11_RAT="";
		LIST_STIME_ANS22_RAT="";
		LIST_STIME_ANS33_RAT="";
		LIST_STIME_ANS_AVG="";
		LIST_TUTOR_ANS1=0;
		LIST_TUTOR_ANS2=0;
		LIST_TUTOR_ANS3=0;
		LIST_TUTOR_ANS4=0;
		LIST_TUTOR_ANS5=0;
		LIST_TUTOR_ANS1_RAT=0;
		LIST_TUTOR_ANS2_RAT=0;
		LIST_TUTOR_ANS3_RAT=0;
		LIST_TUTOR_ANS4_RAT=0;
		LIST_TUTOR_ANS5_RAT=0;
		LIST_TUTOR_ANS11=0;
		LIST_TUTOR_ANS22=0;
		LIST_TUTOR_ANS33=0;
		LIST_TUTOR_ANS11_RAT="";
		LIST_TUTOR_ANS22_RAT="";
		LIST_TUTOR_ANS33_RAT="";
		LIST_SUBJ_ANS_TOTAL=0;
		LIST_STIME_ANS_TOTAL=0;
		LIST_TUTOR_ANS_TOTAL=0;
		LIST_TUTOR_ANS_AVG="";
		LIST_TOTAL_AVG="";
	}

	//ResultSet QUESTION1 객체에서 필드 값 설정 함수
	private void setFieldVariableFromQUESTION1() throws Exception{
		QUESTION1_QUESTION_NO=QUESTION1.getDouble(1);
		QUESTION1_QUESTION=GetB(QUESTION1.getString(2));
		QUESTION1_ENOUGH_RAT=GetB(QUESTION1.getString(3));
		QUESTION1_REGULAR_RAT=GetB(QUESTION1.getString(4));
	}

	//ResultSet QUESTION1 객체의 필드 값 초기화 함수
	private void setFieldInitFromQUESTION1(){
		QUESTION1_QUESTION_NO=0;
		QUESTION1_QUESTION="";
		QUESTION1_ENOUGH_RAT="";
		QUESTION1_REGULAR_RAT="";
	}

	//ResultSet QUESTION2 객체에서 필드 값 설정 함수
	private void setFieldVariableFromQUESTION2() throws Exception{
		QUESTION2_QUESTION_NO=QUESTION2.getDouble(1);
		QUESTION2_QUESTION=GetB(QUESTION2.getString(2));
		QUESTION2_SUB_CNT1=QUESTION2.getDouble(3);
		QUESTION2_SUB_CNT1_RAT=GetB(QUESTION2.getString(4));
		QUESTION2_SUB_CNT1_ANS=GetB(QUESTION2.getString(5));
		QUESTION2_SUB_CNT2=QUESTION2.getDouble(6);
		QUESTION2_SUB_CNT2_RAT=GetB(QUESTION2.getString(7));
		QUESTION2_SUB_CNT2_ANS=GetB(QUESTION2.getString(8));
		QUESTION2_SUB_CNT3=QUESTION2.getDouble(9);
		QUESTION2_SUB_CNT3_RAT=GetB(QUESTION2.getString(10));
		QUESTION2_SUB_CNT3_ANS=GetB(QUESTION2.getString(11));
		QUESTION2_SUB_CNT4=QUESTION2.getDouble(12);
		QUESTION2_SUB_CNT4_RAT=GetB(QUESTION2.getString(13));
		QUESTION2_SUB_CNT4_ANS=GetB(QUESTION2.getString(14));
		QUESTION2_SUB_CNT5=QUESTION2.getDouble(15);
		QUESTION2_SUB_CNT5_RAT=GetB(QUESTION2.getString(16));
		QUESTION2_SUB_CNT5_ANS=GetB(QUESTION2.getString(17));
		QUESTION2_ENOUGH_RAT=GetB(QUESTION2.getString(18));
		QUESTION2_REGULAR_RAT=GetB(QUESTION2.getString(19));
	}

	//ResultSet QUESTION2 객체의 필드 값 초기화 함수
	private void setFieldInitFromQUESTION2(){
		QUESTION2_QUESTION_NO=0;
		QUESTION2_QUESTION="";
		QUESTION2_SUB_CNT1=0;
		QUESTION2_SUB_CNT1_RAT="";
		QUESTION2_SUB_CNT1_ANS="";
		QUESTION2_SUB_CNT2=0;
		QUESTION2_SUB_CNT2_RAT="";
		QUESTION2_SUB_CNT2_ANS="";
		QUESTION2_SUB_CNT3=0;
		QUESTION2_SUB_CNT3_RAT="";
		QUESTION2_SUB_CNT3_ANS="";
		QUESTION2_SUB_CNT4=0;
		QUESTION2_SUB_CNT4_RAT="";
		QUESTION2_SUB_CNT4_ANS="";
		QUESTION2_SUB_CNT5=0;
		QUESTION2_SUB_CNT5_RAT="";
		QUESTION2_SUB_CNT5_ANS="";
		QUESTION2_ENOUGH_RAT="";
		QUESTION2_REGULAR_RAT="";
	}

	//-----고정 데이터 초기화 함수-----
	private void initConstVarient(){
		sheet10_A2="설문 분석 결과보고";
		sheet10_A5="  통해 자체평가를 실시하고,  향후 교육운영에 반영·보완하여 본";
		sheet10_A6="  교육 과정에 대한 질적 향상을 도모하고자 함 ";
		sheet10_A9=1;
		sheet10_B9=" 교 육 개 요";
		sheet10_A10="  ○ 교육기간 :";
		sheet10_A11="○ 교육장소 :";
		sheet10_A12="○ 교육인원 :";
		sheet10_A13="○ 교육구분 :";
		sheet10_A14="○ 과 정 장 :";
		sheet10_A16=2;
		sheet10_B16=" 교 과 편 성";
		sheet10_A18="구분";
		sheet10_C18="계";
		sheet10_E18="소양";
		sheet10_F18="직무분야";
		sheet10_K18="행정및기타";
		sheet10_F19="소계";
		sheet10_G19="강의";
		sheet10_H19="사이버";
		sheet10_I19="토론,참여";
		sheet10_A20="시간";
		sheet10_A21="비율(%)";
		sheet10_A23=3;
		sheet10_B23=" 강 사 배 치";
		sheet10_A25="구분";
		sheet10_D25="계(%)";
		sheet10_F25="소양";
		sheet10_H25="직무";
		sheet10_J25="참여토론";
		sheet10_A26="계";
		sheet20_A1="   1. 세부 항목별 설문 결과";
		sheet20_A3="<교육총괄 >";
		sheet20_C3="만족";
		sheet20_D3="보통";
		sheet20_E3="불만";
		sheet20_F3="평균";
		sheet30_A1="   2. 교과목별 운영에 대한 평가";
		sheet30_A3="교과목";
		sheet30_B3="강사명";
		sheet30_C3="강의기법";
		sheet30_G3="강의태도";
		sheet30_K3="전문성";
		sheet30_O3="총점";
		sheet30_C4="만족";
		sheet30_D4="보통";
		sheet30_E4="불만";
		sheet30_F4="평균";
		sheet30_G4="만족";
		sheet30_H4="보통";
		sheet30_I4="불만";
		sheet30_J4="평균";
		sheet30_K4="만족";
		sheet30_L4="보통";
		sheet30_M4="불만";
		sheet30_N4="평균";
		sheet40_A1=5;
		sheet40_B1=" 과정장 의견";
	}

	//-----페이지 스킵 관련 함수-----
	//페이지 스킵시 호출되는 함수로서 페이지 번호를 증가시키고 페이지 지시문 출력 그리고 Y좌표 초기화
	//매개변수에 따라 해당 쉬트의 배경 이미지, 머리글 밴드, 바닥글 밴드 함수 호출
	private void pageSkip(int nIndex) throws Exception{
		nXCurPos=nXStartPos;
		nYCurPos=nYStartPos;
		nPageNum=nPageNum+1;
		out.print("-- " + nPageNum + " PAGE --\r");

		switch(nIndex){
			case 10:		//SHEET=Sheet=1   FRAME=0에서 페이지 스킵시
			break;
			case 20:		//SHEET=Sheet=2   FRAME=0에서 페이지 스킵시
			break;
			case 30:		//SHEET=Sheet=3   FRAME=0에서 페이지 스킵시
			break;
			case 40:		//SHEET=Sheet=4   FRAME=0에서 페이지 스킵시
			break;
		}
	}

	//페이지 스킵이 필요한지 검사하는 함수
	private boolean isPageSkip(int nTestPos){
		if(nTestPos>nYEndPos){
			return true;
		}else{
			return false;
		}
	}

	//-----공통 함수 선언-----
	private void getScriptHeader(String paper, String size, String value, String orient) throws Exception{
		out.print("--SCRIPT_START31--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void getSheetPaperInfo(String paper, String size, String value, String orient) throws Exception{
		out.print("--PAPER_INFO--\r");
		out.print("PAPER=" + paper + "\r");
		out.print("PAPER_SIZE=" + size + "\r");
		out.print("PAPER_SETTING_VALUE=" + value + "\r");
		out.print("ORIENTATION=" + orient + "\r");
	}

	private void initSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bFirstFrame){
		if(bFirstFrame){
			nStartPage=nMaxPage+1;
			nYLastPos=0;
		}
		nPageNum=nStartPage;
		nYStartPos=constStartY;
		nYEndPos=constEndY;
		nYCurPos=nYStartPos;
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
	}

	private void initChildSheetVariant(int constStartX, int constStartY, int constEndX, int constEndY, boolean bIsMultiFrame, boolean bIsFirstFrame){
		nXStartPos=constStartX;
		nXEndPos=constEndX;
		nXCurPos=nXStartPos;
		nYStartPos=constStartY;
		nYEndPos=constEndY;

		if(bIsMultiFrame){
			if(bIsFirstFrame){
				nStartPage=nPageNum;
				nYSavePos=nYCurPos;
				nYLastPos=0;
			}else{
				nPageNum=nStartPage;
				nYCurPos=nYSavePos;
			}
		}else{
			nStartPage=nPageNum;
		}
	}

	//Empty Row만으로 구성되어 출력 위치를 조정하기 위한 VoidBand 함수
	//nRangePos - VoidBand의 출력 영역
	//nIndex - PageSkip 함수 호출시 전달할 쉬트 인덱스
	private boolean voidBandNoneData(int nRangePos, int nIndex) throws Exception{
		int nTestPos;
		nTestPos=nYCurPos+nRangePos;
		if(isPageSkip(nTestPos)){
			pageSkip(nIndex);
			return true;
		}else{
			nYCurPos=nYCurPos+nRangePos;
			return false;
		}
	}

	private String Get0(String str){
		if(str==null){
			return "0";
		}else{
			if(str.equals("")){
				return "0";
			}else{
				return str;
			}
		}
	}

	private String GetB(String str){
		if(str==null){
			return "";
		}else{
			return str;
		}
	}

	private double SUM(double accVal, double tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(double accVal, long tmpVal){
		return(accVal+(double)tmpVal);
	}

	private long SUM(long accVal, long tmpVal){
		return(accVal+tmpVal);
	}

	private double SUM(long accVal, double tmpVal){
		return((double)accVal+tmpVal);
	}

	private long COUNT(long accuCNT){
		return ++accuCNT;
	}

	private long MIN(long maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(long maxV, double maxTempV){
		if((double)maxV<=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, double maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MIN(double maxV, long maxTempV){
		if(maxV<=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}
	private long MAX(long maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(long maxV, double maxTempV){
		if((double)maxV>=maxTempV){return (double)maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, double maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return maxTempV;}
	}

	private double MAX(double maxV, long maxTempV){
		if(maxV>=maxTempV){return maxV;}
		else{return (double)maxTempV;}
	}

	private double AVG(double sumVal, long cntVal){
		return(sumVal/cntVal);
	}

	private double AVG(long sumVal, long cntVal){
		return((double)sumVal/(double)cntVal);
	}

	private String aiReplace(String strAll, String strSrc, String strDest) {
		while(strAll.indexOf(strSrc) != -1) {
			strAll = strAll.substring(0, strAll.indexOf(strSrc)) + strDest + strAll.substring(strAll.indexOf(strSrc) + strSrc.length(), strAll.length());
		}
		return strAll;
	}

	private String toDate() {
		SimpleDateFormat dateFormat=new SimpleDateFormat("'#SERVERDATE#'yyyy/MM/dd/HH/mm/ss");
		java.util.Date currentDate = new java.util.Date();
		return dateFormat.format(currentDate);
	}

	final String toKor (String en){
		if(en==null){
			return "";
		}
		try{
			return new String(en.getBytes("8859_1"), "KSC5601");
		}catch(Exception e){return en;}
	}
	//문자의 폭을 조사하여 데이터의 출력 높이를 자동적으로 조정하는 함수
	private int getPrintHeight(String data, int[] charWidth, int fontSize, int cellWidth, int cellHeight, int nMaxHeight){
		int ch;
		int len = 95;
		int width = 0;
		int asciiWidth = 0;
		int linePitch = (int)(fontSize*1.4);
		int height = linePitch;
		int size = data.length();
		cellWidth = cellWidth-4;
		for (int i = 0; i < size; i++) {
			ch = data.charAt(i);

			if(ch<32 && !(ch==10 || ch==20 || ch==13)){
				continue;
			}

			if(ch>0x7F){
				width += asciiWidth;

				if (width > cellWidth) {
					width = asciiWidth;
					height += linePitch;
				}
				asciiWidth = 0;

				width += charWidth[len];
				if (width > cellWidth) {
					width = charWidth[len];
					height += linePitch;
				}
			} else if (ch==10 || ch==20) {
				width = 0;
				asciiWidth = 0;
				height += linePitch;
			} else if (ch==13) {
				width = 0;
				asciiWidth = 0;
				height += linePitch;
				if ((i != size-1) && (10 == (int)data.charAt(i+1))) {
					i++;
				}
			} else {
				if ((ch>64 && ch<91) || (ch>96 && ch<123)) {
					asciiWidth += charWidth[ch-32];
					if (i==size-1){
						width = width + asciiWidth;
						if (width>cellWidth){
							height += linePitch;
						}
					}
				} else {
					width += asciiWidth;

					if (width > cellWidth) {
						width = asciiWidth;
						height += linePitch;
					}

					asciiWidth = 0;

					width += charWidth[ch-32];
					if (width > cellWidth) {
						width = charWidth[ch-32];
						height += linePitch;
					}
				}
			}
		}

		if (height>cellHeight) {
			height=height-cellHeight;
		}else{
			height=0;
		}

		height = (int)MAX((long)height,(long)nMaxHeight);
		return height;
	}
}
%>
